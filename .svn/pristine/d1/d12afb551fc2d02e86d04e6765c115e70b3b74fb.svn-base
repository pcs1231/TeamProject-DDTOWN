<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.core" prefix="c"%>
<%@ taglib uri="jakarta.tags.fmt" prefix="fmt"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec"%>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DDTOWN - 직원 시스템</title>
    <%@ include file ="../modules/headerPart.jsp" %>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0/dist/chartjs-plugin-datalabels.min.js"></script>
    <style type="text/css">
	    .dashboard-grid .card-icon {
            font-size: 2.5em; /* 아이콘 크기 조정 */
            margin-bottom: 10px;
        }
        .dashboard-grid .summary-card .count {
            font-size: 2em; /* 숫자 크기 조정 */
        }
        .main-value {
            font-size: 2.5em;
            font-weight: bold;
            color: #3498db;
            text-align: center;
            margin-bottom: 10px;
        }
        .sub-info {
            font-size: 0.9em;
            color: #666;
            text-align: center;
            margin-top: 5px;
        }
        .trend-indicator {
            font-weight: bold;
            display: inline-block;
            margin-left: 10px;
        }
        .trend-up { color: #28a745; }
        .trend-down { color: #dc3545; }
    </style>
</head>
<body>
	<sec:authentication property="principal.employeeVO" var="empVO"/>
    <div class="emp-container">
        <%@ include file="./modules/header.jsp" %>

        <div class="emp-body-wrapper">
            <%@ include file="./modules/aside.jsp" %>

            <main class="emp-content">

            	<div class="portal-welcome-message">
                    <h2>DDTOWN 직원 시스템</h2>
                    <p>환영합니다, ${empVO.peoName} <small>(${empVO.empDepartNm} ${empVO.empPositionNm})</small> 님! 왼쪽 메뉴를 통해 각 항목을 관리할 수 있습니다.</p>
                    <p class="current-time-text">현재 시간: <span id="currentTime"></span></p>
                </div>

                <div class="dashboard-grid">
                	<div class="dashboard-card summary-card">
                		<a href="${pageContext.request.contextPath}/emp/edms/approvalBox" class="emp-menu-item">
	                		<div style="" class="card-icon"><i class="fas fa-file-signature"></i></div>
	                        <div class="card-content">
	                            <h3>전자 결재</h3>
	                            <p class="emp-menu-description">기안서 작성, 결재 요청 확인 및 문서 관리를 진행합니다.</p>
	                        </div>
                        </a>
                	</div>
                	<div class="dashboard-card summary-card">
                		<a href="${pageContext.request.contextPath}/emp/audition/schedule" class="emp-menu-item">
	                		<div class="card-icon"><i class="fas fa-microphone-alt"></i></div>
	                        <div class="card-content">
	                            <h3>오디션 관리</h3>
	                            <p class="emp-menu-description">오디션 공고 등록, 지원자 정보 관리 및 심사를 진행합니다.</p>
	                        </div>
                        </a>
                	</div>
                	<div class="dashboard-card summary-card">
                		<a href="${pageContext.request.contextPath}/emp/group/group-management" class="emp-menu-item">
	                		<div class="card-icon"><i class="fas fa-users"></i></div>
	                        <div class="card-content">
	                            <h3>아티스트 그룹 관리</h3>
	                            <p class="emp-menu-description">커뮤니티 게시글 모니터링, 사용자 관리 및 운영 업무를 수행합니다.</p>
	                        </div>
                        </a>
                	</div>
                	<div class="dashboard-card summary-card">
                		<a href="${pageContext.request.contextPath}/emp/concert/schedule/list" class="emp-menu-item">
	                		<div class="card-icon"><i class="fas fa-ticket-alt"></i></div>
	                        <div class="card-content">
	                            <h3>콘서트 관리</h3>
	                            <p class="emp-menu-description">콘서트 정보 등록, 예매 현황 확인 및 관련 통계를 관리합니다.</p>
	                        </div>
                        </a>
                	</div>
                </div>

                <div class="row g-2 dashboard-statics-grid">
	                <section class="card shadow-sm mb-4">
	                    <div class="card-header bg-white d-flex justify-content-between align-items-center">
	                        <h3 class="h5 mb-0"><i class="fas fa-comments me-2"></i> 커뮤니티 현황</h3>
	                    </div>
	                    <div>
			                <div class="main-value"><span class="postCount">1,234</span> <span style="color: #333;">개</span> <span class="trend-indicator trend-up">▲ 5%</span></div>
			                <div class="sub-info">이번 달 게시글 수 (지난 달 대비)</div>
			            </div>
	                    <div class="card-body chart-body">
	                        <canvas id="communityPostsChart"></canvas>
	                    </div>
	                </section>
	                <section class="card shadow-sm mb-4" >
	                	<div class="card-header bg-white d-flex justify-content-between align-items-center">
	                        <h3 class="h5 mb-0"><i class="fas fa-comments me-2"></i> 전체 멤버십 현황</h3>
	                    </div>
	                    <div class="card-body chart-body">
	                        <canvas id="membershipChart"></canvas>
	                    </div>
	                </section>
                </div>

                <div class="row g-2 dashboard-static-grid" style="height: 400px;">
	                <section class="card shadow-sm mb-4">
	                    <div class="card-header bg-white d-flex justify-content-between align-items-center">
	                        <h3 class="h5 mb-0"><i class="fas fa-comments me-2"></i> 콘서트 D-Day 현황</h3>
	                    </div>
	                    <div class="card-body chart-body">
	                        <canvas id="concertDdayChart"></canvas>
	                    </div>
	                </section>
	                <section class="card shadow-sm mb-4">
	                    <div class="card-header bg-white d-flex justify-content-between align-items-center">
	                        <h3 class="h5 mb-0"><i class="fas fa-wallet me-2"></i> 오디션 현황</h3>
	                    </div>
	                    <div class="card-body chart-body">
	                        <canvas id="auditionChart"></canvas>
	                    </div>
	                </section>
                </div>

                <div class="row g-2 dashboard-static-grid" style="height: 400px;">
	                <section class="card shadow-sm mb-4">
	                    <div class="card-header bg-white d-flex justify-content-between align-items-center">
	                        <h3 class="h5 mb-0"><i class="fas fa-comments me-2"></i> 콘서트 매출 현황</h3>
	                    </div>
	                    <div class="card-body chart-body">
	                        <canvas id="concertRevenueChart"></canvas>
	                    </div>
	                </section>
                </div>
            </main>
        </div>
    </div>
<%@ include file="../modules/footerPart.jsp" %>

<%@ include file="../modules/sidebar.jsp" %>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // 현재 시간 표시 함수
    function updateCurrentTime() {
        const now = new Date();
        const options = {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit',
            hour12: false // 24시간 형식
        };
        document.getElementById('currentTime').textContent = now.toLocaleDateString('ko-KR', options);
    }

    // 페이지 로드 시 바로 호출
    updateCurrentTime();
    // 1초마다 시간 업데이트
    setInterval(updateCurrentTime, 1000);

 	// 차트관련 객체생성
    const chartMap = {};

    getCommunityPostsChart();
	function getCommunityPostsChart(){
		$.ajax({
			url : "/api/admin/stat/getCommunityPostsChart",
			type : "get",
			success : function(res){
				let {postJsonData,upPercent,thisMonthCount} = res;
				$(".postCount").eq(0).text(thisMonthCount);
				if(upPercent.startsWith("▼")){
					$(".trend-indicator").eq(0).removeClass("trend-up").addClass("trend-down").text(upPercent);
				}else{
					$(".trend-indicator").eq(0).removeClass("trend-down").addClass("trend-up").text(upPercent);
				}

				const postData = JSON.parse(postJsonData);
				let labels = postData.map(v => v.DT);
				let datas = postData.map(v => v.COUNT);
				createChart('communityPostsChart', 'line',
			    	    {
			    	        labels: labels,
			    	        datasets: [
			    	        	{
				    	            label: '게시물 수',
				    	            data: datas,
				    	            borderColor: '#34495e',
				    	            tension: 0.2,
				    	            fill: false
			    	        	}
			   	        	]
			    	    },
			    	    {
			    	        responsive: true,
			    	        maintainAspectRatio: false,
			    	        plugins: {
			    	            legend: {
			    	                display: true
			    	            }
			    	        }
			    	    }
			    	);

			},
			error : function(err){
				console.log(err);
			}
		})
	}

	concertDdayChart()
	function concertDdayChart(){
		$.ajax({
			url : "/api/admin/stat/getConcertDdayChart",
			type : "get",
			success : function(res){
				let {concertJsonData} = res;
				let concertData = JSON.parse(concertJsonData);
				console.log(concertData);
				let labels = concertData.map(v => v.CONCERT_NM);
				let ddayData = concertData.map(v => v.DDAY);
				createChart('concertDdayChart', 'bar',
			            {
			                labels: labels,
			                datasets: [{
			                    label: '남은 일수 (D-Day)',
			                    data: ddayData,
			                    backgroundColor: [
			                        'rgba(255, 99, 132, 0.6)', // D-Day 임박 콘서트 강조
			                        'rgba(255, 159, 64, 0.6)',
			                        'rgba(75, 192, 192, 0.6)',
			                        'rgba(54, 162, 235, 0.6)'
			                    ],
			                    borderColor: [
			                        'rgba(255, 99, 132, 1)',
			                        'rgba(255, 159, 64, 1)',
			                        'rgba(75, 192, 192, 1)',
			                        'rgba(54, 162, 235, 1)'
			                    ],
			                    borderWidth: 1
			                }]
			            },
			            {
			                indexAxis: 'y', // 수평 막대 차트
			                responsive: true,
			                maintainAspectRatio: false,
			                plugins: {
			                    title: {
			                        display: true,
			                        text: '예정된 콘서트 D-Day 현황'
			                    },
			                    legend: {
			                        display: false
			                    }
			                },
			                scales: {
			                    x: {
			                        beginAtZero: true,
			                        title: {
			                            display: true,
			                            text: '남은 일수'
			                        },
			                        reverse: true // D-Day가 짧은 것부터 왼쪽으로 오게
			                    },
			                    y: {
			                        title: {
			                            display: true,
			                            text: '콘서트'
			                        },
			                        ticks : {
			                        	callback : function(value,index,ticks){
			                        		const originalLabel = this.getLabelForValue(value);
			                                const maxLength = 25;

			                                if (originalLabel.length > maxLength) {
			                                    return originalLabel.substring(0, maxLength - 1) + '...';
			                                }
			                                return originalLabel;
			                        	}
			                        }
			                    }
			                }
			            }
			        )
			},
			error : function(err){
				console.log(err);
			}
		})
	}

    membershipTotalData()

    function membershipTotalData(){
    	$.ajax({
    		url : "/api/admin/stat/membershipTotalData",
			type : "get",
			success : function(res){
				let {membershipJsonData} = res;
				const membershipData = JSON.parse(membershipJsonData);
				const totalMembers = Object.values(membershipData).reduce((sum, current) => sum + current.COUNT, 0);
				const labels = membershipData.map(v => v.NAME);
				const datas = membershipData.map(v => v.COUNT);
				createChart('membershipChart', 'doughnut',
        			{
		                labels: labels,
		                datasets: [{
		                    label: '회원 수',
		                    data: datas,
		                    backgroundColor: [
		                        'rgba(54, 162, 235, 0.7)',
		                        'rgba(255, 99, 132, 0.7)',
		                        'rgba(255, 206, 86, 0.7)',
		                        'rgba(75, 192, 192, 0.7)',
		                        'rgba(153, 102, 255, 0.7)',
		                        'rgba(255, 159, 64, 0.7)'
		                    ],
		                    borderColor: [
		                        'rgba(54, 162, 235, 1)',
		                        'rgba(255, 99, 132, 1)',
		                        'rgba(255, 206, 86, 1)',
		                        'rgba(75, 192, 192, 1)',
		                        'rgba(153, 102, 255, 1)',
		                        'rgba(255, 159, 64, 1)'
		                    ],
		                    borderWidth: 1
		                }]
		            },
		            {
		                responsive: true,
		                maintainAspectRatio: false,
		                plugins: {
		                    title: {
		                        display: false,
		                        text: `전체 멤버십 현황 (총 \${totalMembers}명)`,
		                        position : "center"
		                    },
		                    legend: {
		                        position: 'right' // 범례 위치
		                    },
		                    tooltip: {
		                        callbacks: {
		                            label: function(context) {
		                                const label = context.label || '';
		                                const value = context.raw;
		                                const percentage = ((value / totalMembers) * 100).toFixed(1) + '%';
		                                return `\${label}: \${value}명 (\${percentage})`;
		                            }
		                        }
		                    },
		                    datalabels :{
		                    	formatter: function(value, context) {
		                    			const index = context.dataIndex;
		                               const percentage = ((value / totalMembers) * 100).toFixed(1) + '%';
		                               return `\${labels[index]} \n \${value}명`;
		                           },
		                    	color : "black",
		              			anchor : "center",
		              			align : "center"
		                    }
		                }
		            },true);
			},
			error : function(err){
				console.log(err);
			}
   		})
   	}

    auditionChart()

    function auditionChart(){
    	$.ajax({
    		url : "/api/admin/stat/getAuditionChart",
    		type : "get",
    		success : function(res){
    			let {auditionJsonData} = res;
    			let auditionData = JSON.parse(auditionJsonData);
    			console.log(auditionData);
    			let labels = auditionData.map(v=> v.NAME);
    			let datas = auditionData.map(v=> v.CNT);
    			createChart('auditionChart', 'bar',
    		            {
    		                labels: labels,
    		                datasets: [{
    		                    label: '현재 지원자 수',
    		                    data: datas,
    		                    backgroundColor: 'rgba(75, 192, 192, 0.6)',
    		                    borderColor: 'rgba(75, 192, 192, 1)',
    		                    borderWidth: 1
    		                }]
    		            },
    		            {
    		                responsive: true,
    		                maintainAspectRatio: false,
    		                plugins: {
    		                    title: {
    		                        display: true,
    		                        text: '진행 중인 오디션별 지원자 수'
    		                    },
    		                    legend: {
    		                        display: true
    		                    }
    		                },
    		                scales: {
    		                    y: {
    		                        beginAtZero: true,
    		                        title: {
    		                            display: true,
    		                            text: '지원자 수'
    		                        }
    		                    },
    		                    x:{
    		                    	ticks : {
			                        	callback : function(value,index,ticks){
			                        		const originalLabel = this.getLabelForValue(value);
			                                const maxLength = 25;

			                                if (originalLabel.length > maxLength) {
			                                    return originalLabel.substring(0, maxLength - 1) + '...';
			                                }
			                                return originalLabel;
			                        	}
			                        }
    		                    }
    		                }
    		            }
    		        );
    		},
    		error : function(err){
    			console.log(err);
    		}
    	});
    }

    concertRevChart();
    function concertRevChart(){
    	$.ajax({
    		url : "/api/admin/stat/getConcertRevChart",
    		type : "get",
    		success : function(res){
    			let {concertRevJsonData} = res;
    			let concertRevData = JSON.parse(concertRevJsonData)
    			let labels = concertRevData.map(v=>v.DT)
    			let datas = concertRevData.map(v=>v.PRICE)
    			createChart('concertRevenueChart', 'line',
    		            {
    		                labels: labels,
    		                datasets: [{
    		                    label: '매출액 (원)',
    		                    data: datas,
    		                    borderColor: 'rgba(153, 102, 255, 1)', // 녹색 계열
    		                    backgroundColor : 'rgba(153, 102, 255, 0.7)',
    		                    tension: 0.1,
    		                    fill: true
    		                }]
    		            },
    		            {
    		                responsive: true,
    		                maintainAspectRatio: false,
    		                plugins: {
    		                    title: {
    		                        display: true,
    		                        text: '월별 콘서트 총 매출액 추이'
    		                    },
    		                    legend: {
    		                        display: true
    		                    },
    		                    tooltip: {
    		                        callbacks: {
    		                            label: function(context) {
    		                                const value = context.raw;
    		                                return `\${value.toLocaleString()}원`; // 금액 형식으로 표시
    		                            }
    		                        }
    		                    }
    		                },
    		                scales: {
    		                    y: {
    		                        beginAtZero: true,
    		                        title: {
    		                            display: true,
    		                            text: '매출액 (원)'
    		                        },
    		                        ticks: {
    		                            callback: function(value, index, values) {
    		                                return value.toLocaleString(); // Y축 금액 형식
    		                            }
    		                        }
    		                    },
    		                    x: {
    		                        title: {
    		                            display: true,
    		                            text: '월'
    		                        }
    		                    }
    		                }
    		            }
    		        );

    		},
    		error : function(err){
    			console.log(err);
    		}
    	});
    }

	 // 다른 차트들 초기화
    function createChart(id, type, data, options, plugin = false) {
        const ctx = document.getElementById(id);
        if(chartMap[id] != null){
        	chartMap[id].destroy();
        }

        if (ctx) {
        	let myChart = null;
        	if(plugin){
        		myChart= new Chart(ctx.getContext('2d'), {
	                type: type,
	                data: data,
	                plugins : [ChartDataLabels],
	                options: options
	            });
        	}else{
	            myChart = new Chart(ctx.getContext('2d'), {
	                type: type,
	                data: data,
	                options: options
	            });
        	}
            chartMap[id] = myChart;
        }
    }
})
</script>
</body>
</html>