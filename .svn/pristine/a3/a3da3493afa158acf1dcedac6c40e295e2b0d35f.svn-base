package kr.or.ddit.vo;

import java.util.List;

import lombok.Data;

@Data
public class PaginationInfoVO<T> {

	private int totalRecord;		// 총 게시글 수
	private int totalPage;			// 총 페이지 수
	private int currentPage;	// 현재 페이지
	private int screenSize = 10;	// 페이지 당 게시글 수
	private int blockSize = 5;		// 페이지 블록 수
	private int startRow;			// 시작 row
	private int endRow;				// 끝 row
	private int startPage;			// 시작 페이지
	private int endPage;			// 끝 페이지
	private List<T> dataList;		// 결과를 넣을 데이터 리스트
	private String searchType;		// 검색 타입
	private String searchWord;		// 검색 단어
	private String searchCode;		// 검색 단어2
	
	private String searchStatType;	// 1대1 문의 상태 코드 검색
	
	public PaginationInfoVO() {}

	public PaginationInfoVO(int screenSize, int blockSize) {
		super();
		this.screenSize = screenSize;
		this.blockSize = blockSize;
	}
	
	public void setCurrentPage(int currentPage) {
		this.currentPage = currentPage;			// 현재 페이지
		this.endRow = currentPage * screenSize;	// 끝 row
		this.startRow = endRow - (screenSize - 1);
		// 마지막 페이지
		this.endPage = (currentPage + (blockSize - 1)) / blockSize * blockSize;
		// 시작 페이지
		this.startPage = endPage - (blockSize - 1);
	}
	
	public void setTotalRecord(int totalRecord) {
		this.totalRecord = totalRecord;
		this.totalPage = (int) Math.ceil(this.totalRecord / (double) screenSize);
	}
	
	public String getPagingHTML() {
		StringBuffer html = new StringBuffer();
		 html.append("<ul class='pagination pagination-sm m-0 justify-content-center'>");
		 
		// 이전 1 2 3 4 5 다음
		// css양식 정해지면 양식쪽에 이름정해서 삽입
		 if (startPage > 1) {
		        html.append("<li class='page-item'>"); // Bootstrap 5 클래스
		        // admin_portal.css의 .ea-pagination a 스타일이 적용되도록 함
		        html.append("<a class='page-link' href='#' data-page='").append(startPage - blockSize).append("'>이전</a>");
		        html.append("</li>");
		    } else {
		        // 비활성화된 "이전" 버튼 (선택적)
		        html.append("<li class='page-item disabled'><span class='page-link'>이전</span></li>");
		    }

		    for (int i = startPage; i <= (endPage < totalPage ? endPage : totalPage); i++) {
		        if (i == currentPage) {
		            // 현재 페이지: admin_portal.css의 a.active 스타일을 위해 a 태그 사용 및 active 클래스 추가
		            html.append("<li class='page-item active'>"); // Bootstrap 5 클래스
		            html.append("<span class='page-link' href='#' data-page='").append(i).append("'>").append(i).append("</span>");
		            html.append("</li>");
		        } else {
		            html.append("<li class='page-item'>");
		            html.append("<a class='page-link' href='' data-page='").append(i).append("'>").append(i).append("</a>");
		            html.append("</li>");
		        }
		    }

		    // "다음" 버튼
		    if (endPage < totalPage) {
		        html.append("<li class='page-item'>");
		        html.append("<a class='page-link' href='' data-page='").append(endPage + 1).append("'>다음</a>");
		        html.append("</li>");
		    } else {
		        // 비활성화된 "다음" 버튼 (선택적)
		        html.append("<li class='page-item disabled'><span class='page-link'>다음</span></li>");
		    }

		    html.append("</ul>");
		    return html.toString();
	}
}
