package kr.or.ddit.ddtown.mapper.concert.schedule;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;

import kr.or.ddit.vo.PaginationInfoVO;
import kr.or.ddit.vo.concert.ConcertSeatMapVO;
import kr.or.ddit.vo.concert.ConcertVO;
import kr.or.ddit.vo.concert.TicketVO;

/**
 * 
 */
@Mapper
public interface IConcertScheduleMapper {
	
	/** 콘서트 일정 목록 조회 */
    public List<ConcertVO> selectConcertList(PaginationInfoVO<ConcertVO> pagingVO);
    
    /** 콘서트 일정 개수 조회 (검색 조건 포함) */
    public int selectConcertCount(PaginationInfoVO<ConcertVO> pagingVO); 

	/** 콘서트 일정 등록 */
    public int insertSchedule(ConcertVO concertVO);

    /** 콘서트 일정 상세 조회 */
    public ConcertVO selectSchedule(int concertNo); 

    /** 콘서트 일정 수정 */
    public int updateSchedule(ConcertVO concertVO);

    /** 콘서트 일정 삭제 */
    public int deleteSchedule(int concertNo);

    // 콘서트 일정 불러오기
	public List<ConcertVO> getConcertList(ConcertVO concertVO);

	// 해당 콘서트 좌석 정보 조회
	public List<ConcertSeatMapVO> getConcertSeatMap(int concertNo);

	// 해당 콘서트 전체 좌석 조회
	public List<TicketVO> getAllTicketList(int concertNo);

	
	/**
	 * 콘서트 티켓 예매 업데이트
	 * @param ticketToUpdate
	 */
	public void updateTicketReservation(TicketVO ticketToUpdate);

	// 상태 필터링용 콘서트 일정 리스트 조회
	public List<ConcertVO> selectConcertListWithStatusFilter(Map<String, Object> params);

	// 상태 필터링용 콘서트 일정 개수 조회
	public int selectConcertCountWithStatusFilter(Map<String, Object> params);

	// 상태 필터링 건수 조회용
	public List<Map<String, Object>> selectConcertCountsByStatus();
}
