<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.fmt"  prefix="fmt"%>
<%@ taglib uri="jakarta.tags.core" prefix="c" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>콘서트 일정 상세정보</title>
<meta name="_csrf" content="${_csrf.token}"/>
<meta name="_csrf_header" content="${_csrf.headerName}"/>
<%@ include file="../../../modules/headerPart.jsp" %>
<style>
	body { font-family: Arial, sans-serif; margin: 0; background-color: #f8f9fa; color: #333; }
	h1 { text-align: center; color: #2c3e50; margin-bottom: 30px; padding-bottom: 15px; border-bottom: 2px solid #3498db; }
	.emp-detail-container {
	    border: 1px solid #e0e0e0;
	    border-radius: 8px;
	    background-color: #ffffff;
	    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
	}
	.emp-detail-section {
	    margin-bottom: 25px;
	    padding-bottom: 20px;
	    border-bottom: 1px dashed #eee;
	}
	.emp-detail-section:last-child {
	    border-bottom: none;
	    margin-bottom: 0;
	    padding-bottom: 0;
	}
	.emp-detail-item {
	    margin-bottom: 12px;
	    line-height: 1.7;
	    display: flex;
	    flex-wrap: wrap;
	}
	.emp-detail-item strong {
	    display: inline-block;
	    width: 180px; /* 레이블 너비 고정 */
	    font-weight: 600;
	    color: #555;
	    margin-right: 10px;
	}
	.emp-detail-item span {
	    flex-grow: 1;
	    word-break: break-word;
	}
	.emp-detail-item pre { /* CLOB 내용 표시용 */
	    background-color: #f9f9f9;
	    padding: 15px;
	    border-radius: 4px;
	    border: 1px solid #eee;
	    white-space: pre-wrap; /* 줄바꿈 및 공백 유지 */
	    word-wrap: break-word;
	    font-family: Consolas, 'Courier New', monospace;
	    font-size: 0.95em;
	    margin-top: 5px;
	    width: 100%;
	}
	.emp-actions {
	    border-top: 2px solid #3498db;
	    text-align: right;
	}
	.emp-actions a, .emp-actions button {
	    padding: 10px 18px;
	    margin-left: 10px;
	    border-radius: 5px;
	    text-decoration: none;
	    font-size: 0.95em;
	    border: none;
	    cursor: pointer;
	    transition: background-color 0.2s ease-in-out;
	}
	.emp-actions .list-btn { background-color: #6c757d; color: white; }
	.emp-actions .list-btn:hover { background-color: #5a6268; }
	.emp-actions .edit-btn { background-color: #ffc107; color: #212529; }
	.emp-actions .edit-btn:hover { background-color: #e0a800; }
	.emp-actions .delete-btn { background-color: #dc3545; color: white; }
	.emp-actions .delete-btn:hover { background-color: #c82333; }
	.message {
	    padding: 15px;
	    margin-bottom: 20px;
	    border-radius: 5px;
	    text-align: center;
	    font-size: 1.05em;
	}
	.error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
	.img-preview { max-width: 300px; max-height: 300px; border: 1px solid #ddd; margin-top: 5px; display: block;}
	.attachment-list { list-style-type: none; padding-left: 0; margin-top: 10px; }
        .attachment-list li { margin-bottom: 10px; padding: 8px; background-color: #f9f9f9; border: 1px solid #eee; border-radius: 4px; display: flex; align-items: center; }
        .attachment-list img.file-preview {
            max-width: 150px;
            max-height: 150px;
            object-fit: contain;
            border: 1px solid #ddd;
            margin-right: 10px;
            border-radius: 3px;
        }
        .attachment-list a { text-decoration: none; color: #007bff; }
        .attachment-list a:hover { text-decoration: underline; }
</style>
</head>
<body>
	<div class="emp-detail-container">
	<%@ include file="../../modules/header.jsp" %>
        <c:if test="${not empty errorMessage}">
            <div class="message error">${errorMessage}</div>
        </c:if>
		<div class="emp-body-wrapper">
				<%@ include file="../../modules/aside.jsp" %>
		<main class="emp-content" style="position:relative; min-height:600px;">
		<h1>콘서트 일정 상세조회</h1>
        <c:if test="${not empty concertVO}">
            <div class="emp-detail-section">
                <div class="detail-item"><strong>콘서트 번호:</strong> <span>${concertVO.concertNo}</span></div>
                <div class="detail-item"><strong>콘서트명:</strong> <span><c:out value="${concertVO.concertNm}"/></span></div>
            </div>

            <div class="emp-detail-section">
                <div class="detail-item"><strong>아티스트 그룹:</strong>
                    <span>
                        <c:out value="${concertVO.artGroupName}"/>
                        <c:if test="${not empty concertVO.artGroupNo}"> (번호: ${concertVO.artGroupNo})</c:if>
                    </span>
                </div>
                <div class="emp-detail-item"><strong>공연장:</strong>
                    <span>
                        <c:out value="${concertVO.concertHallName}"/>
                        <c:if test="${not empty concertVO.concertHallNo}"> (번호: ${concertVO.concertHallNo})</c:if>
                    </span>
                </div>
            </div>

            <div class="emp-detail-section">
                <div class="detail-item"><strong>콘서트 카테고리 코드:</strong> <span>${concertVO.concertCatCode}</span></div>
                <div class="detail-item"><strong>예매 상태 코드:</strong> <span>${concertVO.concertReservationStatCode}</span></div>
                <div class="detail-item"><strong>콘서트 상태 코드:</strong> <span>${concertVO.concertStatCode}</span></div>
            </div>

            <div class="emp-detail-section">
                <div class="emp-detail-item"><strong>온라인 콘서트 여부:</strong> <span>${concertVO.concertOnlineYn == 'Y' ? 'Yes (온라인)' : 'No (오프라인)'}</span></div>
            </div>

            <div class="emp-detail-section">
                <div class="detail-item"><strong>공연일:</strong> <span><fmt:formatDate value="${concertVO.concertDate}" pattern="yyyy년 MM월 dd일"/></span></div>
                <div class="detail-item"><strong>콘서트 주소:</strong> <span><c:out value="${concertVO.concertAddress}"/></span></div>
                <div class="detail-item"><strong>(예매/이벤트)시작일시:</strong> <span><fmt:formatDate value="${concertVO.concertStartDate}" pattern="yyyy년 MM월 dd일 HH시 mm분"/></span></div>
                <div class="detail-item"><strong>(예매/이벤트)종료일시:</strong> <span><fmt:formatDate value="${concertVO.concertEndDate}" pattern="yyyy년 MM월 dd일 HH시 mm분"/></span></div>
                <div class="detail-item"><strong>진행 시간:</strong> <span>${concertVO.concertRunningTime} 분</span></div>
            </div>

            <div class="emp-detail-section">
                <div class="detail-item"><strong>콘서트 안내사항:</strong></div>
                <pre><c:out value="${concertVO.concertGuide}"/></pre>
            </div>
            
            <c:if test="${not empty concertVO.attachmentFileList}">
            <div class="emp-detail-section">
                <div class="emp-detail-item"><strong>첨부파일:</strong></div>
                <ul class="attachment-list">
                    <c:forEach var="file" items="${concertVO.attachmentFileList}">
                        <li>
                            <c:choose>
                                <c:when test="${file.fileMimeType != null && file.fileMimeType.startsWith('image/')}">
                                    <a href="<c:url value='${file.webPath}'/>" target="_blank" title="클릭하여 원본 이미지 보기">
                                        <img src="<c:url value='${file.webPath}'/>" alt="<c:out value='${file.fileOriginalNm}'/>" class="file-preview"/>
                                    </a>
                                    <a href="<c:url value='${file.webPath}'/>" download="${file.fileOriginalNm}">
                                        <c:out value="${file.fileOriginalNm}"/> (<c:out value="${file.fileFancysize}"/>) - 다운로드
                                    </a>
                                </c:when>
                                <c:otherwise>
                                    <a href="<c:url value='${file.webPath}'/>" download="${file.fileOriginalNm}">
                                        <c:out value="${file.fileOriginalNm}"/> (<c:out value="${file.fileFancysize}"/>)
                                    </a>
                                </c:otherwise>
                            </c:choose>
                        </li>
                    </c:forEach>
                </ul>
            </div>
        </c:if>
        </c:if>
        </main>
        </div>

            <div class="emp-actions">
                <c:url var="listBackUrl" value="/emp/concert/schedule/list">
                    <c:if test="${not empty searchType and not empty searchWord}">
                        <c:param name="searchType" value="${searchType}"/>
                        <c:param name="searchWord" value="${searchWord}"/>
                    </c:if>
                    <c:if test="${not empty currentPage && currentPage > 1}">
                        <c:param name="currentPage" value="${currentPage}"/>
                    </c:if>
                </c:url>
                <a href="${listBackUrl}" class="list-btn">목록으로</a>
            	<sec:authorize access="isAuthenticated() and hasRole('ROLE_EMPLOYEE')">
	                <c:url var="modUrlWithParams" value="/emp/concert/schedule/mod/${concertVO.concertNo}">
                        <c:if test="${not empty searchType and not empty searchWord}">
                            <c:param name="searchType" value="${searchType}"/>
                            <c:param name="searchWord" value="${searchWord}"/>
                        </c:if>
                        <c:if test="${not empty currentPage && currentPage > 1}">
                            <c:param name="currentPage" value="${currentPage}"/>
                        </c:if>
                    </c:url>
                    <a href="${modUrlWithParams}" class="edit-btn">수정하기</a>
	                <form action="<c:url value='/emp/concert/schedule/delete/${concertVO.concertNo}'/>" method="post" style="display:inline;">
	                	<input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" />
	                    <button type="submit" class="delete-btn" onclick="return confirm('정말로 이 [${concertVO.concertNm}] 일정을 삭제하시겠습니까?');">삭제하기</button>
	                </form>
                </sec:authorize>
            </div>
        <c:if test="${empty concertVO and empty errorMessage}">
             <p style="text-align:center; font-size: 1.1em; color: #555;">해당 콘서트 정보를 찾을 수 없습니다.</p>
             <div class="emp-actions" style="text-align:center;">
				<c:url var="listBackUrl" value="/emp/concert/schedule/list">
				    <c:if test="${not empty searchType}">
				        <c:param name="searchType" value="${searchType}"/>
				    </c:if>
				    <c:if test="${not empty searchWord}">
				        <c:param name="searchWord" value="${searchWord}"/>
				    </c:if>
				    <c:if test="${not empty currentPage && currentPage > 1}">
				        <c:param name="currentPage" value="${currentPage}"/>
				    </c:if>
				</c:url>
				<a href="${listBackUrl}" class="list-btn">목록으로</a>
            </div>
        </c:if>
        <footer class="emp-footer">
            <p>&copy; 2025 DDTOWN Entertainment. All rights reserved. (직원 전용)</p>
        </footer>
    </div>
	<script type="text/javascript">
	const logoutButton = document.querySelector('.btn emp-logout-btn');
	if (logoutButton) {
	    logoutButton.addEventListener('click', function(e) {
	        e.preventDefault();
	        if (confirm('로그아웃 하시겠습니까?')) {
	            alert('로그아웃 되었습니다.');
	        }
	    });
	}
	document.addEventListener('DOMContentLoaded', function() {
        // 메뉴 토글 기능
        const navItemsWithSubmenu = document.querySelectorAll('.emp-sidebar .emp-nav-item.has-submenu');
        navItemsWithSubmenu.forEach(item => {
            const arrow = item.querySelector('.submenu-arrow');
            item.addEventListener('click', function(event) {
                event.preventDefault();
                const parentLi = this.parentElement;
                const submenu = this.nextElementSibling;
                if (submenu && submenu.classList.contains('emp-submenu')) {
                    const parentUl = parentLi.parentElement;
                    if (parentUl) {
                        Array.from(parentUl.children).forEach(siblingLi => {
                            if (siblingLi !== parentLi) {
                                const siblingSubmenuControl = siblingLi.querySelector('.emp-nav-item.has-submenu.open');
                                if (siblingSubmenuControl) {
                                    const siblingSubmenu = siblingSubmenuControl.nextElementSibling;
                                    siblingSubmenuControl.classList.remove('open');
                                    if (siblingSubmenu && siblingSubmenu.classList.contains('emp-submenu')) {
                                        siblingSubmenu.style.display = 'none';
                                    }
                                    const siblingArrow = siblingSubmenuControl.querySelector('.submenu-arrow');
                                    if (siblingArrow) siblingArrow.style.transform = 'rotate(0deg)';
                                }
                            }
                        });
                    }
                }
                this.classList.toggle('open');
                if (submenu && submenu.classList.contains('emp-submenu')) {
                    submenu.style.display = this.classList.contains('open') ? 'block' : 'none';
                    if (arrow) arrow.style.transform = this.classList.contains('open') ? 'rotate(90deg)' : 'rotate(0deg)';
                }
            });
        });
        // 현재 페이지 URL 기반으로 사이드바 메뉴 활성화
        const currentFullHref = window.location.href;
        document.querySelectorAll('.emp-sidebar .emp-nav-item[href]').forEach(link => {
            const linkHrefAttribute = link.getAttribute('href');
            if (linkHrefAttribute && linkHrefAttribute !== "#" && currentFullHref.endsWith(linkHrefAttribute)) {
                link.classList.add('active');
                let currentActiveElement = link;
                while (true) {
                    const parentLi = currentActiveElement.parentElement;
                    if (!parentLi) break;
                    const parentSubmenuUl = parentLi.closest('.emp-submenu');
                    if (parentSubmenuUl) {
                        parentSubmenuUl.style.display = 'block';
                        const controllingAnchor = parentSubmenuUl.previousElementSibling;
                        if (controllingAnchor && controllingAnchor.tagName === 'A' && controllingAnchor.classList.contains('has-submenu')) {
                            controllingAnchor.classList.add('active', 'open');
                            const arrow = controllingAnchor.querySelector('.submenu-arrow');
                            if (arrow) {
                                arrow.style.transform = 'rotate(90deg)';
                            }
                            currentActiveElement = controllingAnchor;
                        } else {
                            break;
                        }
                    } else {
                        break;
                    }
                }
            }
        });
    });
	</script>
</body>
</html>