<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.fmt" prefix="fmt" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<%@ taglib uri="jakarta.tags.functions" prefix="fn" %>
<%@ taglib uri="jakarta.tags.core" prefix="c"%>
<%@ taglib uri="jakarta.tags.fmt" prefix="fmt"%>
<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>나의 프로필</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/plugins/fontawesome-free/css/all.min.css">
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/my_profile.css">
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/communityModal.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script type="text/javascript">
	<c:if test="${not empty message }">
		Swal.fire({
				title : "${message }",
				icon : "success",
				draggable : true
			});
		<c:remove var="message" scope="request"/>
		<c:remove var="message" scope="session"/>
	</c:if>
	function sweetAlert(type, msg){
		Swal.fire({
			title : msg,
			icon : type,
			draggable : true
		});
	}
</script>
<style type="text/css">
	.apt-tabs { background-color: #ffffff; border: 1px solid #e0e0e0; border-radius: 8px; margin-top: 20px; padding: 0; display: flex; justify-content: space-around; }
	.apt-tabs .tab-item { padding: 15px 10px; text-decoration: none; color: #6c757d; font-weight: bold; position: relative; font-size: 0.95em; border-bottom: 3px solid transparent; transition: color 0.2s, border-bottom-color 0.2s; text-align: center; flex-grow: 1; }
	.apt-tabs .tab-item:not(:last-child) { border-right: 1px solid #e0e0e0; }
	.apt-tabs .tab-item:hover { color: #1c1e21; }
	.apt-tabs .tab-item.active { color: #8a2be2; border-bottom-color: #8a2be2; }
	.modal-dialog.modal-fullscreen-custom > .btn-close.btn-close-white{
		top : 10px;
		right : 50px;
	}
	.modal-dialog.modal-fullscreen-custom .modal-content{
		min-width : 80vw;
		width: 85vw;
	}
	/* 게시물 카드 스타일 */
    .post-card {
        margin-bottom: 20px; /* 각 게시물 카드 아래 여백 */
        border-radius: 12px; /* 카드 모서리 둥글게 */
        overflow: hidden; /* 이미지 모서리가 둥글게 잘리도록 */
        transition: all 0.2s ease-in-out; /* 마우스 오버 전환 효과 */
    }
    .post-card:hover {
        transform: translateY(-3px); /* 살짝 위로 뜨는 효과 */
        box-shadow: 0 8px 16px rgba(0,0,0,0.15); /* 그림자 강화 */
    }

	/* 게시물 이미지 컨테이너 스타일 */
    .post-images-container {
        display: flex;
        gap: 5px; /* 이미지 사이 간격 */
        margin-bottom: 15px; /* 이미지 아래 내용과의 간격 */
        overflow: hidden; /* 이미지가 넘치면 숨김 */
    }
    /* 게시물 개별 이미지 스타일 (한 줄에 최대 2개) */
    .post-images-container .post-single-img {
        width: 50%; /* 한 줄에 2개씩 배치되도록 50% 너비 */
        height: 300px; /* 높이 고정 */
        object-fit: cover; /* 이미지가 잘리지 않고 영역을 채우도록 */
        border-radius: 8px; /* 이미지 모서리 둥글게 */
    }
    /* 이미지가 하나만 있을 경우 너비 조정 */
    .post-images-container.single-img .post-single-img {
        width: 50%;
    }

    /* 본문 내용 스타일 */
    .post-content {
        font-size: 0.95rem;
        line-height: 1.5;
        color: #333;
    }

    /* 좋아요/댓글 아이콘 및 텍스트 스타일 */
    .post-meta-bottom .icon-text {
        font-size: 1rem;
        font-weight: bold;
    }
    .post-meta-bottom .icon-text i {
        margin-right: 5px;
        font-size: 1.1rem; /* 아이콘 크기 약간 키우기 */
    }
    /* 파일 아이콘 정렬을 위한 스타일 */
    .post-content-text .file-icon { /* 클래스 이름 변경 */
        vertical-align: middle; /* 아이콘과 텍스트를 중간에 정렬 */
        margin-right: 5px; /* 텍스트와의 간격 */
    }
    /* 모달 내 이미지 스타일 */
    .modal-img-full {
        max-width: 100%;
        height: auto;
        display: block;
        margin: 0 auto 15px auto; /* 중앙 정렬 및 하단 여백 */
        border-radius: 8px;
    }
    .comment-avatar{
		width: 32px;
		height : 32px;
	}
</style>
</head>

<body>

	<%@ include file= "../../modules/communityHeader.jsp" %>
	<ul class="nav apt-tabs" id="comuTab" role="tabList">
		<li class="nav-item" role="presentation">
			<a class="tab-item" href="${pageContext.request.contextPath}/community/gate/${artGroupNo}/apt#artistPostList" >아티스트</a>
		</li>
		<li class="nav-item" role="presentation">
			<a class="tab-item" href="${pageContext.request.contextPath}/community/gate/${artGroupNo}/apt#fanPostList" >팬</a>
		</li>
		<li class="nav-item" role="presentation" >
			<a class="tab-item" href="${pageContext.request.contextPath}/community/gate/${artGroupNo}/apt#liveList" >라이브</a>
		</li>
		<li class="nav-item" role="presentation">
			<a class="tab-item" href="${pageContext.request.contextPath}/community/schedule/${artGroupNo}" >스케쥴</a>
		</li>
		<li class="nav-item" role="presentation">
			<a class="tab-item" href="${pageContext.request.contextPath}/community/notice/${artGroupNo}" >공지사항</a>
		</li>
	</ul>
  <main class="profile-main">
    <header class="profile-header">
      <div class="profile-header-inner">
        <div class="profile-avatar">
          <img src="${profileVO.comuProfileImg}" alt="프로필 이미지">
        </div>
        <div class="profile-nickname" id="profileNickname">${profileVO.comuNicknm}</div>
      </div>
    </header>
    <nav class="profile-tabs">
      <button class="tab active" data-tab="posts">포스트</button>
      <button class="tab" data-tab="comments">댓글</button>
    </nav>
    <section class="profile-tab-content" id="postsTab" style="display:block;">
    	<c:choose>
    		<c:when test="${empty profileVO.postList or profileVO.postList[0].comuPostNo eq 0}">
		      <div class="no-content">아직 작성한 포스트가 없습니다.</div>
    		</c:when>
    		<c:otherwise>
   				<div class="posts-list-container">
				    <c:forEach items="${profileVO.postList}" var="post">
					    <div class="card post-card shadow-sm">

					        <div class="card-header bg-white border-0 pb-0 pt-3 px-3">
					            <div class="d-flex align-items-center justify-content-between">
				                	<a href="${pageContext.request.contextPath}/community/${post.artGroupNo}/profile/${post.writerProfile.comuProfileNo}" style="text-decoration: none; color:black;">
						                <div class="d-flex align-items-center">
						                    <img src="${post.writerProfile.comuProfileImg}" class="rounded-circle comment-avatar" alt="프로필 이미지">
						                    <div class="ms-2">
						                        <strong class="d-block">${post.writerProfile.comuNicknm}</strong>
						                        <small class="text-muted">
						                            <fmt:formatDate value="${post.comuPostModDate}" pattern="yyyy.MM.dd HH:mm"/>
						                        </small>
						                    </div>
						                </div>
				                	</a>
					                <div class="dropdown">
					                    <button class="btn btn-link text-secondary p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
					                        <i class="bi bi-three-dots-vertical"></i>
					                    </button>
					                    <ul class="dropdown-menu">
					                        <c:if test="${post.writerProfile.comuProfileNo == myComuProfileNo}">
					                            <li>
					                                <button class="dropdown-item postUpdateBtn"
					                                    data-bs-toggle="modal"
					                                    data-bs-target="#postUpdateModal"
					                                    data-comu-post-no="${post.comuPostNo}"
					                                    data-comu-post-content="${post.comuPostContent}"
					                                    data-file-group-no="${post.fileGroupNo}"
					                                    >수정</button>
					                            </li>
					                            <li><button class="dropdown-item text-danger postDeleteBtn" data-comu-post-no="${post.comuPostNo}" >삭제</button></li>
					                        </c:if>
					                        <c:if test="${post.writerProfile.comuProfileNo != myComuProfileNo}">
					                            <li><button class="dropdown-item text-danger postReportBtn" data-comu-post-no="${post.comuPostNo}" >신고</button></li>
					                        </c:if>
					                    </ul>
					                </div>
					            </div>
					        </div>

					        <div class="card-body detailBox"
					             style="cursor:pointer;"
					             data-comu-post-no="${post.comuPostNo}"
					             data-bs-toggle="modal" data-bs-target="#postModal"
					        >
					            <c:if test="${not empty post.postFiles}">
					                <div class="post-images-container ${fn:length(post.postFiles) == 1 ? 'single-img' : ''}">
					                    <c:forEach items="${post.postFiles}" var="file" begin="0" end="1">
					                        <img src="${file.webPath}" class="post-single-img" alt="게시물 이미지">
					                    </c:forEach>
					                </div>
					            </c:if>
					            <p class="card-text post-content post-content-text">
					                <c:if test="${fn:length(post.comuPostContent) > 100}">
					                    ${fn:substring(post.comuPostContent,0,100)}... <span class="text-primary small fw-bold">더 보기</span>
					                </c:if>
					                <c:if test="${fn:length(post.comuPostContent) <= 100}">
					                    ${post.comuPostContent}
					                </c:if>
					            </p>
					        </div>

					        <hr class="my-3 mx-3">

					        <div class="post-meta-bottom d-flex justify-content-start align-items-center px-3 pb-3">
					            <span class="post-likes text-danger me-4 icon-text <c:if test="${post.likeYn eq 'Y'}">active</c:if>" style="cursor: pointer;"
					            	data-comu-post-no="${post.comuPostNo}" data-comu-profile-no="${myComuProfileNo}"
					    			data-board-type-code="${post.boardTypeCode}" data-art-group-no="${post.artGroupNo}" data-like-yn="${post.likeYn}"
					            >
					                <c:set var="heart" value="bi-heart"/>
					                <c:if test="${post.likeYn eq 'Y' }">
					                    <c:set var="heart" value="bi-heart-fill"/>
					                </c:if>
					                <i class="bi ${heart}"></i>
					                <span class="likeCount">${post.comuPostLike}</span>

					            </span>
					            <span class="post-comments text-info icon-text"
					                  style="cursor:pointer;"
					                  data-bs-toggle="modal"
					                  data-bs-target="#postModal"
					                  data-comu-post-no="${post.comuPostNo}"
					            >
					                <i class="bi bi-chat"></i>
					                <span>${post.comuPostReplyCount}</span>
					            </span>
					        </div>
					    </div>
					</c:forEach>
				</div>
    		</c:otherwise>
    	</c:choose>
    </section>
    <section class="profile-tab-content" id="commentsTab" style="display:none;">
    	<c:choose>
    		<c:when test="${empty profileVO.replyList}">
		      <div class="no-content">아직 작성한 댓글이 없습니다.</div>
    		</c:when>
    		<c:otherwise>
    			<c:forEach items="${profileVO.replyList}" var="reply">
				    <div class="comment-list-item mb-3" id="replyContainer">
				        <div class="card  shadow-sm border-0"  >
				            <div class="card-body detailBox" style="cursor:pointer;" data-comu-post-no="${reply.comuPostNo}" data-comu-reply-no="${reply.comuReplyNo}" data-bs-toggle="modal" data-bs-target="#postModal">
			                	<div class="d-flex align-items-start mb-2 bg-light p-2 rounded">
				                    <span>
				                       <i class="bi bi-chat-square-text-fill text-primary me-2"></i>
				                    </span>
				                    <div class="d-flex flex-column flex-grow-1">
				                        <span class="text-dark fw-bold mb-1">${reply.comuPostContent}</span>
				                        <small class="text-muted fw-normal">${reply.postMember.comuNicknm}</small>
				                    </div>
				                </div>
				                <hr class="my-2"/>
				                <div class="p-2">
				                    <p class="card-text text-secondary mb-0">
				                        <i class="bi bi-reply-fill text-info me-2"></i> ${reply.comuReplyContent}
				                    </p>
				                </div>
				            </div>
				        </div>
				    </div>
				</c:forEach>
    		</c:otherwise>
    	</c:choose>
    </section>
  </main>

  <div id="footer-placeholder"></div>
<div class="modal fade" id="postModal" tabindex="-1" aria-labelledby="postModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen-custom">
         <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>

        <div class="modal-content">
            <div class="modal-body p-0">
                <div class="d-flex h-100">

                    <div class="post-pane" id="postBox">

                    </div>

                    <div class="comment-pane">
					    <div class="comment-pane-header">
					        <strong class="mx-auto" id="replyCount"></strong>
					    </div>

					    <div class="comment-pane-body" id="replyContent">

					    </div>

					    <div class="comment-pane-footer">
					    	<form id="replyForm">
									<input type="hidden" id="myComuProfileNo" name="myComuProfileNo" value="${myComuProfileNo}" />
									<input type="hidden" id="boardTypeCode" name="boardTypeCode" />
									<input type="hidden" id="comuPostNo" name="comuPostNo" />
									<input type="hidden" id="artGroupNo" name="artGroupNo"/>
							    <div class="input-group">
						        	<textarea class="form-control" id="comuReplyContent" placeholder="댓글을 입력하세요." aria-label="댓글 입력" rows="1" style="resize: none;"></textarea>
						        	<button class="btn btn-primary" type="button" id="commentSubmitBtn">등록</button>
							    </div>
							</form>
						</div>
					</div>

                </div>
            </div>
        </div>
    </div>
</div>
<!-- 본문 수정 모달 -->
<div class="modal fade" id="postUpdateModal" tabindex="-1" aria-labelledby="postUpdateModal" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen-custom">
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>

        <div class="modal-content">
            <div class="modal-body p-0">
                <div class="d-flex h-100">
                    <div class="post-pane" id="postUpdateModalContentBox">
                    	<form id="updateForm">
	                        <div class="p-3">
	                            <h4>게시물 수정</h4>
	                            <input type="hidden" name="comuPostNo" id="updatePostNo">
	                            <input type="hidden" name="fileGroupNo" id="fileGroupNo">
	                            <div class="mb-3">
	                                <label for="updatePostContent" class="form-label">내용</label>
	                                <div id="previewContainer">

	                                </div>
	                                <textarea class="form-control" id="updatePostContent" name="comuPostContent" rows="10"></textarea>
	                            </div>
	                            <div class="form-check form-check-reverse mb-3">
			                        <label class="form-check-label" for="checkMbspYn"> 멤버쉽 전용 여부</label>
			                        <input class="form-check-input" type="checkbox" value="" name="comuPostMbspYn" id="checkMbspYn">
		                        </div>
	                            <div class="mb-3">
	                                <label for="updatePostFiles" class="form-label">첨부파일</label>
	                                <input type="file" class="form-control" id="updatePostFiles" name="files" accept="image/*" multiple/>
	                            </div>

	                            <div class="d-flex justify-content-end gap-2">
		                            <button type="button" class="btn btn-success" id="savePostUpdateBtn">저장</button>
		                            <button type="button" class="btn btn-secondary"
		                                    data-bs-toggle="modal" id="cancelPostUpdateBtn">취소</button>
	                            </div>
	                        </div>
                    	</form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
  <%@ include file="../../modules/footerPart.jsp" %>
</body>
<script type="text/javascript">
// 탭 전환
document.querySelectorAll('.profile-tabs .tab').forEach(tab => {
  tab.addEventListener('click', function() {
    document.querySelectorAll('.profile-tabs .tab').forEach(t => t.classList.remove('active'));
    this.classList.add('active');
    document.getElementById('postsTab').style.display = this.dataset.tab === 'posts' ? 'block' : 'none';
    document.getElementById('commentsTab').style.display = this.dataset.tab === 'comments' ? 'block' : 'none';
  });
});


$(function(){
	const postModal = $("#postModal"); // 해당 포스트 혹은 댓글이달린 원본글을 보여줄 모달
	const postUpdateModal = $("#postUpdateModal"); // 해당 포스트 혹은 댓글이달린 원본글을 보여줄 모달
	const detailBox = $(".detailBox"); // 자신이 쓴 글이나 댓글 div
	const commentSubmitBtn = $("#commentSubmitBtn");

	postModal.on("show.bs.modal",function(e){
		let comuPostNo = e.relatedTarget.getAttribute("data-comu-post-no");
		displayPostModal(comuPostNo);
	});

	// 좋아요 댓글수 동기화
	postModal.on("hidden.bs.modal",function(){
		const savedLikeStatus = postModal.data('currentLikeStatus');
		const replyCountInfo = postModal.data("replyCountInfo");
		if(savedLikeStatus){
			let {isLiked,comuPostNo,likeCount} = savedLikeStatus
			const mainLikeButton = $(`.post-likes[data-comu-post-no="\${comuPostNo}"]`);
			if(mainLikeButton){
				const likeIcon = mainLikeButton.find('i'); // 버튼 안의 i 태그(아이콘)를 찾음
		        const likeCountSpan = mainLikeButton.find('.likeCount');

				if(isLiked){
					mainLikeButton.addClass("active");
					likeIcon.removeClass("bi-heart").addClass("bi-heart-fill");
				}else{
					mainLikeButton.removeClass("active");
					likeIcon.removeClass("bi-heart-fill").addClass("bi-heart");
				}
				likeCountSpan.text(likeCount);
				mainLikeButton.data("likeYn",isLiked ? 'Y' : 'N');
			}
		}
		const mainReply = $(`.post-comments[data-comu-post-no="\${replyCountInfo.comuPostNo}"]`)
		mainReply.find('span').text(replyCountInfo.replyCount)

		postModal.removeData("currentLikeStatus")
		postModal.removeData("replyCountInfo")
	})

	// 글 삭제
	$(".postDeleteBtn").on("click",function(){
		let comuPostNo = $(this).data("comuPostNo");
		Swal.fire({
			   title: '정말로 삭제 처리 하시겠습니까?',
			   text: '다시 되돌릴 수 없습니다. 신중하세요.',
			   icon: 'warning',

			   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
			   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
			   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
			   confirmButtonText: '삭제', // confirm 버튼 텍스트 지정
			   cancelButtonText: '취소', // cancel 버튼 텍스트 지정

			}).then(result => {
			   // 만약 Promise리턴을 받으면,
			    if(result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
			    	$.ajax({
						url : "/api/community/post/delete?comuPostNo="+comuPostNo,
						type : "post",
						beforeSend : function(xhr){
							xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}")
						},
						success : function(res){
							if(res == 'OK'){
								sweetAlert("success","게시글 삭제 성공했습니다");
								location.reload();
							}
						},
						error : function(err){
							sweetAlert("error","게시글 삭제에 실패했습니다.");
						}

					})
			    }
			});
	})

	// 수정 모달 노출시 데이터 주입
	let fileContainer = new Map();
	postUpdateModal.on("show.bs.modal",function(e){
		console.log(e.relatedTarget)
		let comuPostNo = e.relatedTarget.getAttribute("data-comu-post-no");
		displayPostUpdateModal(comuPostNo);
	})

	// 포스트 수정버튼 클릭
	postUpdateModal.on("click","#savePostUpdateBtn",function(){
		let formData = new FormData($("#updateForm")[0]);

		$.ajax({
			url : "/api/community/post/update",
			type : "post",
			beforeSend : function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}")
			},
			processData : false,
			contentType : false,
			data : formData,
			success : function(res){
				if(res == "OK"){
					location.reload();
				}
			},
			error : function(err){
				console.log(err)
			}
		})

	})

	// 이미지 미리보기
	postUpdateModal.on("change","#updatePostFiles",function(){
		let files = this.files;
		$(".deletePostImg","#previewContainer").each((i,v)=> v.click())

		for(let file of files){
			let reader = new FileReader();
			reader.onload = function(e){
				html = `
					<div style="position:relative; display: inline-block;">
						<img src="\${e.target.result}" height="120px"/>
						<i class="bi bi-x-lg deletePostImg" style="position:absolute; top:0; right:0; cursor: pointer;"></i>
					</div>
				`
				$("#previewContainer").append(html)
			}
			reader.readAsDataURL(file);
		}
	});

	// 이미지 삭제
	postUpdateModal.on("click",".deletePostImg",function(){
		console.log(this)
		let attachDetailNo = $(this).data("attachDetailNo");
		if(attachDetailNo){
			let html = `<input type="hidden" name="deleteFiles" value="\${attachDetailNo}" />`
			$("#updateForm").append(html);
		}
		$(this).parent('div').remove();
	})

	// 댓글 삭제 버튼
	postModal.on("click",".replyDeleteBtn",function(){
		let deleteEl = $(this).parents(".detailBox")
		let comuPostNo = $(this).data("comuPostNo");
		let comuReplyNo = $(this).data("comuReplyNo");
		console.log(comuReplyNo)
		console.log(comuPostNo)

		Swal.fire({
			   title: '정말로 삭제 처리 하시겠습니까?',
			   text: '다시 되돌릴 수 없습니다. 신중하세요.',
			   icon: 'warning',

			   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
			   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
			   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
			   confirmButtonText: '삭제', // confirm 버튼 텍스트 지정
			   cancelButtonText: '취소', // cancel 버튼 텍스트 지정

			}).then(result => {
			   // 만약 Promise리턴을 받으면,
			    if(result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
			    	$.ajax({
						url : "/api/community/reply/delete?comuReplyNo="+comuReplyNo,
						type : "post",
						beforeSend : function(xhr){
							xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}")
						},
						success : function(res){
							if(res == 'OK'){
								displayPostModal(comuPostNo)
								$(`.detailBox[data-comu-reply-no='\${comuReplyNo}']`,"#replyContainer").hide();
							}
						},
						error : function(err){
							sweetAlert("error","댓글삭제에 실패했습니다.");
						}

					})
			    }
			});
	})

	// 댓글 작성 기능
	commentSubmitBtn.on("click",function(){
		let comuProfileNo = $("#myComuProfileNo").val();
		let boardTypeCode = $("#boardTypeCode").val();
		let comuPostNo = $("#comuPostNo").val();
		let artGroupNo = $("#artGroupNo").val();
		let comuReplyContent = $("#comuReplyContent").val();
		let data = {
				boardTypeCode
				,comuPostNo
				,artGroupNo
				,comuProfileNo
				,comuReplyContent
		}
		$.ajax({
			url : "/api/community/reply/insert",
			type : "post",
			contentType : "application/json; charset=utf-8",
			beforeSend : function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}")
			},
			data : JSON.stringify(data),
			success : function(res){
				console.log(res)
				let {result, replyVO} = res;
				if(result == 'OK'){
					let comuPostNo = replyVO.comuPostNo
					displayPostModal(comuPostNo);
					$("#comuReplyContent").val("");
				}
			},
			error : function(err){
				console.log(err)
			}
		})
	})

	$(".post-likes").on("click",function(){
		let comuPostNo = $(this).data("comuPostNo");
        let comuProfileNo = $(this).data("comuProfileNo");
        let boardTypeCode = $(this).data("boardTypeCode");
        let artGroupNo = $(this).data("artGroupNo");
     	let likeYn = $(this).data("likeYn")
     	let insertDelete = likeYn == 'N' ? 1 : -1;
        data = {
        		comuPostNo,comuProfileNo,boardTypeCode,artGroupNo,insertDelete
        }
        likeUpdate(data);
        $(this).toggleClass('active');

        const likeIcon = $(this).find('i'); // 버튼 안의 i 태그(아이콘)를 찾음
        const likeCountSpan = $(this).find('.likeCount');
        let currentCount = parseInt(likeCountSpan.text().trim()); // 현재 숫자 가져오기

        // 2. 현재 'active' 클래스가 있는지 확인하여 아이콘 모양을 변경
        if ($(this).hasClass('active')) {
            // "좋아요"를 누른 상태 (활성 상태)
            likeIcon.removeClass('bi-heart').addClass('bi-heart-fill');
            likeCountSpan.text(currentCount + 1);
            $(this).data("likeYn","Y")
        } else {
            // "좋아요"를 취소한 상태 (비활성 상태)
            likeIcon.removeClass('bi-heart-fill').addClass('bi-heart');
            likeCountSpan.text(currentCount - 1);
            $(this).data("likeYn","N")
        }
	});

	// id가 'likeButton'인 요소를 클릭했을 때
    postModal.on('click',"#likeButton", function() {
        // 1. 현재 버튼에 'active' 클래스를 토글(있으면 없애고, 없으면 추가)
        let comuPostNo = $(this).data("comuPostNo");
        let comuProfileNo = $(this).data("comuProfileNo");
        let boardTypeCode = $(this).data("boardTypeCode");
        let artGroupNo = $(this).data("artGroupNo");
     	let likeYn = $(this).data("likeYn")
     	console.log(likeYn)
		let insertDelete = likeYn == 'N' ? 1 : -1;
        data = {
        		comuPostNo,comuProfileNo,boardTypeCode,artGroupNo,insertDelete
        }
        likeUpdate(data)

        $(this).toggleClass('active');

        const likeIcon = $(this).find('i'); // 버튼 안의 i 태그(아이콘)를 찾음
        const likeCountSpan = $(this).find('#likeCount');
        let currentCount = parseInt(likeCountSpan.text().trim()); // 현재 숫자 가져오기

        // 2. 현재 'active' 클래스가 있는지 확인하여 아이콘 모양을 변경
        if ($(this).hasClass('active')) {
            // "좋아요"를 누른 상태 (활성 상태)
            likeIcon.removeClass('bi-heart').addClass('bi-heart-fill');
            likeCountSpan.text(currentCount + 1);
            $(this).data("likeYn","Y")
        } else {
            // "좋아요"를 취소한 상태 (비활성 상태)
            likeIcon.removeClass('bi-heart-fill').addClass('bi-heart');
            likeCountSpan.text(currentCount - 1);
            $(this).data("likeYn","N")
        }

        postModal.data('currentLikeStatus', {
            comuPostNo: comuPostNo,
            isLiked: $(this).hasClass('active'), // true/false
            likeCount: parseInt(likeCountSpan.text().trim()) // 최종 좋아요 수
        });
    });

	// textarea에서 키보드를 누를 때마다 실행 자동 높이조절
    $('.comment-pane-footer textarea').on('keyup', function() {
        // 일단 높이를 초기화하여 줄어드는 것도 가능하게 함
        $(this).css('height', 'auto');
        // 스크롤 높이(내용 전체 높이)를 실제 높이로 지정
        $(this).css('height', $(this).prop('scrollHeight') + 'px');
    });

	// 엔터키 댓글 전송
    $('.comment-pane-footer textarea').on('keydown', function(e) {
        // Shift 키를 누르지 않고 Enter 키만 눌렀을 때
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault(); // 기본 Enter 동작(줄바꿈)을 막음
            $('#commentSubmitBtn').click(); // 등록 버튼을 강제로 클릭
        }
    });


	// 날짜 포맷팅 함수
	function padTwoDigits(num) {
	  return num.toString().padStart(2, "0");
	}

	/**
	* 시간 yyyy.mm.dd hh:mm 형식으로 바꾸기
	*/
	function getFormattedDate(time) {
	  const date = new Date(time);

	  return (
	    [
	      date.getFullYear(),
	      padTwoDigits(date.getMonth() + 1),
	      padTwoDigits(date.getDate()),
	    ].join(".") +
	    " " +
	    [
	      padTwoDigits(date.getHours()),
	      padTwoDigits(date.getMinutes())
	    ].join(":")
	  );
	}


	/**
	* 해당 글 모달형식으로 가져오기
	*/
	function displayPostModal(comuPostNo){
		$.ajax({
			url : `/api/community/getPost?comuPostNo=\${comuPostNo}&myComuProfileNo=${profileVO.comuProfileNo}`,
			type : "get",
			success : function(postVO){
				console.log(postVO);
				$("#boardTypeCode").val(postVO.boardTypeCode);
				$("#comuPostNo").val(comuPostNo);
				$("#artGroupNo").val(postVO.artGroupNo);
				let {artGroupNo, comuPostContent, writerProfile,
					comuPostLike, comuPostReplyCount, comuPostReplyList,
					postFiles, comuPostRegDate, likeYn, comuProfileNo
					, comuPostModDate, fileGroupNo, boardTypeCode} = postVO;


				// 본문 영역
				let postHtml = ``;
				postHtml = `
					<div class="post-pane-header">
						<a href="${pageContext.request.contextPath}/community/\${artGroupNo}/profile/\${comuProfileNo}" style="text-decoration:none; color:black;">
	                	<div class="d-flex align-items-center">
	                        <img src="\${writerProfile.comuProfileImg}" class="rounded-circle comment-avatar">
	                        <div class="ms-2">
	                            <strong class="d-block">\${writerProfile.comuNicknm}</strong>
	                            <small class="text-muted">\${getFormattedDate(comuPostModDate)}</small>
	                        </div>
	                	</div>
	                	</a>
	                	<div class="dropdown">
					        <button class="btn btn-link text-secondary p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
					            <i class="bi bi-three-dots-vertical"></i>
					        </button>
					        <ul class="dropdown-menu"
					`;
				if(writerProfile.comuProfileNo == "${myComuProfileNo}"){
					postHtml += `
						<li><button class="dropdown-item postUpdateBtn" data-bs-toggle="modal"
							data-bs-target="#postUpdateModal"
							data-comu-post-no="\${comuPostNo}"
							data-comu-post-content="\${comuPostContent}"
							data-file-group-no="\${fileGroupNo}"
							>수정</button></li>
			            <li><button class="dropdown-item text-danger postDeleteBtn" data-comu-post-no="\${comuPostNo}" >삭제</button></li>
					`;
				}else{
					postHtml += `
						<li><button class="dropdown-item text-danger postReportBtn" data-comu-post-no="\${comuPostNo}" >신고</button></li>
					`;
				}
				postHtml += `
					        </ul>
					    </div>
	                </div>
	                <div class="post-pane-body" style="padding:10px;">
	                `;
           		fileContainer = new Map();
	            if(postFiles != null && postFiles.length > 0){
	            	for(let i in postFiles){
	            		let file = postFiles[i];
	            		console.log(file);
	            		fileContainer.set(i,file);
	            		postHtml += `
	            			<img src="\${file.webPath}" alt="\${file.fileOriginalNm}" width="80%" style="border-radius:10px;">
	            		`;
	            	}
	            }
	            postHtml += `
	                	<p>\${comuPostContent}<p>
	                </div>
	                <div class="post-pane-footer">
	                `;
	            if(likeYn == 'Y'){
	            postHtml += `
					    <button type="button" class="btn btn-like active" data-comu-post-no="\${comuPostNo}" data-comu-profile-no="${myComuProfileNo}"
					    data-board-type-code="\${boardTypeCode}" data-art-group-no="\${artGroupNo}" data-like-yn="\${likeYn}" id="likeButton">
					        <i class="bi bi-heart-fill"></i>
					        <span id="likeCount">\${comuPostLike}</span>
					    </button>
	            	`;
	            }else{
	            	postHtml += `
					    <button type="button" class="btn btn-like" data-comu-post-no="\${comuPostNo}" data-comu-profile-no="${myComuProfileNo}"
					    	data-board-type-code="\${boardTypeCode}" data-art-group-no="\${artGroupNo}" data-like-yn="\${likeYn}" id="likeButton">
					        <i class="bi bi-heart"></i>
					        <span id="likeCount">\${comuPostLike}</span>
					    </button>
	            	`;
	            }
	            postHtml +=`
					</div>
				`;

				$("#postBox").html(postHtml);

				$("#replyCount").html("답글 " + comuPostReplyCount + "개");

				// 댓글 영역
				let replyHtml = ``;
				for(let reply of comuPostReplyList){
					let {comuReplyContent, comuReplyRegDate, comuReplyNo, replyMember, comuReplyModDate, comuReplyDelYn} = reply;
					let {comuProfileImg, comuNicknm, comuProfileNo:replyComuProfileNo} = replyMember;
						replyHtml += `
							<div class="comment-item">
							<a href="${pageContext.request.contextPath}/community/\${artGroupNo}/profile/\${replyComuProfileNo}" style="text-decoration:none; color:black;">
								<img src="\${comuProfileImg}" class="rounded-circle comment-avatar">
							</a>
				            <div class="comment-main-wrapper">
				            	<div class="comment-header">
									<a href="${pageContext.request.contextPath}/community/\${artGroupNo}/profile/\${replyComuProfileNo}" style="text-decoration:none; color:black;">
				            			<strong>\${comuNicknm}</strong>
									</a>
	            		`;
						replyHtml +=`
		            		<div class="dropdown">
						        <button class="btn btn-link text-secondary p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
						            <i class="bi bi-three-dots-vertical"></i>
						        </button>
						        <ul class="dropdown-menu">
			          	`;
						if("${myComuProfileNo}" == replyComuProfileNo){
							replyHtml += `
					            		<li><button class="dropdown-item text-danger replyDeleteBtn" data-comu-post-no="\${comuPostNo}" data-comu-reply-no="\${comuReplyNo}">삭제</button></li>
					            	</ul>
					            </div>
							`;
						}else{
							replyHtml += `
										<li><button class="dropdown-item text-danger replyReportBtn" data-comu-post-no="\${comuPostNo}" data-comu-reply-no="\${comuReplyNo}">신고</button></li>
									</ul>
					            </div>
							`;
						}
						replyHtml += `
						        </div>
						        <div class="comment-body-text">
					        	<p>\${comuReplyContent}</p>
					        	<small class="text-muted">\${getFormattedDate(comuReplyModDate)}</small>
							        </div>
							    </div>
							</div>
						`;
					}
				$("#replyContent").html(replyHtml);
				$("#commentSubmitBtn").data("comu-post-no",comuPostNo);
				postModal.data("replyCountInfo",{
					comuPostNo : comuPostNo,
					replyCount : comuPostReplyCount
				});
			},
			error : function(err){
				console.log(err);
			}
		})
	}

	/**
	* 해당 글 모달형식으로 가져오기
	*/
	function displayPostUpdateModal(comuPostNo){
		$.ajax({
			url : `/api/community/getUpdatePost?comuPostNo=\${comuPostNo}`,
			type : "get",
			success : function(postVO){
				console.log(postVO);
				let {artGroupNo, comuPostContent,postFiles,fileGroupNo} = postVO;

				// 본문 영역
				let postHtml = `
					<form id="updateForm">
	                    <div class="p-3">
	                        <h4>게시물 수정</h4>
	                        <input type="hidden" name="comuPostNo" value="\${comuPostNo}">
	                        <input type="hidden" name="fileGroupNo" value="\${fileGroupNo}">
	                        <div class="mb-3">
	                            <label for="updatePostContent" class="form-label">내용</label>
	                            <div id="previewContainer">
                           `;
                           if(postFiles != null && postFiles.length > 0){
								for(let file of postFiles){
								postHtml += `
		                        	   <div style="position:relative; display: inline-block;">
				    						<img src="\${file.webPath}" height="120px"/>
				    						<i class="bi bi-x-lg deletePostImg" data-attach-detail-no='\${file.attachDetailNo}' style="position:absolute; top:0; right:0; cursor: pointer; color:red;"></i>
				    					</div>
									`;
								}
                           }
                           postHtml += `
			                            </div>
			                            <textarea class="form-control" id="updatePostContent" name="comuPostContent" rows="10">\${comuPostContent}</textarea>
			                        </div>
			                        <div class="form-check mb-3" style="padding-left:0px;">
				                        <label class="form-check-label" for="checkMbspYn"> 멤버쉽 전용 여부</label>
				                        <input class="form-check-input" type="checkbox" value="" name="comuPostMbspYn" id="checkMbspYn" style="float:none; margin-left:0px">
			                        </div>
			                        <div class="mb-3">
			                            <label for="updatePostFiles" class="form-label">첨부파일</label>
			                            <input type="file" class="form-control" id="updatePostFiles" name="files" accept="image/*" multiple/>
			                        </div>

			                        <div class="d-flex justify-content-end gap-2">
			                            <button type="button" class="btn btn-success" id="savePostUpdateBtn">저장</button>
			                            <button type="button" class="btn btn-secondary"
			                                    data-bs-toggle="modal" id="cancelPostUpdateBtn">취소</button>
			                        </div>
			                    </div>
			            	</form>
		                   `;
				$("#postUpdateModalContentBox").html(postHtml);
			},
			error : function(err){
				console.log(err);
			}
		})
	}

	// 좋아요 버튼 클릭 이벤트
	function likeUpdate(data){
		console.log(data)

		$.ajax({
			url : "/api/community/post/likeUpdate",
			type : "post",
			contentType : "application/json; charset=utf-8",
			data : JSON.stringify(data),
			beforeSend : function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}")
			},
			success : function(res){
				console.log(res)

			},
			error : function(err){
				console.log(err)
			}
		})
	}

})
</script>
</html>