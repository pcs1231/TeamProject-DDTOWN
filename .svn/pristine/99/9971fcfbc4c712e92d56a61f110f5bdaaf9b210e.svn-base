<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.fmt" prefix="fmt" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<%@ taglib uri="jakarta.tags.functions" prefix="fn" %>
<%@ taglib uri="jakarta.tags.core" prefix="c" %>
<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Artist A - 커뮤니티</title>
<meta name="_csrf" content="${_csrf.token}"/>
<meta name="_csrf_header" content="${_csrf.headerName}"/>
<script type="text/javascript" src="https://cdn.iamport.kr/js/iamport.payment-1.2.0.js"></script>
<link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css" />
<link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor-viewer.min.css" />
<script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js"></script>
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/mainservice_common.css">
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/artist_community.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
<script src='https://cdn.jsdelivr.net/npm/fullcalendar-scheduler@6.1.17/index.global.min.js'></script>
<%@ include file="../../modules/headerPart.jsp" %>
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/communityModal.css">

<style>
body{
	font-family: "Helvetica Neue", Arial, sans-serif;
    background-color: #f0f2f5;
    color: #1c1e21;
    line-height: 1.6;
}
.membership-blur {
    filter: blur(5px);
    pointer-events: none;
}

.membership-only {
    position: relative;
}

.membership-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.9);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 2;
}

.membership-badge {
    background: #8a2be2;
    color: #fff;
    padding: 2px 6px;
    border-radius: 10px;
    font-size: 0.8em;
    margin-left: 5px;
}

.imgDiv{
	position :relative;
	width: 100px;
	height : 100px;
}

.imgDiv img{
	width : 100%;
	height : 100%
}

.imgDiv i{
	position : absolute;
	top : 5%;
	right: 5%; /* 아이콘을 이미지의 가로 중앙에 위치 */
    transform: translate(-10%, -10%); /* 아이콘을 중앙에 정확히 위치 */
    font-size: 1rem; /* 아이콘 크기 조절 */
    color: white; /* 아이콘 색상 설정 */
}

.replyWriterInfo {
    display: flex;
    align-items: center;
    gap: 10px;
}

/* 프로필 이미지 관련 CSS */
.artist-avatar-placeholder {
    /* 1. 컨테이너 기본 스타일 설정 */
    width: 60px; /* 원하는 크기로 조절하세요 */
    height: 60px; /* width와 동일한 값으로 설정 */
    position: relative; /* 자식 요소의 기준점이 됨 */

    /* 2. 원형으로 만들기 */
    border-radius: 50%;
    
    /* 3. 내부 이미지가 원을 벗어나지 않도록 설정 */
    overflow: hidden;

    /* 이미지가 로드되기 전이나 없을 때를 위한 배경색 (선택 사항) */
    background-color: #f0f0f0; 
}

.artist-avatar-placeholder img {
    /* 4. 이미지가 컨테이너를 꽉 채우도록 설정 */
    width: 100%;
    height: 100%;
    
    /* 5. 이미지 비율을 유지하면서 잘리지 않도록 채우기 (가장 중요한 속성) */
    object-fit: cover; 
}

.modal-header h2 {
    width: 100%; /* h2가 modal-header의 전체 너비를 차지하도록 강제하여 p가 다음 줄로 내려가게 함 */
    /* 필요에 따라 마진 조정 */
    margin-bottom: 5px; /* h2와 p 사이 간격 추가 */
}

.modal-header p.membership-duration {
	width: 100%;
    display: block; /* p 태그가 새로운 줄에서 시작하도록 함 */
    margin-top: 5px; /* 선택 사항: 제목과 기간 사이에 약간의 간격 추가 */
}

.modal-header {
    flex-direction: column; /* Flex 아이템들을 수직 방향으로 정렬 (h2, p 순서대로 세로 배치) */
    align-items: center; /* 가운데 정렬 */
    text-align: center; /* 텍스트 가운데 정렬 */
}	
</style>
</head>
<body>
	<jsp:include page="/WEB-INF/views/modules/communityHeader.jsp" />
	
	<sec:authentication property="principal" var="user"/>
	<input type="hidden" id="communityArtistGroupNo" value="${artistGroupVO.artGroupNo }">
	<input type="hidden" id="communityArtistGroupNm" value="${artistGroupVO.artGroupNm }">
	<input type="hidden" id="mediaServerUrl" value="${mediaServerUrl}">
<%-- 	    <c:out value="${artistGroupVO}"/> --%>
<%-- 	    <c:out value="${user}"/> --%>
    <c:choose>
		<c:when test="${communityVO.artistTabYn }">
			<c:set value="${artistPostVO }" var="communityPostVO" />
		</c:when>
		<c:otherwise>
			<c:set value="${fanPostVO }" var="communityPostVO" />
		</c:otherwise>
	</c:choose>
	<c:set value="${userProfile.memberShipYn }" var="memberShipCheck" />
	

    <div class="apt-main-layout">
        <div class="apt-container">
            <header class="apt-header">
                <div class="apt-header-avatar">
                    <div class="artist-avatar-placeholder"><img alt="" src="${artistGroupVO.artGroupProfileImg}"> </div>
                </div>
                <div class="apt-header-info">
                	
                    <h2><c:out value="${artistGroupVO.artGroupNm }" /> <span style="font-size:0.7em; color: #888;">(아티스트)</span></h2>
                    <div class="artist-stats">
                        <span><c:out value="${artistGroupVO.communityVO.totalArtist }"/>명</span> &bull; <span><fmt:formatNumber value="${artistGroupVO.communityVO.totalFan }" pattern="#,###"/></span> 팬
                    </div>
                </div>
                <div class="apt-header-actions">
                	<c:if test="${memberShipCheck eq 'N'}">
		               	<c:if test="${followFlag eq 'N'}">
			                <button class="btn-apt-action" id="followToggleBtn">
			                    팔로우
			                </button>
		              	</c:if>
		               	<c:if test="${followFlag eq 'Y'}">
			                <button class="btn-apt-action following" id="followToggleBtn">
			                    <span class="follow-icon">✔</span> 팔로잉
			                </button>
		               	</c:if>
                	</c:if>
	                <button class="btn-apt-action">🔔 알림 설정</button>
	            </div>
            </header>

            <ul class="nav apt-tabs" id="comuTab" role="tabList">
            	<li class="nav-item" role="presentation">
			        <button class="tab-item active" id="artistPost" data-bs-toggle="tab" data-bs-target="#artistPostList" type="button" role="tab" aria-controls="artistPostList" aria-selected="true" >아티스트</button>
			    </li>
			    <li class="nav-item" role="presentation">
			        <button class="tab-item" id="fanPost" data-bs-toggle="tab" data-bs-target="#fanPostList" type="button" role="tab" aria-controls="fanPostList" aria-selected="false">팬</button>
			    </li>
			    <li class="nav-item" role="presentation">
			        <button class="tab-item" id="live" data-bs-toggle="tab" data-bs-target="#liveArea" type="button" role="tab" aria-controls="liveArea" aria-selected="false">라이브</button>
			        <%-- <button class="tab-item" id="live" href="/community/apt/${artistGroupVO.artGroupNo}/live">라이브</button>  <-----원래 사용하시던거          --%>
			    </li>
			    <li class="nav-item" role="presentation">
			        <button class="tab-item" id="schedule" data-bs-toggle="tab" data-bs-target="#scheduleList" type="button" role="tab" aria-controls="scheduleList" aria-selected="false">스케줄</button>
			    </li>
			    <li class="nav-item" role="presentation">
			        <button class="tab-item" id="noticeApt" data-bs-toggle="tab" data-bs-target="#noticeAptList" type="button" role="tab" aria-controls="noticeAptList" aria-selected="false">공지사항</button>
			    </li>
            </ul>

            <main class="apt-content-area">
				
                <div class="tab-pane show active" id="artistPostList" role="tabpanel" aria-labelledby="artistPost">
                   	<div id="artistFeedSearchWrap" style="margin-bottom:10px; display:flex; gap:8px; align-items:center;">
                   	
                    </div>

                    <!-- 등록 모달 오픈 -->
                    <sec:authorize access="hasRole('ARTIST')">
	                    <div class="post-composer" id="openModal">
					        <button type="button" data-bs-toggle="modal" data-bs-target="#insertPostModal">
						        <div class="profile-placeholder"></div>
						        <span class="placeholder-text">포스트를 남겨보세요.</span>
							</button>
					    </div>
                    </sec:authorize>
				    <!-- 등록 모달 오픈 끝 -->
			  
                    <div id="artistFeedList" class="feedList">
                    
                    </div>
                </div>
                
                <div class="tab-pane" id="fanPostList" role="tabpanel" aria-labelledby="fanPost">
                	<div id="fanFeedSearchWrap" style="margin-bottom:10px; display:flex; gap:8px; align-items:center;">
                   	
                    </div>
                    
                    <sec:authorize access="hasRole('MEMBER')">
	                    <div class="post-composer" id="openModal">
					        <button type="button" data-bs-toggle="modal" data-bs-target="#insertPostModal">
						        <div class="profile-placeholder"></div>
						        <span class="placeholder-text">포스트를 남겨보세요.</span>
							</button>
					    </div>
				    </sec:authorize>
					    
					 <div id="fanFeedList" class="feedList">
                    
                    </div>
                </div>

				<sec:authentication property="principal.username" var="currentUserId"/>
				<c:out value="현재 로그인한 아이디 : ${currentUserId }"></c:out> 
				
				<div class="tab-pane<c:if test='${requestScope["javax.servlet.forward.request_uri"].endsWith("/live")}'> show active</c:if>" id="liveArea" role="tabpanel" aria-labelledby="live">
				라이브 탭 영역 <br>
				 <%-- 'Live 방송하기' 버튼 --%>
				    <sec:authorize access="hasRole('ARTIST')">
				        <c:forEach items="${artistGroupVO.artistList}" var="artist">
				            <c:if test="${artist.memUsername eq currentUserId}">
				                <button onclick="startLive()" id="stream-info" class="btn btn-danger mt-4" data-user-id="${currentUserId}" 
				                                           data-room-id="stream-room-${artistGroupVO.artGroupNo }">
				                    <i class="bi bi-mic-fill"></i> Live 방송하기
				                </button>
				            </c:if>
				        </c:forEach>
				    </sec:authorize>
				    
					<c:if test="${not empty liveInfo }">
						<h4 class="mb-3"> 진행중인 LIVE </h4>
						<a href="javascript:watchLive();" style="text-decoration: none; color: inherit; cursor: pointer;">
							<div class="card shadow-sm" data-broadcast-id="${liveInfo.id}">
				                <div class="card-body">
				                    <%-- 썸네일 이미지가 있다면 표시합니다. --%>
				                    <c:if test="${not empty artistGroupVO.artGroupProfileImg}">
				                        <img src="${artistGroupVO.artGroupProfileImg}" class="img-fluid rounded mb-3" alt="방송 썸네일" style="width: 100%; height: 400px;">
				                    </c:if>
				                    <div class="d-flex align-items-center text-danger mt-3">
				                        <i class="bi bi-broadcast-pin me-2"></i>
				                        <strong style="font-size: 1.1em;">LIVE</strong>
				                    </div>
				                    <div>
				                    	<h5 class="card-title mt-2">${liveInfo.liveTitle}</h5>
	                   					<p class="card-text text-muted">${liveInfo.liveContent}</p>
					                    <%-- ✅ 3. liveInfo 객체의 필드를 사용하여 방송 제목과 설명을 표시합니다. --%>
					                    <i class="bi bi-eye-fill me-1"></i>
					                    <span id="viewer-count-${liveInfo.id}"><fmt:formatNumber value="${liveInfo.liveHit}" pattern="#,###"/></span>명
				                    </div>
				                </div>
				            </div>
						</a>
					</c:if>
					
					<!-- liveInfo 비어있을 경우 -->
					 <c:if test="${empty liveInfo}">
				        <div class="text-center p-5 text-muted border rounded">
				            <i class="bi bi-camera-video-off" style="font-size: 3rem;"></i>
				            <p class="mt-3 mb-0">현재 진행 중인 라이브 방송이 없습니다.</p>
				        </div>
				    </c:if>
				</div>
			
			    <div class="tab-pane" id="scheduleList" role="tabpanel" aria-labelledby="schedule">
			        <p class="loading-placeholder" style="text-align: center; display: block;">
			        	<div id="calendar"></div>
					</p>
			    </div>
			
			    <div class="tab-pane" id="noticeAptList" role="tabpanel" aria-labelledby="noticeApt">
                  	<h3><c:out value="${artistGroupVO.artGroupNm }"/>&nbsp;커뮤니티 공지사항</h3>
			    	<div id="noticeSearchWarp" style="margin-bottom:10px; display:flex; gap:8px; align-items:center;">
			    	
	                </div>
				    <div id="noticeList" >
	                    
	                </div>
	                
	                <div id="noticePagingArea">
	                
	                </div>
			    
			    </div>

            </main>
        </div>




<!-- /////////////////////////////////////////////////////////////////////////////////////////////////////// -->






        <aside class="apt-sidebar">
            <div class="sidebar-widget apt-level-widget">
                <h3>APT 현황</h3>
                <div class="apt-floor-display" id="aptFloorDisplay">
                	<!-- 1. div 연산자를 사용하여 10명당 1층으로 계산 (정수 나눗셈) -->
                	<c:set var="aptFloor" value="${artistGroupVO.communityVO.totalFan div 10 } "/>
                	
                	<fmt:formatNumber value="${aptFloor }" pattern="#,###,###"/>층
                </div>
                
                
                <div class="fan-count-tooltip-wrapper"> <p class="fan-count-display">팬 <span id="sidebarFanCountApprox"> 
                	<fmt:formatNumber value="${artistGroupVO.communityVO.totalFan}" pattern="#,###,###"></fmt:formatNumber> </span>명</p> 
                </div>
            </div>

            <div class="sidebar-widget membership-widget">
                <div class="membership-icon">🛡️</div>
                <h3>Membership</h3>
                <c:choose>
                	<c:when test="${hasMembership }">
                		<p><strong>멤버십에 가입되어 있습니다!</strong></p>
                		<p>특별한 컨텐츠를 즐겨보세요.</p>
                		<button class="btn-view-membership" onclick="location.href='${pageContext.request.contextPath}/mypage/memberships'" style="cursor:pointer;">
		                나의 멤버십 보기 <span class="arrow">&gt;</span>
		            </button>
                	</c:when>
                	<c:otherwise>
                		<p>지금 멤버십에 가입하고, 특별한 혜택을 누려보세요.</p>
		                <button class="btn-join-membership" id="openMembershipModalBtn" data-bs-toggle="modal" data-bs-target="#membershipModalOverlay">
		                    멤버십 가입하기 <span class="arrow">&gt;</span>
		                </button>
                	</c:otherwise>
                </c:choose>
            </div>

			<c:if test="${not empty userProfile}">
	             <!-- 마이 프로필 영역 추가 -->
	             <div id="myProfile" class="sidebar-widget my-profile-widget" style="margin-bottom: 20px; text-align: center; cursor: pointer;" data-comu-profile-no="${userProfile.comuProfileNo}">
	                <div style="width: 80px; height: 80px; margin: 0 auto; border-radius: 50%; overflow: hidden; background-color: #e9ecef; display: flex; align-items: center; justify-content: center;">
	                	<img alt="프로필 img" src="${userProfile.comuProfileImg}">
	                </div>
	                <p id="myProfileNickname" style="margin-top: 8px; font-weight: bold; font-size: 1.1em;">${userProfile.comuNicknm}</p>
	                <small>내가 쓴 글 : ${fn:length(userProfile.postList)}개</small> | <small>내가 쓴 댓글 : ${fn:length(userProfile.replyList)}개</small>
	            </div>
			</c:if>

        </aside>
    </div>

    <div id="footer-placeholder"></div>

     <div class="modal fade" id="membershipModalOverlay" tabindex="-1" aria-labelledby="membershipModalLabel" aria-hidden="true"
     	data-artist-group-no="${artistGroupVO.artGroupNo }"
     	data-membership-goods-no="${artistGroupVO.membershipGoodsNo}">
        <div class="modal-dialog modal-xl">
	        <div class="modal-content membership-modal">
	            <button class="modal-close-btn" id="closeMembershipModalBtn" aria-label="Close" data-bs-dismiss="modal">&times;</button>
	            <div class="modal-header">
	                <h2>${artistGroupVO.artGroupNm } OFFICIAL MEMBERSHIP</h2>
	                <p class="membership-duration">이용 기간: 결제일로부터 30일</p>
	            </div>
	            <div class="modal-body">
	                <div class="membership-main-image">
	                </div>
	                <h3>주요 혜택 안내</h3>
	                <ul class="modal-benefits-list">
	                    <li>✔️ 멤버십 전용 콘텐츠 이용 가능 (일부 블러 처리된 콘텐츠 즉시 해제!)</li>
	                    <li>🗓️ APT 메인 상단에서 아티스트 구독일 D-Day 확인</li>
	                    <li>🎤 콘서트/팬미팅 선예매 및 특별 이벤트 참여 기회</li>
	                    <li>🎁 한정판 멤버십 키트 제공 (별도 구매 또는 등급에 따라)</li>
	                </ul>
	
	                <h3>이용 안내 및 유의사항</h3>
	                <ul class="modal-notes-list">
	                    <li>본 멤버십은 비용을 선지불하여 이용하는 유료 서비스입니다.</li>
	                    <li>멤버십은 아티스트(솔로, 그룹)별로 별도 운영되며, 본 멤버십은 [${artistGroupVO.artGroupNm }] 전용입니다.</li>
	                    <li>그룹 내 솔로 활동 멤버 발생 시, 해당 멤버의 커뮤니티는 별도 생성/운영될 수 있습니다.</li>
	                    <li>자세한 내용은 구매 페이지의 약관을 참고해주세요.</li>
	                </ul>
	            </div>
	            <div class="modal-footer">
	                <div class="membership-price">₩30,000 <span class="vat-notice">(VAT 포함)</span></div>
	                <button class="btn-modal-purchase" id="goToPurchasePageBtn">멤버십 구매하기</button>
	            </div>
	        </div>
        </div>
    </div>

	<c:if test="${followFlag eq 'N'}">
	     <!-- 커뮤니티 가입 오버레이 -->
	    <div id="communityOverlay" class="d-flex p-2 align-items-center fixed-bottom"
	    	style="height:50px; bottom: 0px; width:100%; background-color: rgba(0,0,0,0.7); border-radius: 5px;">
	        <div class="community-overlay-bg"></div>
	        <span style="color: #fff;">커뮤니티 팔로우를 해서 모든 컨텐츠를 즐겨보세요</span>
	        <button class="community-join-btn" id="followBtn" style="margin-left: auto; color:#fff">팔로우하기</button>
	    </div>

	    <!-- 닉네임 입력 모달 -->
	    <div class="modal fade" id="commProfileModal" tabindex="-1" aria-labelledby="nicknameModalLabel" aria-hidden="true">
	        <div class="modal-dialog modal-dialog-centered">
	            <div class="modal-content">
	                <div class="modal-header">
	                    <h5 class="modal-title" id="commProfileModalLabel">커뮤니티 프로필을 만들어보세요!</h5>
	                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
	                </div>
	                <div class="modal-body">
	                	<div class="mb-3 d-flex justify-content-center align-items-center">
	                        <div class="profile-img-box" id="previewImgBox" style="width:100px; height:100px; border-radius: 50%; cursor:pointer; overflow: hidden;">
	                            <img alt="프로필이미지" src="${pageContext.request.contextPath}/upload/profile/base/defaultImg.png" id="previewImg" width="100px" height="100px">
	                        </div>
	                	</div>
	                    <div class="mb-3">
	                        <label for="comuNicknm" class="form-label">닉네임</label>
	                        <input type="text" class="form-control" id="comuNicknm" name="comuNicknm" maxlength="12" placeholder="12자 이내로 입력하세요">
	                    </div>

	                    <div class="mb-3">
	                        <label for="imgFile" class="form-label">프로필 이미지</label>
	                        <input class="form-control" type="file" id="imgFile" name="imgFile" accept="image/*">
	                    </div>
	                </div>
	                <div class="modal-footer">
	                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
	                    <button type="button" class="btn btn-primary" id="profileSubmitBtn">완료</button>
	                </div>
	            </div>
	        </div>
	    </div>
	</c:if>

    <!-- DM 모달이 삽입될 컨테이너 -->
    <div id="weverse-dm-modal-container"></div>

    <!-- DM 열기 버튼 (원하는 곳에 배치) -->
    <button onclick="openWeverseDM()">DM 열기</button>

<!-- 아티스트 글 등록 모달 -->
<div class="modal fade " id="insertPostModal" tabindex="-1"
	aria-labelledby="insertPostModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="insertPostModalLabel">
					<c:out value="${artistGroupVO.artGroupNm }" />
				</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal"
					aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="postForm" action="/community/insert/post"
					enctype="multipart/form-data" method="post">
					<input type="hidden" name="artGroupNo" value="${artistGroupVO.artGroupNo }" />
					<input type="hidden" name="boardTypeCode" value="${communityVO.boardTypeCode }" />
					<input type="hidden" name="artistTabYn" value="${communityVO.artistTabYn }" />

					<div id="imgArea"></div>

					<div>내용</div>
					<textarea rows="5" cols="10" id="comuPostContent"
						onkeyup="contentLengthCheck(this)" name="comuPostContent"></textarea>

					<div class="text-right pt-2">
						<span class="pt-1"><span class="cmt-sub-size">0</span>/1000</span>
					</div>
				
					<label for="memberShipYn"> 
						<input type="checkbox" id="postMemberShipYn" name="postMemberShipYn" value="멤버십전용 게시물" />
						<input type="hidden" id="memberShipYn" name="memberShipYn" value="" /> 멤버십전용
					</label>
					<input type="file" name="files" id="insertPostFile" multiple accept="image/*">
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" id="postSendBtn">저장</button>
				<button type="button" class="btn btn-secondary"
					data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

<!-- 아티스트 글 등록 모달 끝 -->

<!-- 아티스트 글 수정 모달 -->
<div class="modal fade " id="editPostModal" tabindex="-1" aria-labelledby="editPostModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="editPostModalLabel">
					<c:out value="포스트 수정" />
				</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal"
					aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="editPostForm" enctype="multipart/form-data" method="post">
				<input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" />
					<input type="hidden" name="artGroupNo" value="${artistGroupVO.artGroupNo }" />
					<input type="hidden" name="comuPostNo" id="postNum" />
					<input type="hidden" id="fileGroupNo" name="fileGroupNo" />
					<input type="hidden" id="deleteFiles" name="deleteFiles" />

					<div id="editImgArea" class="editImg"></div>
					<div id="plusImg" class="editImg"></div>

					<div>내용</div>
					<textarea rows="5" cols="10" id="editComuPostContent"
						 name="comuPostContent" onkeyup="contentLengthCheck(this)"></textarea>
					<div class="text-right pt-2">
						<span class="pt-1"><span class="cmt-sub-size">0</span>/1000</span>
					</div>
	
					<c:if test="${communityVO.artistTabYn }">
						<label for="editPostMemberShipYn" id="checkBoxMbs">
							<input type="checkbox" id="editPostMemberShipYn" name="postMemberShipYn" value="멤버십전용 게시물" />
							<input type="hidden" id="editMemberShipYn" name="memberShipYn"
							value="" /> 멤버십전용
						</label>
					</c:if>
					<input type="file" name="files" id="editInsertPostFile" multiple accept="image/*">
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" id="postUpdateBtn">수정</button>
				<button type="button" class="btn btn-secondary"
					data-bs-dismiss="modal" id="postUpdateCloseBtn">Close</button>
			</div>
		</div>
	</div>
</div>
<!-- 아티스트 글 수정 모달 끝 -->

<!-- 신고모달 -->
<div class="modal fade" id="reportModal" tabindex="-1" aria-labelledby="reportModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="reportModalLabel">신고사유 선택</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="reportForm" method="post">
        	<input type="hidden" name="targetComuPostNo" id="targetComuPostNo">
        	<input type="hidden" name="targetBoardTypeCode" id="targetBoardTypeCode">
        	<input type="hidden" name="targetComuReplyNo" id="targetComuReplyNo" value="">
        	<input type="hidden" name="artGroupNo" id="reportArtGroupNo">
        	<input type="hidden" name="targetComuProfileNo" id="targetComuProfileNo">
        	<input type="hidden" name="reportTargetTypeCode" id="reportTargetTypeCode">
          <div class="mb-3">
          	<div class="radioArea">
          	</div>
          </div>
          <div class="mb-3">
            <label for="targetNick" class="col-form-label">신고 처리 대상:</label>
            <input type="text" class="form-control" id="targetNick" disabled="disabled" />
          </div>
          <div class="mb-3">
            <label for="targetContent" class="col-form-label">처리 내용:</label>
            <textarea class="form-control" id="targetContent" disabled="disabled"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="reportSendBtn">신고하기</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
      </div>
    </div>
  </div>
</div>
<!-- 포스트 상세 모달 ver2 -->
<div class="modal fade" id="detailPostModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen-custom">
         <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>

        <div class="modal-content">
            <div class="modal-body p-0">
                <div class="d-flex h-100">

                    <div class="post-pane" id="postBox">
                    </div>

                    <div class="comment-pane">
					    <div class="comment-pane-header">
					        <strong class="mx-auto" id="replyCount"></strong>
					    </div>

					    <div class="comment-pane-body" id="replyList">

					    </div>

					    <div class="comment-pane-footer">
					    	<form action="/community/reply/insert" method="get" id="replyForm">
								<input type="hidden" id="boardTypeCode" name="boardTypeCode" />
								<input type="hidden" id="comuPostNo" name="comuPostNo" />
								<input type="hidden" id="artGroupNo" name="artGroupNo" value="${artistGroupVO.artGroupNo }" />
							    <div class="input-group">
						        	<textarea id="comuReplyContent" onkeyup="replyContentLengthCheck(this)" name="comuReplyContent" class="form-control" placeholder="댓글을 입력하세요." aria-label="댓글 입력" rows="1" style="resize: none;"></textarea>
						        	<button class="btn btn-primary" type="button" id="replyBtn">등록</button>
							    </div>
							</form>
						</div>
						<div class="text-right pt-2">
							<span class="pt-1"><span class="cmt-sub-size">0</span>/300</span>
						</div>
					</div>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- 스케줄 상세 모달 -->
<div class="modal fade" id="scheduleModal" tabindex="-1" aria-labelledby="scheduleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="scheduleModalLabel">일정상세</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="closeBtn"></button> 
			</div>
			<div class="modal-body">
	        	<div class="mb-3">
	        		 <label for="title" class="form-label">일정명</label>
	        		 <input type="text" class="form-control-plaintext" id="title" name="title" disabled="disabled">
	        	</div>
	        	<div class="mb-3">
					<label for="content" class="col-form-label">내용</label>
					<textarea class="form-control" id="content" disabled="disabled"></textarea>
				</div>
				<div class="mb-3">
					<label for="place" class="col-form-label">장소</label>
					<input type="text" name="place" id="place" class="form-control" disabled="disabled"/>
				</div>
				<div class="mb-3">
					<label for="dateUrl" class="col-form-label">경로</label><br/>
					<a href="" id="datelink"></a>
				</div>
				<div class="mb-3">
					<label for="allDayCheck" class="col-form-label">하루일정여부</label>
					<input type="checkbox"  id="allDayStatus" name="allDayStatus" disabled="disabled"> 
				</div>
				<div class="mb-3">
					<label for="date" class="col-form-label">일정</label>
					<div class="notAllDaySchedule" style="display:none">
						<input type="text" name="datetimes" id="startDate" class="form-control" disabled="disabled"/> ~ 
						<input type="text" name="datetimes" id="endDate" class="form-control" disabled="disabled"/> 
					</div>
					<div class="allDaySchedule" style="display:none">
						<input type="text" name="datetimes" id="allDate" class="form-control" disabled="disabled"/>
					</div>
				</div>
	        </div>
	        <div class="modal-footer">
			  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="cancelBtn">닫기</button>
			</div>
		</div>
	</div>
</div>
<script type="text/javascript">

// 멤버십 가입하기 버튼 이벤트
document.addEventListener('DOMContentLoaded', function () {
	// 멤버십 구매하기 버튼
	const mbspBtn = document.getElementById('openMembershipModalBtn');
	const membershipModal = document.getElementById('membershipModalOverlay');
	const closeModalBtn = document.querySelector('#closeMembershipModalBtn');
	const goToPurchasePageBtn = document.getElementById('goToPurchasePageBtn');
	
	const csrfMeta = document.querySelector('meta[name="_csrf"]');
	const csrfHeaderMeta = document.querySelector('meta[name="_csrf_header"]');
	
	let csrfToken = csrfMeta.getAttribute('content');
	let csrfHeaderName = csrfHeaderMeta.getAttribute('content');
	
	let artistGroupNo = membershipModal.dataset.artistGroupNo;
	let membershipGoodsNo = parseInt(membershipModal.dataset.membershipGoodsNo);
	
	// 결제 구현
	goToPurchasePageBtn.addEventListener('click', function() {
		requestKakaoPaySubscription(membershipGoodsNo, artistGroupNo);
	});
	
	function requestKakaoPaySubscription(goodsNo, artistGroupNo) {
		// 1. 결제할 멤버십 상품 정보 정의
		const orderData = {
				orderItems: [
					{
						goodsNo: goodsNo,
						goodsOptNo: null,
						qty: 1,
						goodsNm: "DDTOWN 아티스트 멤버십",
					}	
				],
				singleGoodsName: "DDTOWN 아티스트 멤버십",
				totalAmount: 30000,
				isFromCart: false,
				orderTypeCode: "OTC001", // 멤버십
				orderPayMethodNm: "카카오페이",
				orderRecipientNm: "비배송상품_구매자",
	            orderRecipientPhone: "010-1234-5678", // 유효하지 않은 전화번호
	            orderZipCode: "00000", // 더미 우편번호
	            orderAddress1: "배송불필요", // 더미 주소
	            orderAddress2: "멤버십상품", // 더미 상세 주소
	            orderEmail: "no-delivery@ddtown.com", // 더미 이메일
	            orderMemo: `멤버십 상품 구매 - 아티스트 그룹 번호 : \${artistGroupNo}`
		};
		
		console.log("카카오페이 결제 준비 요청 데이터 : ", orderData);
		
		const headers = {
				'Content-Type':'application/json'
		};

		if (csrfToken && csrfHeaderName) { // null 체크 후 할당
		    headers[csrfHeaderName] = csrfToken; 
		}
		
		// 2. 백엔드 API 호출
		fetch('/goods/order/pay/ready', {
			method: 'POST',
			headers: headers,
			body: JSON.stringify(orderData)
		})
		.then(response => {
			if(!response.ok) {
				return response.text().then(errorMessage => {
					console.error("백엔드 오류 응답: ", errorMessage);
				});
			}
			return response.json();
		})
		.then(data => {
			const nextRedirectUrl = data.next_redirect_pc_url;
			
			if(nextRedirectUrl) {
				console.log("카카오페이 결제 페이지로 리다이렉트: ", nextRedirectUrl);
				window.location.href = nextRedirectUrl;
			} else {
				console.log("카카오페이 리다이렉트 URL을 받지 못했습니다. 데이터: ", data);
			}
		})
		.catch(error => {
			console.log("카카오페이 결제 준비 중 예외 발생: ", error.message);
		})
	};
	
});


// 방송하기 관련 스크립는 별도의js를 import 합니다. 하단에 있음.

function fullCalendar(artGroupNo){
	var calendarEl = document.getElementById('calendar');
	var calendar = new FullCalendar.Calendar(calendarEl,{
		height : 'auto',
		initialView : 'dayGridMonth',
		handleWindowResize : true,
		locale : 'ko',
		buttonText : {
			today : '오늘',
			month : '달',
			week : '이번주'
		},
		events : {
			url : '/community/fullcalendar/event/' + artGroupNo,
			type : 'get',
			success : function(res){
				
				return res;
			}
		},
		eventDidMount: function(info) {
			console.log(info);
			
			let { place, content } = info.event.extendedProps;
			
			tooltipHtml = `
				<div> 장 소 : \${place}</div>
				<div> 내 용 : \${content}</div>
			`;
			var tooltip = new bootstrap.Tooltip(info.el, {
			   title : tooltipHtml,
			html : true,
			   placement: 'top',
			   trigger: 'hover',
			   container: 'body'
			});
	    },
	    headerToolbar : {
			start : 'prevYear,prev,next,nextYear today',
			center : 'title',
			end : 'dayGridMonth,dayGridWeek'
		},
		eventClick : function(e){
        	e.jsEvent.cancelBubble = true;		// 일정에 있는 url 막기
        	e.jsEvent.preventDefault();
        	
        	const detailModal = new bootstrap.Modal(document.getElementById('scheduleModal'));
        	
        	detailModal.show(e);
        },	
	});
	calendar.render();
}

function dateFormat(jsonDate){
	if (!jsonDate) return "";
	let date = new Date(jsonDate);
	let month = date.getMonth() + 1;
    let day = date.getDate();
    let hour = date.getHours();
    let minute = date.getMinutes();
    let second = date.getSeconds();

    month = month >= 10 ? month : '0' + month;
    day = day >= 10 ? day : '0' + day;
    hour = hour >= 10 ? hour : '0' + hour;
    minute = minute >= 10 ? minute : '0' + minute;
    second = second >= 10 ? second : '0' + second;

    return month + '.' + day + ". " + hour + ":" + minute;
}

function artistPostList(data){
	let artGroupNo = data.artGroupNo;
	console.log(artGroupNo);
	$.ajax({
		url : "/community/gate/" + artGroupNo + "/apt/api/test",
		type : "get",
		data : data,
		success : function(res){
			console.log(res)
			let tab = res.tab;
			let pagingVO = res.pagingVO;
			let artistGroupVO = res.artistGroupVO;
			let artistList = artistGroupVO.artistList;
			let { userProfile, followFlag } = res;
			
			let searchId;
			if(tab){
				searchId = "artistFeedSearchInput";
			}else{
				searchId = "fanFeedSearchInput";
			}
			
			let searchHtml = `
				<form id="artistSearchForm">
					<input type="hidden" id="comuArtGroupNo" value="\${artistGroupVO.artGroupNo }" />
					<input type="hidden" id="artistTabYn" name="artistTabYn" value="\${tab }" />
					<input type="hidden" name="searchType" id="searchType" />
					<input type="search" name="searchWord" id="\${searchId}"
			`;
			
			if(pagingVO.searchWord != null){
				searchHtml += `value="\${pagingVO.searchWord }"`;
			}
			
			searchHtml += `
					placeholder="게시글 검색 (제목)" style="flex:1; padding:7px 10px; border:1px solid #ccc; border-radius:6px; font-size:0.95em;">
					<input type="button" id="searchFormBtn" class="btn btn-primary" value="검색" />
				`;
			
			if(tab){
				searchHtml += `
					<input type="radio" class="btn-check" name="artistNm" id="all" value="" />
					<label class="btn btn-outline-primary" for="all">전체</label>
				`;
				for(let i=0; i<artistList.length; i++){
					
					let artist = artistList[i];
					let checked;
					if(pagingVO.searchType != null && pagingVO.searchType != 'undefined'){
						
						if(artist.memUsername == pagingVO.searchType){
							console.log("같음");
							checked = `<input type="radio" class="btn-check" name="artistNm" id="\${artist.artNm }" value="\${artist.memUsername }" checked />`;
						}else{
							console.log("다름");
							checked = `<input type="radio" class="btn-check" name="artistNm" id="\${artist.artNm }" value="\${artist.memUsername }" />`;
						}
						
					}else{
						console.log("다름");
						checked = `<input type="radio" class="btn-check" name="artistNm" id="\${artist.artNm }" value="\${artist.memUsername }" />`;
					}
					
					searchHtml += `
						\${checked}
						<label class="btn btn-outline-primary" for="\${artist.artNm }">\${artist.artNm }</label>
					`;
				}
				
				searchHtml += `</form>`;
				
				$("#artistFeedSearchWrap").html(searchHtml);
			}else{
				searchHtml += `</form>`;
				
				$("#fanFeedSearchWrap").html(searchHtml);
			}
			
			// 아티스트 탭일 때
			if(tab){
				let artistPostVO = res.artistPostVO;
				
				let postHtml = ``;
				for(let i=0; i<artistPostVO.length; i++){
					let post = artistPostVO[i];
					let postModDate = dateFormat(post.comuPostModDate);
					let postRegDate = dateFormat(post.comuPostRegDate);
					
					postHtml += `
					
						<div class="feed-item feedBox" data-post-id="\${post.comuPostNo }" style="cursor:pointer;">
							<div class="feed-item-header">
								<div class="author-avatar" style="background-color:'#8a2be2'; color:'#fff';"><img src="\${post.writerProfile.comuProfileImg }"></div>
								<div class="author-info">
									<span class="author-name" style="color:'#8a2be2';">\${post.writerProfile.comuNicknm}</span>
									<span class="post-time">
									`;
					if(post.comuPostRegDate != post.comuPostModDate){
										postHtml += `\${postModDate} (수정됨) </span>`;
					}else{
										postHtml += `\${postRegDate} </span>`;
					}
					
					if(post.memberShipYn){
										postHtml += `<span class="membership-badge" style="background:#8a2be2;color:#fff;padding:2px 6px;border-radius:10px;font-size:0.8em;margin-left:5px;">멤버십 전용</span>`;
					}
					postHtml += `
								</div> 
								<div class="post-options">
									<button id="dropCate" class="post-options-btn" data-bs-toggle="dropdown" aria-expanded="false"><i class="bi bi-three-dots-vertical"></i></button>
									<ul class="dropdown-menu" aria-labelledby="dropCate">
								`;
					if(userProfile.memUsername == post.writerProfile.memUsername){
					postHtml += `
						<li><a class="dropdown-item" href="#" id="edit" data-bs-toggle="modal" data-bs-target="#editPostModal" data-bs-postNum="\${post.comuPostNo }" data-bs-categroy="listEdit">수정</a></li>
						<li><hr class="dropdown-divider"></li>
					    <li><a class="dropdown-item" href="#" id="delete" data-bs-postNum="\${post.comuPostNo }" data-bs-categroy="delete">삭제</a></li>
					`;
					}else{
					postHtml += `
						<li><a class="dropdown-item" href="#" id="reportPost"
								data-bs-toggle="modal"
								data-bs-target="#reportModal"
								data-bs-whatever="\${post.comuPostNo }"
								data-bs-boardType="\${post.boardTypeCode }"
								data-bs-comuProfileNo="\${post.comuProfileNo }"
								data-bs-comuNick="\${post.writerProfile.comuNicknm }"
								data-bs-comuContent="\${post.comuPostContent }"
								data-bs-selectType="RTTC001">신고</a></li>
					`;	
					}
					postHtml += `
									</ul>
								</div>
							</div>
					`;
					
					if(post.memberShipYn && userProfile.memberShipYn == 'N'){
						postHtml += `<div class="feed-item-content membership-blur" data-post-id="\${post.comuPostNo }" style="position:relative;">`;
					}else{
						postHtml += `<div class="feed-item-content" data-post-id="\${post.comuPostNo }" >`;
					}
					
					postHtml += `
								<a href="#detailPostModal" data-bs-toggle="modal" data-bs-postNum="\${post.comuPostNo}">
									<form id="postForm\${i }" data-postNum="\${post.comuPostNo }">
										<div class="openPostModal" id="openPostModal" data-postNum=\${post.comuPostNo }>
					`;
					
					if(post.postFiles != null && post.postFiles.length > 0){
						postHtml += `<div class="post-img">`;
						for(let j=0; j<post.postFiles.length; j++){
							let postFile = post.postFiles[j];
							postHtml += `<img src="\${postFile.webPath }">`;
						}
						postHtml += `</div>`;
					}
					
					postHtml += `
											<div class="post-text" id="artistPostViewer">\${post.comuPostContent}</div>
										</div>
									</form>
								
								</div>
								<div class="feed-item-actions">
									<button class="action-btn comment-toggle-btn"><i class="bi bi-chat-left-dots"></i> 댓글 <span class="count">\${post.comuPostReplyCount }</span></button>
								</a>
									<button class="action-btn comment-toggle-btn" id="postListLike"
										data-board-type-code="\${post.boardTypeCode}"
										data-comu-post-no="\${post.comuPostNo}">
					`;
					
					if(post.likeYn == 'N'){
						postHtml += `<i class="bi bi-heart"><span id="likeCount">\${post.comuPostLike }</span></i>`;
					}else{
						postHtml += `<i class="bi bi-heart-fill"><span id="likeCount">\${post.comuPostLike }</span></i>`;
					}
					
					postHtml += `
									</button>
								</div>
							</div>	
						</div>
					</a>
					`;
				}
				
				$("#artistFeedList").html(postHtml);
			}else{
				let fanPostVO = res.fanPostVO;
				let postHtml = ``;
				for(let i=0; i<fanPostVO.length; i++){
					let post = fanPostVO[i];
					let postModDate = dateFormat(post.comuPostModDate);
					let postRegDate = dateFormat(post.comuPostRegDate);
					
					postHtml += `
						<div class="feed-item feedBox" data-post-id="\${post.comuPostNo }" style="cursor:pointer;">
						<div class="feed-item-header">
							<div class="author-avatar" style="background-color:'#8a2be2'; color:'#fff';"><img src="\${post.writerProfile.comuProfileImg }"></div>
							<div class="author-info">
								<span class="author-name" style="color:'#8a2be2';">\${post.writerProfile.comuNicknm}</span>
								<span class="post-time">
					`;
					
					if(post.comuPostRegDate != post.comuPostModDate){
						postHtml += `\${postModDate} (수정됨) </span>`;
					}else{
						postHtml += `\${postRegDate} </span>`;
					}
					
					postHtml += `
								</div> 
								<div class="post-options">
									<button id="dropCate" class="post-options-btn" data-bs-toggle="dropdown" aria-expanded="false"><i class="bi bi-three-dots-vertical"></i></button>
									<ul class="dropdown-menu" aria-labelledby="dropCate">
					`;
					if(userProfile.memUsername == post.writerProfile.memUsername){
					postHtml += `
						<li><a class="dropdown-item" href="#" id="edit" data-bs-toggle="modal" data-bs-target="#editPostModal" data-bs-postNum="\${post.comuPostNo }" data-bs-categroy="listEdit">수정</a></li>
						<li><hr class="dropdown-divider"></li>
						<li><a class="dropdown-item" href="#" id="delete" data-bs-postNum="\${post.comuPostNo }" data-bs-categroy="delete">삭제</a></li>
					`;
					}else{
					postHtml += `
						<li><a class="dropdown-item" href="#" id="reportPost"
								data-bs-toggle="modal"
								data-bs-target="#reportModal"
								data-bs-whatever="\${post.comuPostNo }"
								data-bs-boardType="\${post.boardTypeCode }"
								data-bs-comuProfileNo="\${post.comuProfileNo }"
								data-bs-comuNick="\${post.writerProfile.comuNicknm }"
								data-bs-comuContent="\${post.comuPostContent }"
								data-bs-selectType="RTTC001">신고</a></li>
					`;	
					}
					postHtml += `
									</ul>
								</div>
							</div>
						<div class="feed-item-content" data-post-id="\${post.comuPostNo }" >
							<a href="#detailPostModal" data-bs-toggle="modal" data-bs-postNum="\${post.comuPostNo}">
								<form id="postForm\${i }" data-postNum="\${post.comuPostNo }">
									<div class="openPostModal" id="openPostModal" data-postNum=\${post.comuPostNo }>
					`;
					
					if(post.postFiles != null && post.postFiles.length > 0){
						postHtml += `<div class="post-img">`;
						for(let j=0; j<post.postFiles.length; j++){
							let postFile = post.postFiles[j];
							postHtml += `<img src="\${postFile.webPath }">`;
						}
						postHtml += `</div>`;
					}
					
					postHtml += `
						<div class="post-text" id="artistPostViewer">\${post.comuPostContent}</div>
							</div>
						</form>
					
						</div>
						<div class="feed-item-actions">
							<button class="action-btn comment-toggle-btn"><i class="bi bi-chat-left-dots"></i> 댓글 <span class="count">\${post.comuPostReplyCount }</span></button>
						</a>
							<button class="action-btn comment-toggle-btn" id="postListLike"
								data-board-type-code="\${post.boardTypeCode}"
								data-comu-post-no="\${post.comuPostNo}">
						`;
		
					if(post.likeYn == 'N'){
						postHtml += `<i class="bi bi-heart"><span id="likeCount">\${post.comuPostLike }</span></i>`;
					}else{
						postHtml += `<i class="bi bi-heart-fill"><span id="likeCount">\${post.comuPostLike }</span></i>`;
					}
					
					postHtml += `
									</button>
								</div>
							</div>	
						</div>
					</a>
					`;
					
				}
				
				$("#fanFeedList").html(postHtml);
			}
		},
		error : function(error){
			console.log(error);
		}
	})
}

//상세 모달 창에서 좋아요 버튼 클릭 시
function likeBtn(e){
	let icon = e.children('i');
	let like = e.children('span');

	let iconAttr = icon.attr("class")
	let likeCount = e.children('span').html();

	console.log("iconAttr", iconAttr);
	let updateLikeCount;

	if(iconAttr === "bi bi-heart-fill"){
		icon.attr("class","bi bi-heart");
		updateLikeCount = parseInt(likeCount) - 1;
	}else{
		icon.attr("class","bi bi-heart-fill");
		updateLikeCount = parseInt(likeCount) + 1;
	}

	like.html(updateLikeCount);

} 

//좋아요 수 업데이트
function likeUpdate(data){
	$.ajax({
		url : "/community/like/update",
		type : "post",
		data : data,
		processData : false,
		contentType : false,
		success : function(res){
			if(res == 'OK'){
				console.log('정상적으로 등록 완료')
			}
		},
		error : function(error){
			console.log(error.status);
		},
		beforeSend : function(xhr){
			xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}')
		}
	});
}

function noticeList(data){
	let artGroupNo = data.artGroupNo;
	$.ajax({
		url : '/community/notice/' + artGroupNo,
		type : 'get',
		data : data,
		success : function(res){
			console.log(res);
			let pagingVO = res.pagingVO;
			let artistGroupVO = res.artistGroupVO;
			let noticeCodeVO = res.noticeCodeVO;
			let noticeList = pagingVO.dataList;
			
			let searchHtml = `
				<form id="noticeSearchForm">
					   <input type="search" name="searchWord" id="noticeSearchWord"
			`;
					   
			if(pagingVO.searchWord != null && pagingVO.searchWord != ''){
				searchHtml += `value="\${pagingVO.searchWord }"`;
			}else{
				searchHtml += `value="" `;
			}
			
			searchHtml += `
			   placeholder="공지사항 검색 (제목)" style="flex:1; padding:7px 10px; border:1px solid #ccc; border-radius:6px; font-size:0.95em;">
			   <input type="button" id="noticeSearchFormBtn" class="btn btn-primary" value="검색" />
		   
				<input type="radio" class="btn-check"name="searchType" id="noticeAll"  value=""
			`;
				
			if(pagingVO.searchType == null && pagingVO.searchType == ''){
				searchHtml += `checked`;
			}
			
			searchHtml += `
				/>
				<label class="btn btn-outline-primary" for="noticeAll">전체</label>
			`;
			for(let i=0; i<noticeCodeVO.length; i++){
				let code = noticeCodeVO[i];
				searchHtml += `
					<input type="radio" class="btn-check" name="searchType" id="\${code.commCodeDetNo }" value="\${code.commCodeDetNo }"
				`;
				if(code.commCodeDetNo == pagingVO.searchType){
					searchHtml += `checked/>`;
				}else{
					searchHtml += `/>`;
				}
				searchHtml += `<label class="btn btn-outline-primary" for="\${code.commCodeDetNo }"><c:out value="\${code.description }" /></label>`;
				
			}
			searchHtml += `
				</form>
			`;
			
			$("#noticeSearchWarp").html(searchHtml);
			
			let noticeListHtml = ``;
			for(let i=0; i<noticeList.length; i++){
				let notice = noticeList[i];
				let noticeRegDate = dateFormat(notice.comuNotiRegDate);
				noticeListHtml += `
					<a href="/community/notice/post/\${notice.comuNotiNo }">
						<b><div>[<c:out value="\${notice.codeDescription }" />]<c:out value="\${notice.comuNotiTitle }"/></div></b>
						<div>\${noticeRegDate}</div>
					</a>
				`;
			}
			
			$("#noticeList").html(noticeListHtml);
			
			$("#noticePagingArea").html(pagingVO.pagingHTML);
			
		},
		error : function(error){
			console.log(error.status);
		}
	})
}

$(function(){
	
	let fileMap = new Map();	// 업로드한 파일 담을 객체
	let fileNum = 0;		// 업로드한 파일의 순번

	let upFile = new Map();	// 수정 중 업로드한 파일 담을 객체
	let upFileNum = 0;		// 수정 중 업로드한 파일의 순번

	let deleteFileList = [];	// 삭제할 파일의 상세번호
	let deleteFileGroupNo = new Map();	// 삭제할 파일의 그룹번호

	let likeFlag = false;	// 좋아요 버튼 클릭 여부
	let oldLikeCount;		// 
	let newLikeCount;
	
	let artistTabFlag = true;
	
	// 초기 데이터 불러오기
	let first = {
		"artGroupNo" : $("#communityArtistGroupNo").val(),
	}
	artistPostList(first);
	// 초기 데이터 불러오기 끝
	
	// 아티스트 탭 클릭 시
	$("#artistPost").on("click",function(){
		artistTabFlag = true;
		console.log("아티스트 모드로 변경됨")
		let data = {
			"artGroupNo" : $("#communityArtistGroupNo").val(),
			"artistTabYn" : artistTabFlag
		}
		artistPostList(data);
		
	});
	
	// 팬탭 클릭 시
	$("#fanPost").on("click",function(){
		artistTabFlag = false;
		console.log("팬 모드로 변경됨")
		let data = {
			"artGroupNo" : $("#communityArtistGroupNo").val(),
			"artistTabYn" : artistTabFlag
		}
		artistPostList(data);
	});
	
	// 스케줄 클릭 시
	$("#schedule").on("click",function(){
		let artGroupNo = $("#communityArtistGroupNo").val();
		fullCalendar(artGroupNo);
	});
	
	// 공지사항 클릭 시
	$("#noticeApt").on("click",function(){
		let data ={
			"artGroupNo" : $("#communityArtistGroupNo").val()
		}
		noticeList(data);
	});
	
	// 게시글 댓글 목록에서 하트 클릭 시 반영
	$(".feedList").on("click","button[id=postListLike]" ,function(){
		console.log("123");
		let curLikeClass = $(this).children("i")[0].className;	// 클릭한 하트의 클래스 이름
		let curLikeCount = $(this).children("i").children("span")[0].innerHTML;	// 클릭한 하트의 카운트
		
		let updateCount;	// 클릭 후 변경될 숫자 객체
		
		let pm = 0;
		if(curLikeClass == 'bi bi-heart'){		// 클릭한 하트의 클래스가 bi bi-heart 라면
			$(this).children("i")[0].className = "bi bi-heart-fill";
			updateCount = parseInt(curLikeCount) + 1;
			pm++;
		}else{		// 클릭한 하트의 클래스가 bi bi-heart 라면
			$(this).children("i")[0].className = "bi bi-heart";
			updateCount = parseInt(curLikeCount) - 1;
			pm--;
		}
		
		// 새로운 카운트 수 화면상 바꿔줌
		$(this).children("i").children("span")[0].innerHTML = updateCount;
		
		// 선택한 하트에 담긴 데이터들 가져옴
		let boardTypeCode = $(this)[0].dataset.boardTypeCode;
		let comuPostNo = $(this)[0].dataset.comuPostNo;
		let artGroupNo = $("#communityArtistGroupNo").val()
		console.log(artGroupNo);
		
		// formdata로 묶어서 likeUpdate로 보냄
		let data = new FormData();
		data.append("comuPostNo",comuPostNo);
		data.append("boardTypeCode",boardTypeCode);
		data.append("artGroupNo",artGroupNo);
		data.append("insertDelete", pm);

		likeUpdate(data);
	});
	
	// 게시글 목록에서 수정버튼을 눌렀을 때
	$("#editPostModal").on("show.bs.modal",function(e){
		let postNum = e.relatedTarget.getAttribute('data-bs-postNum');
		updateModalInfo(postNum);
	});
	
	// 수정 모달에 있는 파일 영역에 i태그 클릭 시 (파일 삭제)
	$("#editImgArea").on("click","i",function(){
		$(this).parent('div').remove();		// 삭제할 파일을 감싸고 있는 div를 삭제함

		// 수정 이미지 영역에 이미지 element
		let img = $(this).parent('div').find('img')[0];
		console.log("img : ", img);

		if(img.dataset.filenum != null){
			deleteFileList.push(img.dataset.filenum);	// 삭제할 파일 리스트에 삭제한 파일의 상세번호를 넣음
		}
		deleteFileGroupNo.set(img.dataset.filegroupno,deleteFileList);	// 삭제할 파일 리스트를 삭제할 파일의 그룹번호를 키로 설정하고 안에 삭제할 파일 리스트를 넣음
	});
	
	// 게시글 수정 전송 버튼 클릭 시
	$("#postUpdateBtn").on("click",function(){
		
		// 아티스트 탭인지 구분
		let tabCheck = $("#artistTabYn").val();
		if(tabCheck){
			let checkeded = $("#editPostMemberShipYn").is(':checked');
			$("#editMemberShipYn").val(checkeded);
		}
		
		let artGroupNo = $("#communityArtistGroupNo").val();

		if(deleteFileList != null && deleteFileList.length > 0){
			console.log(deleteFileList);
			$("#deleteFiles").val(deleteFileList);
		}
		
		// 폼 데이터로 보내주기 위함
		let editPostForm = document.getElementById("editPostForm");

		let data = new FormData(editPostForm);

		$.ajax({
			url : "/community/update/post",
			type : "post",
			data : data,
			processData : false,
			contentType : false,
			success : function(res){
				if(res == "OK"){
					alert("글 수정 완료!");
					$("#editPostModal").modal('hide');
					let data = {
						"artGroupNo" : $("#communityArtistGroupNo").val(),
						"artistTabYn" : artistTabFlag
					}
					artistPostList(data);
				}else{
					alert("글 수정 실패!");
				}
				
			},
			error : function(error){
				console.log(error.status);
			},
			beforeSend : function(xhr) {
		        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
		    }
		})
	});
	
	// 게시글 목록에서 삭제 버튼 클릭 시
	$(".feedList").on("click","a[id=delete]",function(e){
		e.preventDefault();
		console.log(e.target.dataset.bsPostnum);
		
		let postNum = e.target.dataset.bsPostnum;
		
		let artGroupNo = $("#communityArtistGroupNo").val();
		
		let data = new FormData();
		data.append("artGroupNo",artGroupNo);
		data.append("comuPostNo",postNum);
		
		Swal.fire({
			title : "삭제 요청",
			text : "삭제된 글은 복구가 불가합니다. 정말로 삭제 하시겠습니까?",
			icon : "warning",
			showCancelButton : true,
			cancelButtonText : "아니오",
			confirmButtonText : "예"
		}).then((result) => {
			if(result.isConfirmed){
				$.ajax({
					url : "/community/delete/post/" + postNum,
					type : "post",
					data : data,
					contentType : false,
					processData : false,
					success : function(res){
						if(res == "OK"){
							Swal.fire({
								title : '삭제 완료',
								text : '정상적으로 삭제가 되었습니다.',
								icon : "success"
							})
							
							let param = {
								"artGroupNo" : $("#communityArtistGroupNo").val(),
								"artistTabYn" : artistTabFlag
							}
							
							artistPostList(param);
						}else{
							alert("게시글이 삭제가 되지 않았습니다.");
						}
					},
					error : function(error){
						console.log(error.status);
					},
					beforeSend : function(xhr) {
				        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
				    }
				})
			}
		});
		
	});
	
	
	// 닫기 버튼 행동제어
	$("#editPostModal").on("shown.bs.modal",function(e){
		console.log("열릴 떄 e : ", e.relatedTarget.getAttribute("data-bs-categroy"));
		let editBtnInfo = e.relatedTarget.getAttribute("data-bs-categroy");
		let closeBtn = $("#editPostModal").find("button[id=postUpdateCloseBtn]");
		
		// 상세 모달에서 수정 버튼 클릭 시 아래의 속성을 추가 시켜줌으로 닫기 버튼 눌렀을 떄 
		// 다시 상세모달이 오픈됨
		if(editBtnInfo === 'detailEdit'){
			$("#editPostModal").children("div[class=modal-footer]").children("button[class=btn-secondary]");
			console.log($("#editPostModal").find("button[id=postUpdateCloseBtn]"));
			closeBtn.attr("data-bs-target","#detailPostModal");
			closeBtn.attr("data-bs-toggle","modal");
		}else{
			// 받아온 editBtnInfo가 detailEdit이 아니라면 해당 속성을 넣었던 걸 지워줌 
			closeBtn.removeAttr("data-bs-target");
			closeBtn.removeAttr("data-bs-toggle");
		}
	});
	
	// 댓글 작성
	$("#replyBtn").on("click", function(e){
		e.preventDefault();
		let content = $("#comuReplyContent");
		if(content.val().trim() == null || content.val().trim() == ""){
			Swal.fire({
				title : '작성 필요!',
				text : '댓글을 작성해주세요.',
				icon : 'warning'
			});
			return false;
		}

		let detailModal = document.getElementById("detailPostModal");
		let myDetailModal = bootstrap.Modal.getInstance(detailModal);

		myDetailModal.hide();
		
		let replyForm = document.getElementById("replyForm");

		let data = new FormData(replyForm);

		$.ajax({
			url : "/community/reply/insert",
			type : "post",
			data : data,
			processData : false,
			contentType : false,
			success : function(res){
				console.log(res);
				if(res.result == "OK"){
					
					let data = {
						"artGroupNo" : $("#communityArtistGroupNo").val(),
						"artistTabYn" : artistTabFlag
					}
					
					artistPostList(data);
					
					let detailModalReOpen = document.getElementById("detailPostModal");
					console.log(detailModalReOpen);
					let detailModal = new bootstrap.Modal(detailModalReOpen);
					console.log(detailModal);
					let postNum = res.replyVO.comuPostNo;
					
					openDetailModal(postNum);
					
					detailModal.show();
					
				}
			},
			error : function(error){
				console.log(error.status);
			},
			beforeSend : function(xhr) {
		        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
		    }
		});
	});
	
	// 상세 모달창 열렸을 시
	$("#detailPostModal").on("show.bs.modal",function(e){
		console.log("e : " , e);
		$("#comuReplyContent").val("");
		$("#replyList").html("");
		$("#detailImgArea").html("");

		let postNum;
		if(e.relatedTarget){
			postNum = e.relatedTarget.getAttribute('data-bs-postNum')
			openDetailModal(postNum);
		}
	})
	
	// 상세모달 열리고 나서의 행동
	$("#detailPostModal").on("shown.bs.modal",function(){

		// 댓글 삭제 버튼 클릭 시
		let replyDeleteBtnList = document.querySelectorAll("#replyDeleteBtn");
		replyDeleteBtnList.forEach(btn => {
			btn.addEventListener("click",function(e){
				e.preventDefault();
				Swal.fire({
					title : '삭제요청',
					text : "삭제시 복구가 불가합니다.",
					icon : 'question',
					showCancelButton : true,
					cancelButtonText : '아니오',
					confirmButtonText : '예'
				}).then((result) =>{
					if(result.isConfirmed){
						let detailModal = document.getElementById("detailPostModal");
						let myDetailModal = bootstrap.Modal.getInstance(detailModal);

						myDetailModal.hide();

						let test = e.target.dataset.comuReplyNo;
						let postNo = e.target.dataset.postNo;
						let replyNo = e.target.dataset.comuReplyNo;
						
						let data = new FormData();
						data.append("replyNo", replyNo)
						$.ajax({
							url : "/community/reply/delete",
							type : "post",
							data : data,
							contentType : false,
							processData : false,
							success : function(res){
								console.log(res)
								if(res == 'OK'){
									Swal.fire({
										title : '삭제 성공',
										text : '댓글이 정상적으로 삭제가 완료되었습니다.',
										icon : 'success'
									})

									let data = {
										"artGroupNo" : $("#communityArtistGroupNo").val(),
										"artistTabYn" : artistTabFlag
									}
									
									artistPostList(data);
									
									let detailModalReOpen = document.getElementById("detailPostModal");
									let detailModal = new bootstrap.Modal(detailModalReOpen);

									openDetailModal(postNo);
									
									detailModal.show();
								}
							},
							error : function(error){
								console.log(error.status);
							},
							beforeSend : function(xhr) {
						        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
						    }
						});
					}
				});

				
			})
		});

		oldLikeCount = $(this).find("#likeCount").html();
		console.log("처음 좋아요 수 : ", oldLikeCount);
		
		$("#likeButton").on("click", function(){
			console.log("누름");
			likeFlag = true;
			likeBtn($(this));
		});
		
	});
	
	// 상세 모달 닫혔을 시 좋아요에 변화가 있을 시 
	$("#detailPostModal").on("hide.bs.modal",function(e){
		console.log("닫았을 때 : ", e);
		console.log(e.currentTarget);
		console.log("현재 : ", $(this).find("#likeCount").html());

		newLikeCount = $(this).find("#likeCount").html();

		let comuPostNo = $(this).find("#comuPostNo").val();
		let boardTypeCode = $(this).find("#boardTypeCode").val();
		let artGroupNo = $("#communityArtistGroupNo").val();

		// 기존의 좋아요 수가 40이라고 가정
		// 액션 1. 좋아요 버튼을 누르지 않고 창을 닫을 때 좋아요 수 변화가 없음
		// 액션 2. 좋아요 버튼을 누르고 창을 닫을 때 좋아요 수는 +1인 상태 그래서 창을 닫을 때 41이 되어 있음. 이전에 있던 좋아요 수보다 새로운 좋아요 수가 더 높기에 pM에 1이 들어가 있음
		// 액션 3. 좋아요 버튼을 취소하고 창을 닫을 떄 좋아요 수는 -1인상태 그래서 창을 닫을 때 39가 되어 있음. 이전에 있던 좋아요 수가 더 높기에 pM에 -1이 들어가 있음
		let pM = 0;
		if(oldLikeCount == newLikeCount){
			pM = 0;
		}else if(oldLikeCount > newLikeCount){
			pM = -1;
		}else if(oldLikeCount < newLikeCount){
			pM = +1;
		}
		console.log("계산 : ", pM)

		if(likeFlag){	// 좋아요가 변경이 되었다면
			let data = new FormData();
			data.append("comuPostNo",comuPostNo);
			data.append("boardTypeCode",boardTypeCode);
			data.append("artGroupNo",artGroupNo);
			data.append("insertDelete", pM);

			likeUpdate(data);
		}
		
	});
	
	// 글 등록 시
	$("#postSendBtn").on("click",function(){
		Swal.fire({
			title : '등록 요청',
			text : '게시글을 등록하시겠습니까?',
			icon : 'question',
			showCancelButton : true,
			confirmButtonText : '예',
			cancelButtonText : '아니오'
		}).then((result) => {
			if(result.isConfirmed){
				let checkeded = $("#postMemberShipYn").is(':checked');
				$("#memberShipYn").val(checkeded);
				let postForm = document.getElementById("postForm");

				let artGroupNo = $("#comuArtGroupNo").val();

				let data = new FormData(postForm);

				$.ajax({
					url : "/community/insert/post",
					type : "post",
					data : data,
					processData : false,
					contentType : false,
					success : function(res){
						if(res == 'OK'){
							Swal.fire({
								title : '저장완료!',
								text : '게시글이 정상적으로 저장되었습니다!',
								icon : 'success'
							});
							$("#insertPostModal").modal('hide');
							
							let data = {
								"artGroupNo" : $("#communityArtistGroupNo").val(),
								"artistTabYn" : artistTabFlag
							}
							
							artistPostList(data);
							
						}else{
							alert("글 등록 실패")
						}
					},
					error : function(error){
						console.log(error.status);
					},
					beforeSend : function(xhr) {
				        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
				    }
				});
			}
		});
		
	});

	
	// 검색에 있는 아티스트 클릭 시
	$("#artistFeedSearchWrap").on("click", "input[name=artistNm]", function(){
		$(this).val();
		console.log($(this).val())
		let data = {
			"artGroupNo" : $("#communityArtistGroupNo").val(),
			"searchType" : $(this).val(),
			"searchWord" : $("#artistFeedSearchInput").val(),
			"artistTabYn" : artistTabFlag
		}
		artistPostList(data);
	});
	
	// 아티스트 탭 검색 버튼 클릭 시
	$("#artistFeedSearchWrap").on("click", "input[id=searchFormBtn]", function(){
		console.log($("input[name=artistNm]:checked").val())
		let searchType = $("input[name=artistNm]:checked").val();
		let data = {
			"artGroupNo" : $("#communityArtistGroupNo").val(),
			"searchType" : searchType,
			"searchWord" : $("#artistFeedSearchInput").val(),
			"artistTabYn" : artistTabFlag	
		}
		artistPostList(data);
	});
	
	$("#fanFeedSearchWrap").on("click", "input[id=searchFormBtn]", function(){
		let data = {
			"artGroupNo" : $("#communityArtistGroupNo").val(),
			"searchWord" : $("#fanFeedSearchInput").val(),
			"artistTabYn" : artistTabFlag	
		}
		artistPostList(data);
	});
	
	const hash = window.location.hash;
		if(hash){
			const hashTab = $(`button[data-bs-target="\${hash}"]`);
			if(hashTab.length > 0){
				const tab = new bootstrap.Tab(hashTab[0]);
				tab.show();
			}
		}
	
	console.log("codeMap : ", ${codeMap})
	
	console.log("현재 경로 : ", window.location.pathname);

	let pathname = window.location.pathname;
	let path = pathname.split('/');
	
	console.log(path);
	
	if(path[2] == 'live'){
		let artGroupNo = $("#communityArtistGroupNo").val();
		
		$("#live").attr("class","tab-item active");
		
		$("#liveList").addClass("show active");
		
	}
	


	// 이미지 영역 가져오기
	let area = $("#imgArea");

	$("#insertPostFile").on("change",function(e){
		let files = e.target.files;

		let html = ``;
		for(let i=0; i<files.length; i++){
			let file = files[i];

			fileMap.set(fileNum.toString(),file);

			let reader = new FileReader();
    		reader.onload = function(e){
    			html += `
					<div class="imgDiv">
						<img src="\${e.target.result}"  data-fileNum='\${fileNum}' >
								<i class="bi bi-x-lg"></i>
						</img>

					</div>
					`;
        		fileNum++;
			$("#imgArea").html(html);
    		}
    		reader.readAsDataURL(file);
		}

	});

	// 이미지 삭제 시 files map에 삭제
	area.on("click","i",function(){
		let pr = $(this).parent("div").remove();
		let cur = $(this).parent("div").children('img')[0].dataset.filenum;

		files.delete(cur);

	});


	// 등록 모달 열렸을 시
	$("#insertPostModal").on("show.bs.modal",function(){
		if(artistTabFlag){
			$("#postForm").children("label[for=memberShipYn]").attr("style","display:block");
			$("#postForm").children("input[name=boardTypeCode]").val('ARTIST_BOARD');
			$("#postForm").children("input[name=artistTabYn]").val('true');
			let tabCheck = $("#artistTabYn").val();
			if(tabCheck){
				$("#postMemberShipYn").prop("checked",false);
			}
		}else{
			console.log($("#postForm").children("label[for=memberShipYn]"));
			$("#postForm").children("label[for=memberShipYn]").attr("style","display:none");
			$("#postForm").children("input[name=boardTypeCode]").val('FAN_BOARD');
			$("#postForm").children("input[name=artistTabYn]").val('false');
		}
		
		$("#comuPostContent").val("");
		$("#insertPostFile").val("");
		$("#imgArea").html("");

		let content = document.getElementById("comuPostContent");
		contentLengthCheck(content);
	});
	
	// 수정 모달 닫았을 시
	$("#editPostModal").on("hide.bs.modal",function(){
		$("#editImgArea").html("");
		let tabCheck = $("#artistTabYn").val();
		if(tabCheck){
			$("#editPostMemberShipYn").prop("checked",false);
		}
		$("#editInsertPostFile").val("");
	});


	
	// 수정 모달에서 파일 선택 클릭 시 
	$("#editInsertPostFile").on("change",function(e){
		console.log("수정 이미지 추가됨")
		let files = e.target.files;

		for(let i=0; i<files.length; i++){
			let file = files[i];

			fileMap.set(fileNum.toString(),file);

			let reader = new FileReader();
    		reader.onload = function(e){
    			html = `
					<div class="imgDiv">
						<img src="\${e.target.result}"  data-fileNum='\${fileNum}' >
								<i class="bi bi-x-lg"></i>
						</img>
					</div>
					`;
        		fileNum++;
				$("#editImgArea").append(html);
    		}
    		reader.readAsDataURL(file);
		}

	});
	

	$("#reportModal").on("show.bs.modal",function(e){
		console.log("신고 모달 열림 / 게시판 번호 : " + e.relatedTarget.getAttribute('data-bs-whatever'));
		console.log("보드유형 : " + e.relatedTarget.getAttribute('data-bs-boardType'));
		
		let postNo = e.relatedTarget.getAttribute('data-bs-whatever');
		let boardType = e.relatedTarget.getAttribute('data-bs-boardType');
		let comuProfileNo = e.relatedTarget.getAttribute('data-bs-comuProfileNo');
		let comuNick = e.relatedTarget.getAttribute('data-bs-comuNick');
		let comuContent = e.relatedTarget.getAttribute('data-bs-comuContent');
		let selectType = e.relatedTarget.getAttribute('data-bs-selectType');
		let comuReplyNo = e.relatedTarget.getAttribute('data-bs-comuReplyNo');
		
		console.log("boardType:", boardType);
		
		let code = ${codeMap};
		let reasonCode = code.reasonCode;
		let reportStatCode = code.reportStatCode;
		let reportTarCode = code.reportTarCode;
		console.log(code);

		let targetCode;
		
		let info = {
			"postNo" : postNo,
			"boardType" : boardType,
			"comuProfileNo" : comuProfileNo,
			"reasonCode" : reasonCode,
			"reportTarCode" : selectType,
			"comuNick" : comuNick,
			"comuContent" : comuContent,
			"comuReplyNo" : comuReplyNo
		};
		reportModalInfo(info);

	});

	
	$("#reportSendBtn").on("click",function(){
		
		Swal.fire({
			title : '신고',
			test : '본 신고는 운영 정책에 따라 처리되며, 신고 내용이 서비스 약관에 위배될 경우 해당 게시물 또는 사용자는 적절한 조치를 받게 됩니다. 부적절한 신고는 처리되지 않을 수 있습니다.',
			footer : '허위 신고 시 서비스 이용에 불이익을 받을 수 있습니다. 신중하게 신고해주세요.',
			icon : 'warning',
			showCancelButton : true,
			cancelButtonText : '취소',
			confirmButtonText : '신고'
		}).then((result) => {
			if(result.isConfirmed){
				let reportForm = document.getElementById("reportForm");

				let data = new FormData(reportForm);
				console.log(data)
				$.ajax({
					url : "/community/send/report",
					type : "post",
					data : data,
					contentType : false,
					processData : false,
					success : function(res){
						if(res == 'OK'){
							Swal.fire({
								title : '접수 완료',
								text : '신고가 접수되었습니다. 빠른 시일 내 조치하겠습니다!',
								icon : 'success'
							});
							$("#reportModal").modal('hide');
						}else if(res == 'EXIST'){
							Swal.fire({
								text : '이미 신고하셨습니다.',
								icon : 'error'
							});
							$("#reportModal").modal('hide');
						}
					},
					error : function(error){
						console.log(error.status);
					},
					beforeSend : function(xhr) {
				        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
				    }
				});
			}
		});
	});

	$("#reportModal").on("hide.bs.modal",function(e){
		$("#targetComuReplyNo").val("");
	});

	$("#scheduleModal").on("show.bs.modal",function(e){
		console.log(e);
		let flag = true;	// 상세일정이라는 의미
		
		let modalTitle = $("#title");		// 상세 모달 제목
    	let modalContent = $("#content");	// 상세 모달 내용
    	let modalPlace = $("#place");		// 상세 모달 장소
    	let modalUrl = $("#dateUrl");		// 상세 모달 
    	let modalTextColor = $("#textColor");	// 상세 모달 제목 색상
    	let modalBackgroundColor = $("#backgroundColor");	// 일정 배경 색
    	let modalDateId = $("#dateId");		// 일정 번호
    	let link = $("#datelink");			// url태그
    	let modalAllDayStatus = $("#allDayStatus");
    	
    	let twolDayDiv = $("div[class=notAllDaySchedule]");
    	let oneDayDiv = $("div[class=allDaySchedule]");
    	let modalStartDate = $("#startDate");
    	let modalEndDate = $("#endDate");
    	let allDate = $("#allDate");
    	
		let target = e.relatedTarget;
		
		console.log("상세모달", twolDayDiv);
		
		let { title, url, textColor, backgroundColor, id, allDay, startStr, endStr, start, end } = target.event;
		let { allDayStatus, content, place } = target.event.extendedProps;
		console.log(target.event);
		modalTitle.val(title);
    	modalContent.html(content);
    	modalPlace.val(place);
    	modalUrl.val(url);
    	modalTextColor.val(textColor);
    	modalBackgroundColor.val(backgroundColor);
    	modalDateId.val(id);
    	modalAllDayStatus.val(allDayStatus)
    	
    	link.attr("href",url);
    	link.html(title+"바로가기");
    	
    	if(allDay){
    		$("#allDayStatus").prop("checked",true);
    		
    		if(endStr == null || end == null){
    			endStr = startStr;
    			oneDayDiv.attr("style","display:block");
    			allDate.val(startStr)
    		}else{
    			twolDayDiv.attr("style","display:block")
	    		modalStartDate.val(startStr);
	    		modalEndDate.val(endStr);
    		}
    		
    	}else{
    		$("#allDayStatus").prop("checked",false);
    		twolDayDiv.attr("style","display:block");
    		let formatStart = scheduleDateFormat(start);
    		let formatEnd = scheduleDateFormat(end);
    		modalStartDate.val(formatStart);
    		modalEndDate.val(formatEnd);
    	}
	});
	
	$("#scheduleModal").on('hide.bs.modal',function(){
		let twolDayDiv = $("div[class=notAllDaySchedule]");
    	let oneDayDiv = $("div[class=allDaySchedule]");
    	
    	twolDayDiv.attr("style","display:none");
    	oneDayDiv.attr("style","display:none");
	});
	
	$("#noticeSearchWarp").on("click","input[id=noticeSearchFormBtn]",function(){
		let searchType = $("#noticeSearchForm input[name=searchType]:checked").val();
		console.log(searchType);
		let data = {
			"searchType" : searchType,
			"searchWord" : $("#noticeSearchWord").val(),
			"artGroupNo" : $("#communityArtistGroupNo").val()
		}
			
		noticeList(data);
	});
	
	$("#noticeSearchWarp").on("click", "input[name=searchType]", function(){
		let data = {
			"searchType" : $(this).val(),
			"searchWord" : $("#noticeSearchWord").val(),
			"artGroupNo" : $("#communityArtistGroupNo").val()
		}
		noticeList(data);
	});
	
	$("#test").on("click",function(){
		$("#postDetailModal").modal('show');
	});
	


	// 팔로우 기능
	// 팔로우버튼
	let followFlag = "${followFlag}" != 'N' ? true : false;
	let followToggleBtn = $("#followToggleBtn"); // 팔로우 버튼

	followToggleBtn.on("click",function(){
		if(followFlag){
			Swal.fire({
				   title: '팔로우를 취소하시겠습니까?',
				   text: '취소 후 재 가입시 기존 데이터에 접근할 수 없습니다.',
				   icon: 'warning',

				   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
				   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
				   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
				   confirmButtonText: '확인', // confirm 버튼 텍스트 지정
				   cancelButtonText: '취소', // cancel 버튼 텍스트 지정

				}).then(result => {
				   // 만약 Promise리턴을 받으면,
				    if(result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
				    	let comuProfileNo = "${userProfile.comuProfileNo}";
				    	let artGroupNo = "${userProfile.artGroupNo}";
				    	let memUsername = "${userProfile.memUsername}";
				    	let data = {
				    			comuProfileNo : comuProfileNo,
				    			artGroupNo : artGroupNo,
				    			memUsername : memUsername,
				    	}
				    	// 팔로우 취소
				    	$.ajax({
				    		url : "/api/community/removeapt",
				    		type : "post",
				    		contentType : "application/json; charset=utf-8",
				    		data : JSON.stringify(data),
				    		beforeSend : function(xhr){
								xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}')
							},
				    		success : function(res){
				    			location.reload();
				    		},
				    		error : function(err){
				    			console.log(err);
				    			sweetAlert("error","취소 도중 에러가 발생했습니다. 다시 시도해주세요!");
				    		}
				    	});

				    }
				});
		}else{
			$("#commProfileModal").modal("show");
		}
	})

	if(!followFlag){
		let followBtn = $("#followBtn");	// 오버레이쪽 팔로우 버튼
		let commProfileModal = $("#commProfileModal"); // 커뮤니티 프로필 생성 모달
		let previewImgBox = $("#previewImgBox"); //미리보기이미지박스
		let imgFile = $("#imgFile"); // 이미지 첨부 파일
		let previewImg = $("#previewImg"); // 미리보기 이미지
		let comuNicknm = $("#comuNicknm"); // 닉네임 필드
		let file = null;	// 파일 없으면 null
		let profileSubmitBtn = $("#profileSubmitBtn"); // 닉네임 등록 버튼

		followBtn.on("click",function(){
			commProfileModal.modal("show");
		});

		// 프로필 이미지 박스 클릭시 이미지파일 선택
		previewImgBox.on("click",function(){
			imgFile.click();
		})

		// 프로필 이미지 이벤트
		imgFile.on("change",function(){
			const defaultPath = "${pageContext.request.contextPath}/upload/profile/base/defaultImg.png";
			const maxSize = 2 * 1024 * 1024;
			file = this.files[0];

			if(file == null){
				previewImg.attr("src", defaultPath);
				return false;
			}

			if(file.size > maxSize){
				sweetAlert("error", "파일 사이즈는 2MB 미만으로 선택해주세요!");
				$(this).val("");
				file = null;
				previewImg.attr("src", defaultPath);
				return false;
			}

			if(!file.type.startsWith("image/")){
				sweetAlert("error", "이미지파일만 선택해주세요");
				$(this).val("");
				file = null;
				previewImg.attr("src", defaultPath);
				return false;
			}

			let fileReader = new FileReader();
			fileReader.onload = function(e){
				previewImg.attr("src", e.target.result);
			};

			fileReader.readAsDataURL(file);
		})

		profileSubmitBtn.on("click",function(){
			let comuNicknmVal = comuNicknm.val();
			if(comuNicknmVal == null || comuNicknmVal.trim() == ''){
				sweetAlert("error","닉네임을 입력해주세요");
				return false;
			}
			if(comuNicknmVal.length > 12){
				sweetAlert("error","닉네임은 12자 이내로 입력해주세요");
				return false;
			}

			let formData = new FormData();
			let artGroupNo = "${artistGroupVO.artGroupNo}";
			let memUsername = "${user.username}";
			formData.append("artGroupNo",artGroupNo);
			formData.append("memUsername",memUsername);
			formData.append("comuNicknm", comuNicknmVal);
			if(file != null){
				formData.append("imgFile", file);
			}
			joinCommunity(formData);
		})

	}

	function joinCommunity(formData){
		$.ajax({
			url : '/api/community/joinapt',
			type : "post",
			processData : false,
			contentType : false,
			data : formData,
			beforeSend : function(xhr){
				xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}')
			},
			success : function(res){
				location.reload();
			},
			error : function(err){
				console.log(err);
				sweetAlert("error","팔로우 하는 도중 에러가 발생했습니다. 다시 시도해주세요!");
			}
		});
	}

	let myProfile = $("#myProfile"); // 마이프로필 엘리먼트
	myProfile.on("click",function(){
		let artGroupNo = "${artistGroupVO.artGroupNo}";
		let comuProfileNo = $(this).data("comuProfileNo");
		location.href = `${pageContext.request.contextPath}/community/\${artGroupNo}/profile/\${comuProfileNo}`;
	});


	// 모달 수정 부분
	// feedItem 클릭시 모달 오픈
// 	$(".feed-item-content").each((i,v) => {
// 		$(v).on("click",function(){
// 			let postNum = $(this).data("postId");

// 			openDetailModal(postNum);
// 			$("#detailPostModal").modal("show");
// 		})
// 	});
});
function contentLengthCheck(ele){
	let size = ele.value.length;
	let text = ele.value;
	if(size > 1000){
		alert("글 작성은 1000자 이상을 넘을 수 없습니다.");
		let subText = text.substring(0,1000);
		ele.value = subText;
		$(ele).parents("form").find(".cmt-sub-size").text(subText.length);
		return false;
	}

	$(ele).parent("form").find(".cmt-sub-size").text(size);
}

function replyContentLengthCheck(ele){
	let size = ele.value.length;
	let text = ele.value;
	if(size > 300){
		alert("댓글 작성은 300자 이상을 넘을 수 없습니다.");
		let subText = text.substring(0,300);
		ele.value = subText;
		$(ele).parents(".comment-form-container").parent("#replyArea").find(".cmt-sub-size").text(subText.length);
		return false;
	}

	$(ele).parent(".comment-form-container").parent("#replyArea").find(".cmt-sub-size").text(size);
}



function scheduleDateFormat(jsonDate){
	if (!jsonDate) return "";
	let date = new Date(jsonDate);
	let month = date.getMonth() + 1;
    let day = date.getDate();
    let hour = date.getHours();
    let minute = date.getMinutes();
    let second = date.getSeconds();

    month = month >= 10 ? month : '0' + month;
    day = day >= 10 ? day : '0' + day;
    hour = hour >= 10 ? hour : '0' + hour;
    minute = minute >= 10 ? minute : '0' + minute;
    second = second >= 10 ? second : '0' + second;

    return month + '-' + day + ' ' + hour + ':' + minute;
}



/* let info = {
"postNo" : postNo,
"boardType" : boardType,
"comuProfileNo" : comuProfileNo,
"reasonCode" : reasonCode,
"reportTarCode" : reportTarCode,
"comuNick" : comuNick,
"comuContent" : comuContent
"comuReplyNo" : comuReplyNo
}; */

function reportModalInfo(info){
	console.log("처리하기 : " + info)
// 	<input type="radio" class="btn-check" name="options-outlined" id="success-outlined" autocomplete="off" checked>
// 	<label class="btn btn-outline-primary" for="success-outlined">Checked success radio</label>

// 	<input type="radio" class="btn-check" name="options-outlined" id="danger-outlined" autocomplete="off">
// 	<label class="btn btn-outline-danger" for="danger-outlined">Danger radio</label>
	let postNo = info.postNo;	
	let boardType = info.boardType;  
	let comuProfileNo = info.comuProfileNo; 
	let reasonCodeList = info.reasonCode;	
	let reportTarCode = info.reportTarCode; 
	let artGroupNo = $("#communityArtistGroupNo").val();
	let comuReplyNo = info.comuReplyNo;
	
	console.log(reportTarCode)

	let targetNick = info.comuNick;

	let targetContent = info.comuContent;

	let radioHtml = ``;
	for(let i=0; i<reasonCodeList.length; i++){
		let reasonCode = reasonCodeList[i];
		radioHtml += `
			<input type="radio" class="btn-check" name="reportReasonCode" id="\${reasonCode.commCodeDetNm}" value="\${reasonCode.commCodeDetNo}" autocomplete="off">
		 	<label class="btn btn-outline-primary" for="\${reasonCode.commCodeDetNm}">\${reasonCode.description}</label>
		`;
	}

	$(".radioArea").html(radioHtml);

	$("#targetNick").val(targetNick);
	$("#targetContent").html(targetContent);

	$("#targetComuPostNo").val(postNo);
	$("#targetBoardTypeCode").val(boardType);
	$("#reportArtGroupNo").val(artGroupNo);
	$("#targetComuProfileNo").val(comuProfileNo);
	$("#reportTargetTypeCode").val(reportTarCode);
	
	if(comuReplyNo != null){
		$("#targetComuReplyNo").val(comuReplyNo);
	}

	console.log("타겟 코드 : ", reportTarCode);
}

function updateModalInfo(postNum){
	$.ajax({
		url : "/community/post/get/" + postNum,
		type : "get",
		success : function(res){
			console.log("수정 모달에 등록 될 정보를 성공적으로 가지고 옴",res);
			
			$("#postNum").val(res.comuPostNo);

			$("#editComuPostContent").text(res.comuPostContent);

			let content = document.getElementById("editComuPostContent");
			contentLengthCheck(content);

			$("#fileGroupNo").val(res.fileGroupNo);
			console.log("가지고 온 정보 중 파일 그룹번호를 fileGroupNo아이디를 가진 input의 히든 타입에 값을 넣어줌 fileGroupNo : ", res.fileGroupNo);

			if(res.artistTabYn){
				if(res.memberShipYn){
					$("#editPostMemberShipYn").prop("checked",true);
				}
				$("#checkBoxMbs").attr("style", "display:block");
			}else{
				$("#checkBoxMbs").attr("style", "display:none");
			}

			let html = ``;
			if(res.postFiles != null && res.postFiles.length > 0){
				for(let i=0; i<res.postFiles.length; i++){
					let postFile = res.postFiles[i];
					html += `
						<div class="imgDiv">
							<img src="\${postFile.webPath}"  data-fileNum='\${postFile.attachDetailNo}' >
									<i class="bi bi-x-lg"></i>
							</img>
						</div>
					`;
				}
			}

			$("#editImgArea").append(html);


		},
		error : function(error){
			console.log(error.status);
		}
	});
}

//모달 수정 부분
function openDetailModal(postNum){

	console.log("postNum: ", postNum)
	let artGroupNo = $("#communityArtistGroupNo").val();

	let data = new FormData();
	data.append("artGroupNo",artGroupNo);
	data.append("comuPostNo",postNum )

	$.ajax({
		url : "/community/post/detail/" + postNum,
		type : "get",
		data : {
			"artGroupNo" : artGroupNo,
			"comuPostNo" : postNum
		},
		success : function(res){
			console.log("상세정보 요청함 : " , res);
			// 작성자 정보
			let writer = res.writerProfile;
			let {comuProfileImg : writerImg, comuNicknm : writerNick, comuProfileNo:writerComuProfileNo} = writer;
			let userProfileNo = 0;
				if("${not empty userProfile}"){
					userProfileNo = "${userProfile.comuProfileNo}"
				}
			// 게시판 정보
			let {comuPostContent:content,postFiles,boardTypeCode
				,comuPostNo,likeYn, comuPostRegDate:regDate
				,comuPostModDate : modDate
				,comuPostLike : likeCount, comuPostReplyList, comuPostReplyCount} = res
			
			console.log("comuPostReplyCount : ", comuPostReplyCount);
				
			$("#comuPostNo").val(comuPostNo);
			$("#boardTypeCode").val(boardTypeCode);

			let likeIcon = $("#likeBtn").children('i');
			let likeClass;
			if(likeYn == 'Y'){
				likeClass = "bi bi-suit-heart-fill";
			}else{
				likeClass = "bi bi-suit-heart";
			}
			likeIcon.attr("class",likeClass);

			let date;
			if(regDate === modDate){
				date = dateFormat(regDate);
			}else{
				date = dateFormat(modDate) + "(수정됨)";
			}

			let postHtml = ``;
			postHtml = `
				<div class="post-pane-header">
                	<div class="d-flex align-items-center">
                        <img src="\${writerImg}" class="rounded-circle" width="50px" height="50px">
                        <div class="ms-2">
                            <strong class="d-block">\${writerNick}</strong>
                            <small class="text-muted">\${date}</small>
                        </div>
                	</div>
                	<div class="dropdown">
				        <button class="btn btn-link text-secondary p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
				            <i class="bi bi-three-dots-vertical"></i>
				        </button>
				        <ul class="dropdown-menu"
				`;
			if(writerComuProfileNo == userProfileNo){
				postHtml += `
					<li><button class="dropdown-item" data-bs-target="#editPostModal" data-bs-toggle="modal" data-bs-dismiss="modal" data-bs-postNum="\${postNum}" id="edit" data-bs-categroy="detailEdit">수정</button></li>
		            <li><button class="dropdown-item" data-comu-post-no="\${postNum}" id="delete">삭제</button></li>
				`;
			}else{
				postHtml += `
					<li><button class="dropdown-item text-danger" data-comu-post-no="\${postNum}" >신고</button></li>
				`;
			}
			postHtml += `
				        </ul>
				    </div>
                </div>
                <div class="post-pane-body">
                `;
            if(postFiles != null && postFiles.length > 0){
            	for(let file of postFiles){
            		postHtml += `
            			<img src="\${file.webPath}" alt="\${file.fileOriginalNm}" width="150px" height="150px">
            		`;
            	}
            }
            postHtml += `
                	<p>\${content}<p>
                </div>
                <div class="post-pane-footer">
                `;
            if(likeYn == 'Y'){
            postHtml += `
				    <button type="button" class="btn btn-like active" data-comu-post-no="\${postNum}" data-comu-profile-no="\${userProfileNo}" id="likeButton">
				        <i class="bi bi-heart-fill"></i>
				        <span id="likeCount">\${likeCount}</span>
				    </button>
            	`;
            }else{
            	postHtml += `
				    <button type="button" class="btn btn-like" data-comu-post-no="\${postNum}" data-comu-profile-no="\${userProfileNo}" id="likeButton">
				        <i class="bi bi-heart"></i>
				        <span id="likeCount">\${likeCount}</span>
				    </button>
            	`;
            }
            postHtml +=`
				</div>
			`;

			$("#postBox").html(postHtml);

			$("#replyCount").html("답글 " + comuPostReplyCount + "개");

			// 댓글 영역
			let replyHtml = ``;
			for(let reply of comuPostReplyList){
				let {comuReplyContent, comuReplyRegDate, comuReplyNo, replyMember, comuReplyModDate} = reply;
				let {comuProfileImg, comuNicknm, comuProfileNo:replyComuProfileNo} = replyMember;
				replyHtml += `
					<div class="comment-item">
		            <img src="\${comuProfileImg}" class="rounded-circle comment-avatar">
		            <div class="comment-main-wrapper">
		            	<div class="comment-header">
		            		<strong>\${comuNicknm}</strong>
		            		<div class="dropdown">
						        <button class="btn btn-link text-secondary p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
						            <i class="bi bi-three-dots-vertical"></i>
						        </button>
						        <ul class="dropdown-menu">
					`;
					if(userProfileNo == replyComuProfileNo){
						replyHtml += `
				            <li><button class="dropdown-item" data-comu-reply-no="\${comuReplyNo}" data-post-no="\${comuPostNo}" id="replyDeleteBtn">삭제</button></li>
						`;
					}else{
						replyHtml += `
							<li><button class="dropdown-item text-danger" 
								data-bs-toggle="modal"
								data-bs-target="#reportModal"
								data-bs-whatever="\${comuPostNo}"
								data-bs-comuReplyNo="\${comuReplyNo}"
								data-bs-boardType="\${boardTypeCode}"
								data-bs-comuProfileNo="\${replyComuProfileNo}"
								data-bs-comuNick="\${comuNicknm}"
								data-bs-comuContent="\${comuReplyContent}"
								data-bs-selectType="RTTC002"
								>신고</button></li>
						`;
					}
					replyHtml += `
										</ul>
						            </div>
						        </div>
						        <div class="comment-body-text"> <p>\${comuReplyContent}</p>
						            <small class="text-muted">\${dateFormat(comuReplyModDate)}</small>
						        </div>
						    </div>
						</div>
					`;
			}
			$("#replyList").html(replyHtml);

			$("#boardTypeCode",$("#postBox")).val(boardTypeCode);
			$("#comuPostNo",$("#postBox")).val(comuPostNo)

		},
		error : function(error){
			console.log(error.status);
		}
	});
}


</script>
<script src="${pageContext.request.contextPath}/resources/js/pages/live/apt-community.js"></script>
<script>
$(document).ready(function() {
    // 페이지에 라이브 정보 카드가 있는지 확인
    const liveCard = $('.card[data-broadcast-id]');
    if (liveCard.length > 0) {
        const mediaServerUrl = $('#mediaServerUrl').val(); // mediaServerUrl 값 가져오기
        const socket = new SockJS(`${mediaServerUrl}/ws`);
        const stompClient = Stomp.over(socket);

        stompClient.connect({}, function(frame) {
            console.log('메인 페이지 - 미디어 서버 STOMP 연결 성공');
            
            // 페이지에 있는 모든 라이브 카드에 대해 각각 구독 설정
            liveCard.each(function() {
                const broadcastId = $(this).data('broadcast-id');
                
                stompClient.subscribe('/topic/viewers/' + broadcastId, function(message) {
                    const data = JSON.parse(message.body);
                    // ID로 정확한 span 태그를 찾아 내용 업데이트
                    $('#viewer-count-' + broadcastId).text(data.viewerCount);
                });
            });
        });
    }
});
</script>
</body>
</html>