package kr.or.ddit.ddtown.mapper.admin.blacklist;

import java.time.LocalDate;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import kr.or.ddit.vo.PaginationInfoVO;
import kr.or.ddit.vo.blacklist.BlacklistVO;
import kr.or.ddit.vo.report.ReportVO;

@Mapper
public interface IBlacklistMapper {

	//목록페이지
	public List<BlacklistVO> blackList(PaginationInfoVO<BlacklistVO> pagingVO);
	//상세페이지
	public BlacklistVO blackDetail(int banNo);
	//1회원인지 아닌지 체크
	public int checkMemberId(String memUsername);
	//2. 이미 활성 블랙리스트에 등록되어 있는지 확인
	public int checkIdBlacklist(String memUsername);
	//3.등록하기
	public int blackSignup(BlacklistVO blacklistVO) throws Exception;
	//4. 회원 계정 비활성화
	public int disablePeopleAccount(String memUsername);
	//수정하기
	public int blackUpdate(BlacklistVO blacklistVO);
	//해제(삭제)하기
	public int blackDelete(BlacklistVO blacklistVO);
	//목록 수
	public int selectBlacklistCount(PaginationInfoVO<BlacklistVO> pagingVO);
	//블랙리스트 수
	public int blacklistCnt();
	// 블랙리스트 사유별 수
	public List<Map<String, Object>> blackReasonCnts();
	// 계정 사용 활성화
	public int blackDelete2(String memUsername);
	//1.블랙리스트 자동해제(회원 조회)
	public List<String> getAutoReleaseTargetUsernames(LocalDate today);
	//2.블랙리스트 자동 해제(blacklist 테이블 업데이트)
	public int uploadBlackScheduler(LocalDate today);
	//3.블랙리스트 자동 해제(PEOPLE 테이블 업데이트)
	public int enablePeopleAccountsBatch(@Param("usernames") List<String> targetUsernames);
	

}
