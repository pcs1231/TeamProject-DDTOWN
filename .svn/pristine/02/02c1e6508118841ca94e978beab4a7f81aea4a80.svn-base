<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<!-- pdf관련 스크립트 -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script> 
<script src="https://unpkg.com/html2pdf.js@0.10.1/dist/html2pdf.js"></script>

<!-- 파일 로드 하는 HTML(모달창 닫기 관련) -->
<script src="/resources/plugins/jquery/jquery.min.js"></script>
<script src="/resources/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- /// adminlte3 사용 시작 /// -->
<link rel="stylesheet" href="/resources/dist/css/adminlte.min.css">
<script type="text/javascript" src="/resources/dist/js/adminlte.min.js"></script>
<script type="text/javascript" src="/resources/plugins/jquery/jquery.min.js"></script>
<!-- /// adminlte3 사용 끝 /// -->

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
<style>
        #applicant-info-for-pdf {
    font-family: 'Noto Sans KR', sans-serif !important; /* <--- !important 필수 */
}
    </style>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DDTOWN - 오디션 지원자 정보</title>
    <%@ include file="../../../modules/headerPart.jsp" %>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <div class="emp-container">
        <%@ include file="../../modules/header.jsp" %>
        <div class="emp-body-wrapper">
            <%@ include file="../../modules/aside.jsp" %>
            <main class="emp-content">
                <section id="applicant-info-section" class="am-section active-section">
                    <div class="am-section-header">
                        <h2>지원자 정보 조회</h2>
                        <div class="am-header-actions">
                        	<form method="get" id="searchForm">
                        		<input type="hidden" name="page" id="page"/>
                        		<!-- 
                        		param : page=&searchType=4&searchCode=APSC001&searchWord=
                        		 -->
	                            <select id="select-audition-for-applicants" name="searchType" class="am-filter-select" style="min-width: 250px;">
	                                <option value="all">오디션 선택</option>
	                               	<c:forEach var="audition" items="${auditionDropdownList}">
	                               		<option value="${audition.audiNo}"
	                               			<c:if test="${param.searchType==audition.audiNo}">selected</c:if>
	                               		>${audition.audiTitle}</option>
	                               	</c:forEach>
	                            </select>
	                            <select id="filter-schedule-status" name="searchCode" class="am-filter-select">
								         <option value="all" ${searchCode == 'all' ? 'selected' : ''}>전체 심사현황</option>
								        <option value="APSC001" ${param.searchCode == 'APSC001' ? 'selected' : ''}>지원 완료</option>
								        <option value="APSC002" ${param.searchCode == 'APSC002' ? 'selected' : ''}>합격</option>
								        <option value="APSC003" ${param.searchCode == 'APSC003' ? 'selected' : ''}>불합격</option> 
		                        </select>
	                            <input type="text" name="searchWord" id="search-applicant-input" placeholder="지원자명" class="am-search-input" value="${searchWord }">
	                            <button type="button" id="btn-search-applicant" class="am-btn"><i class="fas fa-search"></i> 검색</button>
                        	</form>
                        </div>
                    </div>
                    <div class="am-section-content">
                      <!--   <p id="applicant-list-placeholder" style="text-align:center; padding: 20px; color: #777;">오디션을 선택해주세요.</p> -->
                      <table class="am-table" id="applicant-table">
                          <thead>
                              <tr>
                                  <th style="width:10%;">지원번호</th>
                                  <th style="width:10%;">이름</th>
                                  <th style="width:15%;">지원분야</th>
                                  <th style="width:12%;">제출일</th>
                                  <th style="width:13%;">심사 결과</th>
                              </tr>
                          </thead>
                          <tbody id="applicant-table-body">
                          </tbody>
                      </table>
                      <div class="am-pagination" id="pagingArea">
                          ${pagingVO.pagingHTML }
                      </div>
                      <div class="am-pagination" id="applicant-pagination" style="display:none;"></div>
                    </div>
                </section>
<!-- 지원자 상세/심사 모달 -->
                <div class="modal fade" id="modalDetail">
    				<div class="modal-dialog modal-lg">
        				<div class="modal-content">
				            <div class="modal-header">
				                <h4 class="modal-title" id="modalDetailTitle">지원자 상세 정보 및 심사</h4>
				                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
				                    <span aria-hidden="true">&times;</span>
				                </button>
				            </div>
            				<div class="modal-body">
			                	<div class="am-form-actions" style="margin-bottom: 20px;">
			                    	<button type="button" id="btn-approve-applicant" class="am-btn success">합격</button>
			                    	<button type="button" id="btn-reject-applicant" class="am-btn danger">불합격</button>
			                    	<button type="button" id="btn-download-applicant-pdf" class="am-btn primary"><i class="fas fa-file-pdf"></i> PDF로 다운로드</button>
			                	</div>

               					<div class="am-form applicant-detail-view-grid" style="margin-bottom: 30px;">
				                    <div class="form-group">
				                        <label>지원 오디션</label>
				                        <p id="view-applicant-audition-name">-</p>
				                    </div>
				                    <div class="form-group">
				                        <label>지원번호</label>
				                        <p id="view-applicant-id">-</p>
				                    </div>
				                    <div class="form-group">
				                        <label>이름</label>
				                        <p id="view-applicant-name">-</p>
				                    </div>
				                    <div class="form-group">
				                        <label>생년월일</label>
				                        <p id="view-applicant-birthdate">-</p>
				                    </div>
				                    <div class="form-group">
				                        <label>연락처</label>
				                        <p id="view-applicant-contact">-</p>
				                    </div>
				                    <div class="form-group">
				                        <label>이메일</label>
				                        <p id="view-applicant-email">-</p>
				                    </div>
				                    <div class="form-group full-width">
				                        <label>지원 분야</label>
				                        <p id="view-applicant-field">-</p>
				                    </div>
				                    <div class="form-group full-width">
				                        <label>자기소개</label>
				                        <p id="view-applicant-self-introduction" style="white-space: pre-wrap;">-</p>
				                    </div>
				                    <div class="form-group full-width">
				                        <label>제출 서류 목록</label>
				                        <div id="view-applicant-submitted-files" class="submitted-files-list">
				                            <p>제출된 서류가 없습니다.</p>
				                        </div>
				                    </div>
				                     <div class="form-group">
				                        <label>심사 결과</label>
				                        <p id="view-applicant-status">-</p>
				                    </div>
               					</div>
<!-- pdf부분 -->
                				<div id="applicant-info-for-pdf" style="padding: 20px; display: none;"> <h2>지원자 상세 정보</h2>
								<table>							
		                        	<thead>							
			                            <tr>							
			                                <th>항목</th>							
			                                <th>내용</th>							
			                            </tr>							
		                        	</thead>							
		                        	<tbody>							
			                            <tr>							
			                                <td>지원 오디션</td>							
			                                <td id="pdf-applicant-audition-name"></td>							
			                            </tr>							
			                            <tr>							
			                                <td>지원번호</td>							
			                                <td id="pdf-applicant-id"></td>							
			                            </tr>							
			                            <tr>							
			                                <td>지원자 이름</td>							
			                                <td id="pdf-applicant-name"></td>							
			                            </tr>							
			                            <tr>							
			                                <td>생년월일</td>							
			                                <td id="pdf-applicant-birth"></td>							
			                            </tr>							
			                            <tr>							
			                                <td>성별</td>							
			                                <td id="pdf-applicant-gender"></td>							
			                            </tr>							
			                            <tr>							
			                                <td>연락처</td>							
			                                <td id="pdf-applicant-phone"></td>							
			                            </tr>							
			                            <tr>							
			                                <td>이메일</td>							
			                                <td id="pdf-applicant-email"></td>							
			                            </tr>						
			                            <tr>						
			                                <td>지원 분야</td>							
			                                <td id="pdf-applicant-field"></td>							
			                            </tr>							
			                            <tr>							
			                                <td>자기소개서</td>							
			                                <td id="pdf-app-cover-letter"></td>							
			                            </tr>							
			                            <tr>							
			                                <td>첨부 파일</td>							
			                                <td id="pdf-submitted-files"></td>							
			                            </tr>							
			                             <tr>
			                                <td>심사 결과</td>
			                                <td id="pdf-applicant-status"></td>
			                            </tr>
		                        	</tbody>							
								</table>							
							</div>		
						</div>
						<div class="modal-footer justify-content-between">
							<button type="button" class="btn btn-default" data-dismiss="modal" id="closeBtn">닫기</button>
						</div>
					</div>
				</div>
			</div>
		</main>
		</div>
	</div>
<!-- /// 모달 끝 /// -->    
</body>
<script>
// 오디션 지원자 정보 JS (emp_portal 스타일 기반)
// --- 공통 로그아웃/사용자명/사이드바 토글 스크립트 (emp_portal.html과 동일) ---
document.addEventListener('DOMContentLoaded', function() {
    const logoutButton = document.querySelector('.emp-logout-btn');
    if (logoutButton) {
        logoutButton.addEventListener('click', function(e) {
            e.preventDefault();
            if (confirm('로그아웃 하시겠습니까?')) {
                alert('로그아웃 되었습니다.');
                //window.location.href = '/admin/login';
            }
        });
    }
    const employeeNameSpan = document.getElementById('employee-name');
    if (employeeNameSpan) {
        employeeNameSpan.textContent = "홍길동";
    }
    // 사이드바 토글 및 활성화 스크립트 (emp_portal.html과 동일하게)
    const navItemsWithSubmenu = document.querySelectorAll('.emp-sidebar .emp-nav-item.has-submenu');
    navItemsWithSubmenu.forEach(item => {
        const arrow = item.querySelector('.submenu-arrow');
        item.addEventListener('click', function(event) {
            event.preventDefault();
            const parentLi = this.parentElement;
            const submenu = this.nextElementSibling;
            if (submenu && submenu.classList.contains('emp-submenu')) {
                const parentUl = parentLi.parentElement;
                if (parentUl) {
                    Array.from(parentUl.children).forEach(siblingLi => {
                        if (siblingLi !== parentLi) {
                            const siblingSubmenuControl = siblingLi.querySelector('.emp-nav-item.has-submenu.open');
                            if (siblingSubmenuControl) {
                                const siblingSubmenu = siblingSubmenuControl.nextElementSibling;
                                siblingSubmenuControl.classList.remove('open');
                                if (siblingSubmenu && siblingSubmenu.classList.contains('emp-submenu')) {
                                    siblingSubmenu.style.display = 'none';
                                }
                                const siblingArrow = siblingSubmenuControl.querySelector('.submenu-arrow');
                                if (siblingArrow) siblingArrow.style.transform = 'rotate(0deg)';
                            }
                        }
                    });
                }
            }
            this.classList.toggle('open');
            if (submenu && submenu.classList.contains('emp-submenu')) {
                submenu.style.display = this.classList.contains('open') ? 'block' : 'none';
                if (arrow) arrow.style.transform = this.classList.contains('open') ? 'rotate(90deg)' : 'rotate(0deg)';
            }
        });
    });

    // 현재 페이지 URL 기반으로 사이드바 메뉴 활성화
    const currentFullHref = window.location.href;

    document.querySelectorAll('.emp-sidebar .emp-nav-item[href]').forEach(link => {
        const linkHrefAttribute = link.getAttribute('href');

        if (linkHrefAttribute && linkHrefAttribute !== "#" && currentFullHref.endsWith(linkHrefAttribute)) {
            link.classList.add('active');

            let currentActiveElement = link;

            while (true) {
                const parentLi = currentActiveElement.parentElement;
                if (!parentLi) break;

                const parentSubmenuUl = parentLi.closest('.emp-submenu');

                if (parentSubmenuUl) {
                    parentSubmenuUl.style.display = 'block';

                    const controllingAnchor = parentSubmenuUl.previousElementSibling;

                    if (controllingAnchor && controllingAnchor.tagName === 'A' && controllingAnchor.classList.contains('has-submenu')) {
                        controllingAnchor.classList.add('active', 'open');
                        const arrow = controllingAnchor.querySelector('.submenu-arrow');
                        if (arrow) {
                            arrow.style.transform = 'rotate(90deg)';
                        }
                        currentActiveElement = controllingAnchor;
                    } else {
                        break;
                    }
                } else {
                    break;
                }
            }
        }
    });
});

//합격여부 표시
function getAppStatusText(statusCode) {
    if (!statusCode) {
        return '-'; // 코드가 없으면 하이픈 반환
    }

    switch (statusCode) {
        case 'APSC002':
            return '합격';
        case 'APSC003':
            return '불합격';
        case 'APSC001':
            return '지원 완료';
        default:
            return '알 수 없음'; // 정의되지 않은 코드가 들어올 경우
    }
}
 //지원분야 상태
function getTypeCodeText(typeCode) {
    if (!typeCode) {
        return '-'; // 값이 없거나 유효하지 않으면 하이픈 반환
    }
    switch (typeCode) {
        case 'ADTC001':
            return '보컬';
        case 'ADTC002':
            return '댄스';
        case 'ADTC003':
            return '연기';
        default:
            return '알 수 없음'; // 정의되지 않은 코드가 들어올 경우
    }
} 
//날짜 출력 형태
function formatBirthdate(dateTimeString) {
    if (!dateTimeString) {
        return '-'; // 값이 없거나 유효하지 않으면 하이픈 반환
    }

    // "YYYY-MM-DD HH:MM:SS" 형식의 문자열에서 날짜 부분만 추출
    const datePart = dateTimeString.split(' ')[0]; // 예: '2025-03-12'

    return datePart;
}
 let currentApplicantAppNo = null;

$(function(){
    let searchForm = $("#searchForm");
    let pagingArea = $("#pagingArea"); 
    
	pagingArea.on("click", "a", function(event){
		event.preventDefault();
		let pageNo = $(this).data("page");
		searchForm.find("#page").val(pageNo);
		searchForm.submit();
		
	});
}); 
//오디션 선택 이벤트
currentApplicantAppNo = null; //현재 모달 지원자 번호 저장

//1. 오디션 목록 비동기 조회
document.getElementById('select-audition-for-applicants').addEventListener('change', function() {
	 const audiNo = this.value;
	 
	 $.ajax({
		 url : "/api/emp/audition/applicant?searchType="+audiNo,
		type: "get",
		success : function(res){
			//PaginationInfoVO<AuditionUserVO> 
// 			console.log("res : ", res);//res = pagingVO
			//res.dataList : List<AuditionUserVO>
			/*
			//페이징 객체에 결과 목록을 넣음
			pagingVO.setDataList(AuditionUserList);
			*/
			console.log("res.dataList : ", res.dataList);
			
			//페이징 객체의 dataList임
			let dataList = res.dataList;
			
			let html = ``;
			if (dataList && dataList.length > 0) {
				for(let i = 0; i < dataList.length; i++){ 
					//applicants => AuditionUserVO
					const applicants = dataList[i];
					console.log("applicants.appRegDate:", applicants.appRegDate);
					html += `
						<tr>
		                    <td>\${applicants.appNo}</td>
		                    <td><a href="#" class="applicant-name-link" data-toggle="modal" data-target="#modalDetail" data-app-no="\${applicants.appNo}" style="cursor: pointer; text-decoration: none; color: inherit;">\${applicants.applicantNm}</a></td>
		                    <td>\${getTypeCodeText(applicants.audition.audiTypeCode)}</td>
		                    <td>\${formatBirthdate(applicants.appRegDate)}</td>
		                    <td>\${getAppStatusText(applicants.appStatCode)}</td>
		                </tr>
					`;
				}
			}else{
				html = `
					<tr>
						<td colspan="6" style="text-align: center; padding: 20px;">
							<p>등록된 지원자가 없습니다.</p>
						</td>
					</tr>
				`;
			}
			$("#applicant-table-body").html(html);
			addDetailButtonClickEvent();
		}
			
	 })
});

//2. 심사 현황 비동기 조회
document.getElementById('filter-schedule-status').addEventListener('change', function() {
	 const audiNo = document.getElementById("select-audition-for-applicants").value;
	 console.log("선택된 오디션의 searchType 정보 : ", audiNo);
	 const searchCode = document.getElementById("filter-schedule-status").value;
	 console.log("심사 현황 searchCode 정보 : ", searchCode);
	 
	 $.ajax({
		 url : "/api/emp/audition/applicant?searchType="+audiNo+"&searchCode="+searchCode,
		type: "get",
		success : function(res){
			//PaginationInfoVO<AuditionUserVO> 
// 			console.log("res : ", res);//res = pagingVO
			//res.dataList : List<AuditionUserVO>
			/*
			//페이징 객체에 결과 목록을 넣음
			pagingVO.setDataList(AuditionUserList);
			*/
			console.log("res.dataList : ", res.dataList);
			
			//페이징 객체의 dataList임
			let dataList = res.dataList;
			
			let html = ``;
			if (dataList && dataList.length > 0) {
				for(let i = 0; i < dataList.length; i++){ 
					//applicants => AuditionUserVO
					const applicants = dataList[i];
					html += `
						<tr>
		                    <td>\${applicants.appNo}</td>
		                    <td><a href="#" class="applicant-name-link" data-toggle="modal" data-target="#modalDetail" data-app-no="\${applicants.appNo}" style="cursor: pointer; text-decoration: none; color: inherit;">\${applicants.applicantNm}</a></td>>
		                    <td>\${getTypeCodeText(applicants.audition.audiTypeCode)}</td>
		                    <td>\${formatBirthdate(applicants.appRegDate)}</td>
		                    <td>\${getAppStatusText(applicants.appStatCode)}</td>
		                </tr>
					`;
				}
			}else{
				html = `
					<tr>
						<td colspan="6" style="text-align: center; padding: 20px;">
							<p>등록된 지원자가 없습니다.</p>
						</td>
					</tr>
				`;
			}
			$("#applicant-table-body").html(html);
			addDetailButtonClickEvent();
		}
			
	 })
});

//3. 지원자명 검색 버튼
document.getElementById('btn-search-applicant').addEventListener('click', function() {
	 const audiNo = document.getElementById("select-audition-for-applicants").value;
	 console.log("선택된 오디션의 searchType 정보 : ", audiNo);
	 const searchCode = document.getElementById("filter-schedule-status").value;
	 console.log("심사 현황 searchCode 정보 : ", searchCode);
	 const searchWord = document.getElementById("search-applicant-input").value;
	 console.log("지원자명 searchWord 정보 : ", searchWord);
	 
	 $.ajax({
		 url : "/api/emp/audition/applicant?searchType="+audiNo+"&searchCode="+searchCode+"&searchWord="+searchWord,
		type: "get",
		success : function(res){
			//PaginationInfoVO<AuditionUserVO> 
// 			console.log("res : ", res);//res = pagingVO
			//res.dataList : List<AuditionUserVO>
			/*
			//페이징 객체에 결과 목록을 넣음
			pagingVO.setDataList(AuditionUserList);
			*/
			console.log("res.dataList : ", res.dataList);
			
			//페이징 객체의 dataList임
			let dataList = res.dataList;
			
			let html = ``;
			if (dataList && dataList.length > 0) {
				for(let i = 0; i < dataList.length; i++){ 
					//applicants => AuditionUserVO
					const applicants = dataList[i];
					html += `
						<tr>
		                    <td>\${applicants.appNo}</td>
		                    <td><a href="#" class="applicant-name-link" data-toggle="modal" data-target="#modalDetail" data-app-no="\${applicants.appNo}" style="cursor: pointer; text-decoration: none; color: inherit;">\${applicants.applicantNm}</a></td>
		                    <td>\${getTypeCodeText(applicants.audition.audiTypeCode)}</td>
		                    <td>\${formatBirthdate(applicants.appRegDate)}</td>
		                    <td>\${getAppStatusText(applicants.appStatCode)}</td>
		                </tr>
					`;
				}
			}else{
				html = `
					<tr>
						<td colspan="6" style="text-align: center; padding: 20px;">
							<p>등록된 지원자가 없습니다.</p>
						</td>
					</tr>
				`;
			}
			$("#applicant-table-body").html(html);
			addDetailButtonClickEvent();
		}
			
	 })
});

// 지원자 상세/심사/다운로드 모달 등
function addDetailButtonClickEvent() {
    const detailModal = document.querySelector('.applicant-detail-view-grid');
    

    // 이전에 연결된 이벤트 리스너가 있다면 제거하여 중복 호출 방지
    $("#applicant-table-body").off('click', '.applicant-name-link');
    $("#applicant-table-body").on('click', '.applicant-name-link', function() {
        const appNo = $(this).data('appNo'); // data-app-no 속성 값 가져오기
        console.log("이름 클릭됨! 지원번호:", appNo);

 		currentApplicantAppNo = appNo;	//현재 지원자 번호 저장
 
        $.ajax({
            url: "/api/emp/audition/applicant/detail?appNo="+appNo,
            type: "get",
            success: function(res) {
                console.log("지원자 상세 정보 응답:", res);

                if (res) {
                    // 모달 내 각 요소에 데이터 채우기
                    document.getElementById('view-applicant-audition-name').innerText = res.audition.audiTitle || '-'; // 오디션명
                    document.getElementById('view-applicant-id').innerText = res.appNo || '-';
                    document.getElementById('view-applicant-name').innerText = res.applicantNm || '-';
                    document.getElementById('view-applicant-birthdate').innerText = res.applicantBirth || '-'; // 예: "YYYY-MM-DD" 형식
                    document.getElementById('view-applicant-contact').innerText = res.applicantPhone || '-';
                    document.getElementById('view-applicant-email').innerText = res.applicantEmail || '-';
                    document.getElementById('view-applicant-field').innerText = getTypeCodeText(res.audition.audiTypeCode);
                    document.getElementById('view-applicant-self-introduction').innerText = res.appCoverLetter || '-';

                    const statusElement = document.getElementById('view-applicant-status'); 
                    if (statusElement) {
                        const statusText = getAppStatusText(res.appStatCode); // 상태 코드를 텍스트로 변환
                        statusElement.innerText = statusText;
                        // 상태에 따른 색상/스타일 적용 (여기서 모달 내 상태 표시를 위해 상태 코드에 따라 스타일을 변경합니다)
                        if (res.appStatCode === 'APSC003') { // 합격
                            statusElement.style.color = 'blue';
                            statusElement.style.fontWeight = 'bold';
                        } else if (res.appStatCode === 'APSC004') { // 불합격
                            statusElement.style.color = 'red';
                            statusElement.style.fontWeight = 'bold';
                        } else { // 기타 (심사 중, 접수 완료 등)
                            statusElement.style.color = 'black'; // 기본 색상
                            statusElement.style.fontWeight = 'normal';
                        }
                    }
                    
                    
                    // 제출 서류관련 다운로드 부분
                    const submittedFilesContainer = document.getElementById('view-applicant-submitted-files');
                    if (res.fileList && res.fileList.length > 0) {
                        let filesHtml = ``;
                        res.audition.fileList.forEach(file => {
                            const tempDiv = document.createElement('div');
                            tempDiv.innerHTML = file.fileOriginalNm; 
                            const decodedFileName = tempDiv.textContent || tempDiv.innerText;
                            const fileAttachDetailNo = file.attachDetailNo;
                            const downloadUrl = `/corporate/Audition/download.do?attachDetailNo=\${fileAttachDetailNo}`;
                            console.log(`[DEBUG] Final HTML Part: <div class="file-item"><a href="${downloadUrl}" class="attachment-link" target="_blank" download>${decodedFileName}</a></div>`);
                            filesHtml += `<div class="file-item">
                                <a href="\${downloadUrl}" class="attachment-link" target="_blank" download>
                                    \${decodedFileName}
                                </a>
                            </div>`;
                        });
                        console.log("최종 생성될 HTML:", filesHtml);
                        submittedFilesContainer.innerHTML = filesHtml;
                    } else {
                        submittedFilesContainer.innerHTML = `<p>제출된 서류가 없습니다.</p>`;
                    }
                 // PDF용 HTML 테이블에 데이터 채우는 코드
                     document.getElementById('pdf-applicant-audition-name').innerText = res.audition.audiTitle || ''; 
                    document.getElementById('pdf-applicant-id').innerText = res.appNo || '';
                    document.getElementById('pdf-applicant-name').innerText = res.applicantNm || '';
                    document.getElementById('pdf-applicant-birth').innerText = res.applicantBirth || ''; 
                    document.getElementById('pdf-applicant-gender').innerText = res.applicantGender || ''; 
                    document.getElementById('pdf-applicant-phone').innerText = res.applicantPhone || '';
                    document.getElementById('pdf-applicant-email').innerText = res.applicantEmail || '';
                    document.getElementById('pdf-applicant-field').innerText = getTypeCodeText(res.audition.audiTypeCode); 
                    document.getElementById('pdf-app-cover-letter').innerText = res.appCoverLetter || '';
                    
                    // 파일 PDF
                    document.getElementById('pdf-submitted-files').innerHTML = submittedFilesContainer.innerHTML; 
					
                    //모달 보이기*******
//                     $("#modalDetail").modal("show");
                    
                    document.getElementById("modalDetail").classList.add("show");
                    document.getElementById("modalDetail").style.display = "block";
                    document.getElementById("modalDetail").setAttribute("aria-modal", "true");
                    document.getElementById("modalDetail").setAttribute("role", "dialog");

                    // PDF 다운로드 버튼 클릭 이벤트
                    // 이 리스너는 AJAX 성공 시 매번 다시 등록되므로, 기존 onclick을 덮어쓰는 방식을 사용하겠습니다.
                    // 이렇게 하면 모달이 열릴 때마다 최신 데이터로 PDF가 생성됩니다.
                    const downloadBtn = document.getElementById('btn-download-applicant-pdf');
                    // 기존에 다른 이벤트 리스너가 addEventListener로 추가되어 있다면, off를 사용해야 합니다.
                    // 여기서는 안전하게 이전 onclick 함수를 덮어씁니다.
                    downloadBtn.onclick = function() {
                        const element = document.getElementById('applicant-info-for-pdf'); // PDF로 만들 HTML 요소 지정
                     // PDF 생성 직전: 요소를 보이게 합니다.
                        element.style.display = 'block'; 
                        console.log("PDF 변환 대상 요소:", element);
                        const opt = {
                        	    margin:       1,
                        	    filename:     res.applicantNm + '_지원자정보.pdf',
                        	    image:        { type: 'jpeg', quality: 0.98 },
                        	    html2canvas:  { 
                        	        scale: 2, 
                        	        logging: true, 
                        	        dpi: 192, 
                        	        letterRendering: true, 
                        	        useCORS: true, 
                        	        allowTaint: true 
                        	    },
                        	    jsPDF:        { 
                        	        unit: 'in', 
                        	        format: 'letter', 
                        	        orientation: 'portrait',
                        	        compress: false 
                        	    }
                        	};

                        html2pdf().set(opt).from(element).save().then(function() {
                            // PDF 생성 완료 후: 요소를 다시 숨깁니다.
                            element.style.display = 'none'; 
                        }).catch(function(error) {
                            console.error("PDF 생성 중 오류 발생:", error);
                            // 오류 발생 시에도 요소를 다시 숨겨야 합니다.
                            element.style.display = 'none'; 
                            alert("PDF 다운로드에 실패했습니다. 콘솔을 확인해 주세요.");
                        });
                    };

                } else {
                    alert("지원자 상세 정보를 찾을 수 없습니다.");
                }
            },
            error: function(xhr, status, error) {
                console.error("지원자 상세 정보 불러오기 실패:", status, error);
                alert("지원자 상세 정보를 불러오는 데 실패했습니다.");
            }
        });
    });
}
// 이름/상세보기 버튼 클릭 시 상세 모달 오픈 및 심사 기능

// 합격/불합격 버튼 처리
const btnApprove = document.getElementById('btn-approve-applicant');
const btnReject = document.getElementById('btn-reject-applicant');

   btnApprove.addEventListener('click', function(){
       if(currentApplicantAppNo){
           const newStatusCode = 'APSC002';
           if(!confirm("합격으로 처리하고 메세지를 보내겠습니까?")){
           	return;	//아니오
           }
   
           
           const applicantEmail = document.getElementById('view-applicant-email').innerText;
           const applicantNm = document.getElementById('view-applicant-name').innerText;

           let data = {
   				appNo : currentApplicantAppNo,
   				appStatCode : newStatusCode,
   				applicantEmail : applicantEmail,
   				applicantNm : applicantNm
   			}
           
           $.ajax({
      		 url : "/api/emp/audition/StauesUpdate",
      		type: "post",
      		data : JSON.stringify(data),
      		contentType: "application/json; charset=utf-8",
      		beforeSend : function(xhr) {
	        xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
	    },
      		success : function(res){
      			console.log(res);
      			if (res.Status == "SUCCESS") {
      				alert("성공적으로 처리되었습니다.")
      				//이메일 전송결과 알림창
      				if (res.emailStatus === "SENT") {
                        alert(res.emailMessage || "이메일이 성공적으로 전송되었습니다.");
                    } else if (res.emailStatus === "FAILED_EMAIL_SEND") {
                        alert("이메일 전송에 실패했습니다: " + (res.emailMessage || "알 수 없는 오류"));
                    }
      				//다시 띄우기
      				const currentAudiNo = document.getElementById('select-audition-for-applicants').value;
                    if (currentAudiNo) {
                    	 document.getElementById('select-audition-for-applicants').dispatchEvent(new Event('change'));
                         console.log("지원자 목록을 새로고침합니다.");
                    }

                } else { // 서버에서 Status가 'FAILED' 또는 'ERROR'인 경우
                    alert("처리 실패: " + (res.message || "알 수 없는 오류"));
      			}
      		}	
      	 })
       }
   });
//불합격 버튼
if (btnReject) {
    btnReject.addEventListener('click', function(){
        if(currentApplicantAppNo){
            const newStatusCode = 'APSC003'; // 불합격 코드
            if(!confirm("불합격으로 처리하고 이메일을 보내겠습니까?")){
                return;
            }

            const applicantEmail = document.getElementById('view-applicant-email').innerText;
            const applicantNm = document.getElementById('view-applicant-name').innerText;

            let data = {
                appNo : currentApplicantAppNo,
                appStatCode : newStatusCode,
                applicantEmail : applicantEmail,
                applicantNm : applicantNm
            };
            
            $.ajax({
                url : "/api/emp/audition/StauesUpdate2",
                type: "post",
                data : JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                beforeSend : function(xhr) {
                    xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
                },
                success : function(res){
                    console.log("불합격 처리 응답:", res);
                    if (res.Status == "SUCCESS") {
                        alert(res.message || "성공적으로 처리되었습니다.");
                        
                        // 모달 상세 정보 새로고침
                        if (currentApplicantAppNo) {
                           $("#applicant-table-body").find(`.detail-btn[data-app-no="${currentApplicantAppNo}"]`).click(); 
                        }

                        // 이메일 전송 결과 알림
                        if (res.emailStatus === "SENT") {
                            alert(res.emailMessage || "이메일이 성공적으로 전송되었습니다.");
                        } else if (res.emailStatus === "FAILED_EMAIL_SEND") {
                            alert("이메일 전송에 실패했습니다: " + (res.emailMessage || "알 수 없는 오류"));
                        }

                        // 지원자 목록 테이블 새로고침
                        const currentAudiNo = document.getElementById('select-audition-for-applicants').value;
                        if (currentAudiNo) {
                            document.getElementById('select-audition-for-applicants').dispatchEvent(new Event('change'));
                            console.log("지원자 목록을 새로고침합니다.");
                        }

                    } else {
                        alert("처리 실패: " + (res.message || "알 수 없는 오류"));
                    }
                },
                error: function(xhr, status, error) {
                    console.error("불합격 처리 AJAX 요청 실패:", status, error, xhr.responseText);
                    alert("불합격 처리 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.");
                }
            });
        } else {
            alert("상태를 변경할 지원자가 선택되지 않았습니다.");
        }
    });
}
//모달창 닫기 버튼 이벤트
$(document).ready(function() {
	//닫기 버튼 클릭시 
    $('#closeBtn').on('click', function() {
        $('#modalDetail').modal('hide');
    });
	//X버튼 클릭시
    $('#modalDetail .close').on('click', function() {
        $('#modalDetail').modal('hide');
    });
});
</script>
</html> 