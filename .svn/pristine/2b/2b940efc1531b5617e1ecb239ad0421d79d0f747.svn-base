package kr.or.ddit.ddtown.service.emp.schedule;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.ddit.ServiceResult;
import kr.or.ddit.ddtown.mapper.emp.schedule.IScheduleMapper;
import kr.or.ddit.vo.schedule.ScheduleDetailVO;
import kr.or.ddit.vo.schedule.ScheduleVO;

@Service
public class ScheduleService implements IScheduleService {

	@Autowired
	private IScheduleMapper scheduleMapper;

	@Override
	public List<ScheduleVO> getList(String empUsername) {
		
		List<ScheduleVO> list = scheduleMapper.getList(empUsername);
		
		changeAllDay(list);
		
		return list;
	}

	private void changeAllDay(List<ScheduleVO> list) {
		for(int i=0; i<list.size(); i++) {
			ScheduleVO vo = list.get(i);
			String status = vo.getAllDayStatus();
			if(status.equals("Y")) {
				vo.setAllDay(true);
				continue;
			}
			
			vo.setAllDay(false);
		}
	}

	@Override
	public ScheduleDetailVO getDes(int id) {
		
		ScheduleDetailVO vo = scheduleMapper.getDes(id);
		
		System.out.println(vo);
		
		return vo;
	}

	@Override
	public ServiceResult dateUpdate(ScheduleVO scheduleVO) {
		
		ServiceResult result = null;
		
		String allDay = scheduleVO.getAllDayStatus();
		
		if(allDay.equals("Y")) {
			String endDate = scheduleVO.getEnd();
			LocalDateTime date = LocalDateTime.parse(endDate);
			String newEndDate = date.plusDays(1).toString();
			scheduleVO.setEnd(newEndDate);
		}
		
		int status = scheduleMapper.dateUpdate(scheduleVO);
		
		if(status > 0) {
			result = ServiceResult.OK;
		}else {
			result = ServiceResult.FAILED;
		}
		
		return result;
	}

	@Override
	public ServiceResult dateMove(ScheduleVO scheduleVO) {
		ServiceResult result = null;
		
		
		
		int status = scheduleMapper.dateMove(scheduleVO);
		
		if(status > 0) {
			result = ServiceResult.OK;
		}else {
			result = ServiceResult.FAILED;
		}
		
		return result;
	}

	@Override
	public ServiceResult dateInsert(ScheduleVO scheduleVO) {
		
		ServiceResult result = null;
		
		String allDay = scheduleVO.getAllDayStatus();
		
		if(allDay.equals("Y")) {
			String endDate = scheduleVO.getEnd();
			LocalDateTime date = LocalDateTime.parse(endDate);
			String newEndDate = date.plusDays(1).toString();
			scheduleVO.setEnd(newEndDate);
		}
		
		int status = scheduleMapper.dateInsert(scheduleVO);
		
		if(status > 0) {
			result = ServiceResult.OK;
		}else {
			result = ServiceResult.FAILED;
		}
		
		return result;
	}

	@Override
	public ServiceResult dateDelete(int id) {
		ServiceResult result = null;
		
		int status = scheduleMapper.dateDelete(id);
		
		if(status > 0) {
			result = ServiceResult.OK;
		}else {
			result = ServiceResult.FAILED;
		}
		
		return result;
	}
	
}
