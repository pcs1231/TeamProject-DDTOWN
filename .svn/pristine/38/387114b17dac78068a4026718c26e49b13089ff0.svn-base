<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.core" prefix="c" %>
<%@ taglib uri="jakarta.tags.fmt" prefix="fmt" %>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>라이브 요약</title>
    <%@ include file="../../modules/headerPart.jsp" %>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .live-section-title { font-size: 1.3em; font-weight: 600; margin-bottom: 10px; }
        .live-table { width: 100%; border-collapse: collapse; background: #fff; margin-bottom: 18px; }
        .live-table th, .live-table td { border: 1px solid #e0e0e0; padding: 12px; text-align: center; vertical-align: middle;}
        .live-table th { background: #f5f5f5; font-weight: 600; }
    </style>
</head>
<body> 
    <div class="emp-container">
        <%@ include file="../modules/header.jsp" %>
        <div class="emp-body-wrapper">
            <%@ include file="../modules/aside.jsp" %>
            <main class="emp-content">
                <h2>라이브 방송 요약</h2>
                	
               	<hr>
               	
               	<div style="width: 90%%; margin: auto;">
               		<h2>라이브 조회수 통계</h2>
               		<canvas id="liveStatsChart"></canvas>
               	</div>
                
                
                <div class="live-section-title" style="margin-top: 30px;">라이브 방송 이력</div>
                <table class="live-table">
                    <thead>
                        <tr>
                            <th>라이브 번호</th>
                            <th>라이브 제목</th>
                            <th>라이브 설명</th>
                            <th>누적 시청자 수</th>
                            <th>방송 품질</th>
                            <th>방송 일시</th>
                        </tr>
                    </thead>
                    <tbody>
                        <c:choose>
                            <c:when test="${not empty historyList}">
                                <c:forEach items="${historyList}" var="item">
                                    <tr>
                                        <td>${item.liveNo}</td>
                                        <td>${item.liveTitle}</td>
                                        <td>${item.liveContent}</td>
                                        <td style="text-align: right;"><fmt:formatNumber value="${item.liveHit}" pattern="#,###" /></td>
                                        <td>${item.liveQty}</td>
                                        <td><fmt:formatDate value="${item.liveStartDate}" pattern="yyyy-MM-dd" /></td>
                                    </tr>     
                                </c:forEach>
                            </c:when>
                            <c:otherwise>
                                <tr><td colspan="6">라이브 이력이 없습니다.</td></tr>
                            </c:otherwise>
                        </c:choose>
                    </tbody>
                </table>
            </main>
        </div>
        <div class="ea-pagination" id="pagingArea" style="margin-left:auto;">
	    	${pagingVO.pagingHTML }
	    </div>
    </div>
<%@ include file="../../modules/footerPart.jsp" %>
<%@ include file="../../modules/sidebar.jsp" %>  
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
<script type="text/javascript">
	$(function(){
		const artGroupNo = "${managedArtGroupNo}".trim();
		console.log("처리 후 artGroupNo : [" + artGroupNo + "]");
		
		// artGroupNo가 0이거나 없을 경우 차트를 그리지 않음
        if (!artGroupNo || artGroupNo === "0") {
            console.log("관리하는 아티스트 그룹이 없어 차트를 표시하지 않습니다.");
            return;
        }
		
		fetch(`/api/emp/live/stats?artGroupNo=\${artGroupNo}`)
			.then(response => {
				if(!response.ok){
					throw new Error('네트워크 응답이 올바르지 않습니다.')
				}
				return response.json();
			})
			.then(data => {
				if(data && data.length > 0){
					createLiveChart(data);
				}else{
					console.log("표시할 차트 데이터가 없습니다.")
				}
			})
			.catch(error => {
				console.error('차트 데이터 로딩 중 오류 발생:', error);
			});
		
		
		// 차트 생성 함수
		function createLiveChart(chartData){
			console.log(chartData[0].x);
			console.log(chartData[0].y);
			const ctx = $("#liveStatsChart")[0].getContext('2d');
			
			new Chart(ctx, {
				type : 'line',
				data : {
					datasets: [{
						label: '조회수'
						, data: chartData
						, borderColor: 'rgba(54, 162, 235, 1)'
						, backgroundColor: 'rgba(54,162,235,0.2)'
						, fill : true // 라인 아래 영역 채우기
						, tension: 0.2 //라인의 부드러운 정도
					}]
				},
				options:{
					responsive: true
					, scales: {
						x:{
							type: 'time'
							, time:{
								unit: 'day'
								, tooltipFormat: 'yyyy-MM-dd'
								, displayFormats: {
									day: 'MM월 dd일'
								}
							},
							title:{
								display: true
								, text: '방송시간'
							}
						},
						
						y:{
							beginAtZero: true
							, title: {
								display: true
								, text: '조회수'
							}
						}
					}
				}
			});
		}
		/* 차트 함수 끝 */
	});
</script>
</body>
</html>