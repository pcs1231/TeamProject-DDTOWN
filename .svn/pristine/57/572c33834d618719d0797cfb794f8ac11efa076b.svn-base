<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.core" prefix="c"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script type="text/javascript" src="${pageContext.request.contextPath}/resources/ckeditorInquiry/ckeditor.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/js/adminlte.min.js"></script>
<%@ include file="../../modules/headerPart.jsp" %>
<style type="text/css">

 /* admin_member_detail.html에서 가져온 스타일 */
.detail-card { background-color: #fff; border: 1px solid #e7eaf3; border-radius: 8px; padding: 25px; box-shadow: 0 1px 3px rgba(0,0,0,0.04); }
.detail-card h3 { font-size: 1.3em; color: #2c3e50; margin-top: 0; margin-bottom: 20px; padding-bottom: 10px; border-bottom: 1px solid #eee; }

.info-list { list-style: none; padding: 0; margin: 0; overflow: hidden; /* float 해제 */ }
.info-list dt {
    font-weight: 600; /* admin_portal.css의 .ea-form label과 유사하게 */
    color: #333;      /* admin_portal.css의 .ea-form label과 유사하게 */
    width: 120px; 
    float: left;
    clear: left;
    margin-bottom: 1rem; /* admin_portal.css의 .ea-form .form-group과 유사하게 */
    line-height: 38px; 
    padding-right: 10px; /* 우측 여백 추가 */
    box-sizing: border-box;
}
.info-list dd {
    margin-left: 130px; 
    margin-bottom: 1rem; /* admin_portal.css의 .ea-form .form-group과 유사하게 */
    color: #333;
    min-height: 38px; 
    display: flex; 
    align-items: center;
}
/* 입력 필드 스타일은 admin_portal.css의 .ea-form input, select 스타일을 최대한 활용하도록 class 부여 고려 */
.info-list dd input[type="text"],
.info-list dd input[type="email"],
.info-list dd select {
    width: calc(100% - 22px); 
    padding: .75rem .9rem; /* admin_portal.css .ea-form input과 동일하게 */
    font-size: .95rem;    /* admin_portal.css .ea-form input과 동일하게 */
    line-height: 1.5;     /* admin_portal.css .ea-form input과 동일하게 */
    color: #495057;       /* admin_portal.css .ea-form input과 동일하게 */
    background-color: #fff;
    border: 1px solid #ced4da; /* admin_portal.css .ea-form input과 동일하게 */
    border-radius: .25rem;   /* admin_portal.css .ea-form input과 동일하게 */
    box-sizing: border-box;
    height: 38px; /* 일관성 유지 */
}
 .info-list dd select {
    width: auto; /* select는 내용에 맞게 */
    min-width: 150px;
}

.info-list dd span.view-mode-text { 
    padding: 8px 0; 
    display: inline-block; /* span도 높이를 가지도록 */
    line-height: 22px; /* 기본 텍스트 줄 높이 */
}
.status-badge-in-detail { /* 상세 정보 내 상태 뱃지 */
     padding: 5px 10px; border-radius: 12px; font-size: 0.8em; font-weight: 500; color: white; display:inline-block;
}
.status-badge-in-detail.normal { background-color: #2ecc71; } /* 정상 */
.status-badge-in-detail.suspended { background-color: #f39c12; } /* 활동정지 */
.status-badge-in-detail.banned { background-color: #e74c3c; } /* 블랙리스트 */
.status-badge-in-detail.dormant { background-color: #7f8c8d; } /* 휴면 */

/* 삭제 버튼 스타일 */
.delete-member-btn {
    background-color: #e74c3c;
    color: white;
    border: none;
    margin-left: 10px;
}
.delete-member-btn:hover {
    background-color: #c0392b;
}

</style>
</head>
<script type="text/javascript">
//사이드바 메뉴 기능
document.addEventListener('DOMContentLoaded', function() {
    const navItemsWithSubmenu = document.querySelectorAll('.emp-sidebar .emp-nav-item.has-submenu');
    navItemsWithSubmenu.forEach(item => {
        const arrow = item.querySelector('.submenu-arrow');
        item.addEventListener('click', function(event) {
            if (this.getAttribute('href') === '#') {
                event.preventDefault();
            }
            const parentLi = this.parentElement;
            const submenu = this.nextElementSibling;

            if (submenu && submenu.classList.contains('emp-submenu')) {
                const parentUl = parentLi.parentElement;
                if (parentUl) {
                    Array.from(parentUl.children).forEach(siblingLi => {
                        if (siblingLi !== parentLi) {
                            const siblingSubmenuControl = siblingLi.querySelector('.emp-nav-item.has-submenu.open');
                            if (siblingSubmenuControl) {
                                const siblingSubmenuElement = siblingSubmenuControl.nextElementSibling;
                                siblingSubmenuControl.classList.remove('open');
                                if (siblingSubmenuElement && siblingSubmenuElement.classList.contains('emp-submenu')) {
                                    siblingSubmenuElement.style.display = 'none';
                                }
                                const siblingArrow = siblingSubmenuControl.querySelector('.submenu-arrow');
                                if (siblingArrow) siblingArrow.style.transform = 'rotate(0deg)';
                            }
                        }
                    });
                }
            }
            
            this.classList.toggle('open');
            if (submenu && submenu.classList.contains('emp-submenu')) {
                submenu.style.display = this.classList.contains('open') ? 'block' : 'none';
                if (arrow) arrow.style.transform = this.classList.contains('open') ? 'rotate(90deg)' : 'rotate(0deg)';
            }
        });
    });

    // 현재 페이지 URL 기반으로 사이드바 메뉴 활성화
    const currentFullHref = window.location.href;
    document.querySelectorAll('.emp-sidebar .emp-nav-item[href]').forEach(link => {
        if (link.href === currentFullHref) {
            link.classList.add('active');
            let currentActiveElement = link;
            while (true) {
                const parentLi = currentActiveElement.parentElement;
                if (!parentLi) break;
                const parentSubmenuUl = parentLi.closest('ul.emp-submenu');
                if (parentSubmenuUl) {
                    parentSubmenuUl.style.display = 'block';
                    const controllingAnchor = parentSubmenuUl.previousElementSibling;
                    if (controllingAnchor && controllingAnchor.classList.contains('has-submenu')) {
                        controllingAnchor.classList.add('active', 'open');
                        const arrow = controllingAnchor.querySelector('.submenu-arrow');
                        if (arrow) arrow.style.transform = 'rotate(90deg)';
                        currentActiveElement = controllingAnchor;
                    } else break;
                } else break;
            }
        }
    });

$(function(){
	
	let spanMemberName = $("#detailMemberName");
	let spanNickName = $("#detailMemberNickname");
	let spanEmail = $("#detailMemberEmail");
	let spanStatType = $("#detailMemberStatus");
	
	let firstName = $("#editfirstName");
	let lastName = $("#editLastName");
	let nickName = $("#editMemberNickname");
	let email = $("#editMemberEmail");
	let statType = $("#editMemberStatus");
	
	let formActionButtons =$("#formActionButtons");
	let flag = false;
	
	$("#editMemberInfoBtn").on("click",function(){
		
		if(!flag){
			
			nickName.val(spanNickName.html());
			email.val(spanEmail.html());
			
			spanMemberName.attr("style","display:none");
			spanNickName.attr("style","display:none");
			spanEmail.attr("style","display:none");
			spanStatType.attr("style","display:none");
			
			firstName.attr("style","display:block");
			lastName.attr("style","display:block");
			nickName.attr("style","display:block");
			email.attr("style","display:block");
			statType.attr("style","display:block");
			formActionButtons.attr("style","display:block");
			$("#editMemberInfoBtn").attr("style","display:none");
		}
	});
	
	$("#cancelEditBtn").on("click",function(){
		spanMemberName.attr("style","display:block");
		spanNickName.attr("style","display:block");
		spanEmail.attr("style","display:block");
		spanStatType.attr("style","display:block");
		
		firstName.attr("style","display:none");
		lastName.attr("style","display:none");
		nickName.attr("style","display:none");
		email.attr("style","display:none");
		statType.attr("style","display:none");
		formActionButtons.attr("style","display:none");
		$("#editMemberInfoBtn").attr("style","display:block;float: right; margin-top: -5px;");
	});
	
	$("#saveMemberInfoBtn").on("click",function(){
		console.log($("#lastName").val())
		let memUsername = $("#detailMemberId").html();
		
		let data = new FormData();
		data.append("memNicknm",nickName.val());
		data.append("memStatCode",statType.val());
		data.append("peopleVO.peoLastNm", lastName.val());
		data.append("peopleVO.peoFirstNm", firstName.val());
		data.append("peopleVO.peoEmail", email.val());
		
		Swal.fire({
			title : "수정하시겠습니까?",
			icon : "question",
			showConfirmButton : true,
			showCancelButton : true,
			confirmButtonText : "예",
			cancelButtonText : "아니오"
		}).then((result) => {
			if(result.isConfirmed){
				$.ajax({
					url : "/admin/community/member/update/" + memUsername,
					type : "post",
					data : data,
					processData : false,
					contentType : false,
					success : function(res){
						if(res == "OK"){
							Swal.fire({
								title : "수정완료!",
								text : "수정이 완료되었습니다.",
								icon : "success",
								showConfirmButton : true,
							}).then((result) => {
								location.href = "/admin/community/member/detail/" + memUsername;
							});
						}
					},
					error : function(error, status, thrown){
						console.log(error.status)
					},
					beforeSend : function(xhr) {
				        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
				    }
				});
			}else{
				return false;
			}
		});
		
	});
	
	$("#deleteMemberBtn").on("click", function(){
		let memUsername = $("#detailMemberId").html();
		
		Swal.fire({
			title : "탈퇴요청",
			text : "정말로 탈퇴처리하시겠습니까?",
			icon : "warning",
			showCancelButton : true,
			confirmButtonText : "예",
			cancelButtonText : "아니오"
		}).then((result) => {
			if(result.isConfirmed){
				$.ajax({
					url : "/admin/community/member/delete/" + memUsername,
					type : "post",
					success : function(res){
						if(res == "OK"){
							Swal.fire({
								title : "탈퇴처리완료!",
								text : "정상적으로 탈퇴처리되었습니다.",
								icon : "success",
							}).then((result) => {
								location.href = "/admin/community/member/main";
							});
						}
					},
					error : function(error, status, thrown){
						console.log(error.status);
					},
					beforeSend : function(xhr) {
				        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
				    }
				});
			}else{
				return false;
			}
		});
	});
});

</script>
<body>
<div class="emp-container">
        <%@ include file="../modules/header.jsp" %>

        <div class="emp-body-wrapper">
            <%@ include file="../modules/aside.jsp" %>
				<main class="emp-content">
					<section id="memberDetailSection" class="ea-section">
						<div class="ea-section-header">
				            <h2 id="memberDetailTitle">회원 상세 정보</h2>
				            <a href="/admin/community/member/main" class="ea-btn outline sm"><i class="fas fa-list"></i> 목록으로</a>
				        </div>
				        
				        <div class="detail-card basic-info">
				        	<h3>기본 정보 
				                <button type="button" class="ea-btn sm delete-member-btn" id="deleteMemberBtn" style="float: right; margin-top: -5px; margin-right: 10px;"><i class="fas fa-trash-alt"></i> 탈퇴 처리</button>
				                <button type="button" class="ea-btn sm outline" id="editMemberInfoBtn" style="float: right; margin-top: -5px;"><i class="fas fa-edit"></i> 정보 수정</button>
				            </h3>
					        <form id="memberInfoForm">
					        	<dl class="info-list">
					        		<dt>아이디:</dt>
					                <dd><span class="view-mode-text" id="detailMemberId">${memberVO.memUsername }</span></dd>
					                
						        	<dt>이름:</dt>
						            <dd>
						            	<c:set value="${memberVO.peopleVO.peoFirstNm }" var="fristNm" />
						            	<c:set value="${memberVO.peopleVO.peoLastNm }" var="lastNm" />
						                <span class="view-mode-text" id="detailMemberName">${lastNm }${fristNm }</span>
						                <input type="text" id="editLastName" name="memberName" style="display:none;" class="ea-form-control" value="${lastNm }">
						                <input type="text" id="editfirstName" name="memberName" style="display:none;" class="ea-form-control"  value="${fristNm }">
						            </dd>
						            
						            <dt>닉네임:</dt>
					                <dd>
					                    <span class="view-mode-text" id="detailMemberNickname">${memberVO.memNicknm }</span>
					                    <input type="text" id="editMemberNickname" name="memberNickname" style="display:none;" class="ea-form-control">
					                </dd>
					
					                <dt>이메일:</dt>
					                <dd>
					                    <span class="view-mode-text" id="detailMemberEmail">${memberVO.peopleVO.peoEmail }</span>
					                    <input type="email" id="editMemberEmail" name="memberEmail" style="display:none;" class="ea-form-control">
					                </dd>
					
					                <dt>가입일:</dt>
					                <dd><span class="view-mode-text" id="detailMemberJoinDate">${memberVO.memRegDate }</span></dd>
					
					                <dt>가입경로:</dt>
					                <dd><span class="view-mode-text">${memberVO.memRegDetCode }</span></dd>
					                
					                <dt>회원 상태:</dt>
					                <dd>
					                	<c:choose>
				              				<c:when test="${memberVO.memStatDetCode eq '정상'}">
				              					<span class="status-badge answered" id="detailMemberStatus" data-code=${memberVO.memStatCode }>${memberVO.memStatDetCode }</span>
				              				</c:when>
				              				<c:when test="${memberVO.memStatDetCode eq '정지' }">
				              					<span class="status-badge pending" id="detailMemberStatus">${memberVO.memStatDetCode }</span>
				              				</c:when>
				              				<c:otherwise>
				              					<span class="status-badge danger" id="detailMemberStatus">${memberVO.memStatDetCode }</span>
				              				</c:otherwise>
				              			</c:choose>
					                    <select id="editMemberStatus" name="memberStatus" style="display:none;" class="ea-filter-select"> 
					                    	<c:forEach items="${codeList }" var="code">
					                    		<option value="${code.commCodeDetNo }" <c:if test="${code.commCodeDetNo eq memberVO.memStatCode }">selected</c:if> >${code.description }</option>
					                    	</c:forEach>
					                    </select>
					                </dd>
					        	</dl>
					        	<div class="ea-form-actions" id="formActionButtons" style="display:none;">
					                <button type="button" class="ea-btn outline" id="cancelEditBtn">취소</button>
					                <button type="button" class="ea-btn primary" id="saveMemberInfoBtn">저장</button>
					            </div>
					        </form>
				        </div>
					</section>
				</main>
			</div>
		</div>
</body>
</html>