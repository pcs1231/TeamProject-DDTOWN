<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.fmt" prefix="fmt" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<%@ taglib uri="jakarta.tags.functions" prefix="fn" %>
<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Artist A - 커뮤니티</title>
<meta name="_csrf" content="${_csrf.token}"/>
<meta name="_csrf_header" content="${_csrf.headerName}"/>
<link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css" />
<link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor-viewer.min.css" />
<script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js"></script>
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/mainservice_common.css">
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/artist_community.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.17/index.global.min.js'></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" ></script>
<%@ include file="../../modules/headerPart.jsp" %>
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/communityModal.css">

<style>
.membership-blur {
    filter: blur(5px);
    pointer-events: none;
}

.membership-only {
    position: relative;
}

.membership-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.9);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 2;
}

.membership-badge {
    background: #8a2be2;
    color: #fff;
    padding: 2px 6px;
    border-radius: 10px;
    font-size: 0.8em;
    margin-left: 5px;
}

.imgDiv{
	position :relative;
	width: 100px;
	height : 100px;
}

.imgDiv img{
	width : 100%;
	height : 100%
}

.imgDiv i{
	position : absolute;
	top : 5%;
	right: 5%; /* 아이콘을 이미지의 가로 중앙에 위치 */
    transform: translate(-10%, -10%); /* 아이콘을 중앙에 정확히 위치 */
    font-size: 1rem; /* 아이콘 크기 조절 */
    color: white; /* 아이콘 색상 설정 */
}

.replyWriterInfo {
    display: flex;
    align-items: center;
    gap: 10px;
}

</style>
</head>
<body>

	<sec:authentication property="principal" var="user"/>
	<input type="hidden" id="communityArtistGroupNo" value="${artistGroupVO.artGroupNo }">
	    <c:out value="${user}"/>
	    
    <c:choose>
		<c:when test="${communityVO.artistTabYn }">
			<c:set value="${artistPostVO }" var="communityPostVO" />
		</c:when>
		<c:otherwise>
			<c:set value="${fanPostVO }" var="communityPostVO" />
		</c:otherwise>
	</c:choose>

    <div class="apt-main-layout">
        <div class="apt-container">
            <header class="apt-header">
                <div class="apt-header-avatar">
                    <div class="artist-avatar-placeholder">A</div><!-- 아티스트 그룹 이미지 넣을 예정-->
                </div>
                <div class="apt-header-info">
                    <h2><c:out value="${artistGroupVO.artGroupNm }" /> <span style="font-size:0.7em; color: #888;">(아티스트)</span></h2>
                    <div class="artist-stats">
                        <span><c:out value="${artistGroupVO.communityVO.totalArtist }"/>명</span> &bull; <span><fmt:formatNumber value="${artistGroupVO.communityVO.totalFan }" pattern="#,###"/></span> 팬
                    </div>
                </div>
                <div class="apt-header-actions">
	               	<c:if test="${followFlag eq 'N'}">
		                <button class="btn-apt-action" id="followToggleBtn">
		                    팔로우
		                </button>
	              	</c:if>
	               	<c:if test="${followFlag eq 'Y'}">
		                <button class="btn-apt-action following" id="followToggleBtn">
		                    <span class="follow-icon">✔</span> 팔로잉
		                </button>
	               	</c:if>
	                <button class="btn-apt-action">🔔 알림 설정</button>
	            </div>
            </header>

            <ul class="nav apt-tabs" id="comuTab" role="tabList">
            	<li class="nav-item" role="presentation">
			        <button class="tab-item<c:if test="${communityVO.boardTypeCode eq 'ARTIST_BOARD' }"> active</c:if>" id="artistPost" data-bs-target="#artistPostList" type="button" role="tab" aria-controls="artistPostList" >아티스트</button>
			    </li>
			    <li class="nav-item" role="presentation">
			        <button class="tab-item<c:if test="${communityVO.boardTypeCode eq 'FAN_BOARD' }"> active</c:if>" id="fanPost" data-bs-target="#fanPostList" type="button" role="tab" aria-controls="fanPostList">팬</button>
			    </li>
			    <li class="nav-item" role="presentation" >
			        <button class="tab-item" id="live" data-bs-target="#liveList" type="button" role="tab" aria-controls="liveList" aria-selected="false">라이브</button>
			    </li>
			    <li class="nav-item" role="presentation">
			        <button class="tab-item" id="schedule" data-bs-target="#scheduleList" type="button" role="tab" aria-controls="scheduleList" aria-selected="false">스케줄</button>
			    </li>
			    <li class="nav-item" role="presentation">
			        <button class="tab-item" id="noticeApt" data-bs-target="#noticeAptList" type="button" role="tab" aria-controls="noticeAptList" aria-selected="false">공지사항</button>
			    </li>
            </ul>

            <main class="apt-content-area">
				
                <div class="tab-pane<c:if test="${communityVO.boardTypeCode eq 'ARTIST_BOARD' || communityVO.boardTypeCode eq 'FAN_BOARD'}"> show active</c:if>" id="artistPostList" role="tabpanel" aria-labelledby="artistPost">
                    <div id="artistFeedList">
                    	<c:if test="${empty communityPostVO}">
                    		<p>게시글이 없습니다.</p>
                    	</c:if>
                    	<div id="artistFeedSearchWrap" style="margin-bottom:10px; display:flex; gap:8px; align-items:center;">
			            	<form action="/community/gate/${artistGroupVO.artGroupNo }/apt" id="artistSearchForm" method="get">
				            	<input type="hidden" id="comuArtGroupNo" value="${artistGroupVO.artGroupNo }" />
				            	<input type="hidden" id="artistTabYn" name="artistTabYn" value="${communityVO.artistTabYn }" />
				            	<input type="hidden" name="searchType" id="searchType" />
		                        <input type="text" name="searchWord" id="artistFeedSearchInput" value="${communityVO.searchWord }" placeholder="아티스트 게시글 검색 (제목)" style="flex:1; padding:7px 10px; border:1px solid #ccc; border-radius:6px; font-size:0.95em;">
		                        <input type="button" id="searchFormBtn" class="btn btn-primary" value="검색" />
		                        <sec:authorize access="hasAnyRole('MEMBER','MEMBERSHIP','EMPLOYEE','ADMIN')">
		                        	<input type="radio" class="btn-check" name="artistNm" id="all" value="" />
		                        	<label class="btn btn-outline-primary" for="all">전체</label>
		                        	<c:if test="${communityVO.artistTabYn }">
				                        <c:forEach items="${artistGroupVO.artistList }" var="artist">
				                        	<input type="radio" class="btn-check" name="artistNm" id="${artist.artNm }" value="${artist.memUsername }" <c:if test="${not empty communityVO.searchType and communityVO.searchType eq artist.memUsername}">checked</c:if>/>
				                        	<label class="btn btn-outline-primary" for="${artist.artNm }">${artist.artNm }</label>
				                        </c:forEach>
		                        	</c:if>
		                        </sec:authorize>
			            	</form>
	                    </div>
	
	                    <!-- 등록 모달 오픈 -->
	                    <div class="post-composer" id="openModal">
					        <button type="button" data-bs-toggle="modal" data-bs-target="#insertPostModal">
						        <div class="profile-placeholder"></div>
						        <span class="placeholder-text">포스트를 남겨보세요.</span>
							</button>
					    </div>
	
					    <input type="button" id="test" value="test">

				    <!-- 등록 모달 오픈 끝 -->
                    	<c:forEach items="${communityPostVO }" var="post" varStatus="v">
                    				<div class="feed-item feedBox" data-post-id="${post.comuPostNo }" style="cursor:pointer;">
                    				<div class="feed-item-header">
                    					<div class="author-avatar" style="background-color:'#8a2be2'; color:'#fff';"><img src="${post.writerProfile.comuProfileImg }"></div>
                    					<div class="author-info">
                    						<span class="author-name" style="color:'#8a2be2';">${post.writerProfile.comuNicknm}</span>
                    						<span class="post-time">
	                    						<c:choose>
	                    							<c:when test="${post.comuPostRegDate ne post.comuPostModDate }">
			                    						<fmt:formatDate value="${post.comuPostModDate }" pattern="MM.dd. HH:mm"/>(수정됨)
	                    							</c:when>
	                    							<c:otherwise>
	                    								<fmt:formatDate value="${post.comuPostRegDate }" pattern="MM.dd. HH:mm"/>
	                    							</c:otherwise>
	                    						</c:choose>
                    						</span>
                    						<c:if test="${post.memberShipYn }">
                    							<span class="membership-badge" style="background:#8a2be2;color:#fff;padding:2px 6px;border-radius:10px;font-size:0.8em;margin-left:5px;">멤버십 전용</span>
                    						</c:if>
                    					</div>
                    					<div class="post-options">
                    						<button class="post-options-btn" style="background:none;border:none;font-size:1.2em;cursor:pointer;">•••</button>
			                                <div class="post-options-menu" style="position:absolute;right:0;top:30px;background:#fff;border:1px solid #ccc;border-radius:6px;box-shadow:0 2px 8px rgba(0,0,0,0.08);z-index:10;min-width:90px;">
				                                <sec:authorize access="hasAnyRole('ARTIST','MEMBER')">
				                                	<c:choose>
				                                		<c:when test="${user.username eq post.writerProfile.memUsername }">
				                                			<div class="post-option-item" id="edit" data-postNum="${post.comuPostNo }">수정</div>
					           								<div class="post-option-item" id="delete" data-action="delete" data-postNum="${post.comuPostNo }">삭제</div>
				                                		</c:when>
				                                		<c:otherwise>
				                                			<button class="btn btn-primary" id="reportPost"
						                                			data-bs-toggle="modal"
						                                			data-bs-target="#reportModal"
						                                			data-bs-whatever="${post.comuPostNo }"
						                                			data-bs-boardType="${post.boardTypeCode }"
						                                			data-bs-comuProfileNo="${post.comuProfileNo }"
						                                			data-bs-comuNick="${post.writerProfile.comuNicknm }"
						                                			data-bs-comuContent="${post.comuPostContent }"
						                                			data-bs-selectType="RTTC001">신고</button>
				                                		</c:otherwise>
				                                	</c:choose>
				                                </sec:authorize>
			                                </div>
                    					</div>
                    				</div>
                    				<div class="feed-item-content<c:if test="${post.memberShipYn }">membership-blur</c:if>" style="<c:if test="${post.memberShipYn }">'position:relative;'</c:if>">
                    					<form id="postForm${v.index }" data-postNum=${v.index }>
	                    					<div class="openPostModal" id="openPostModal" data-postNum=${post.comuPostNo }>
		                   						<c:if test="${not empty post.postFiles }">
			                    					<div class="post-img">
		                    							<c:forEach items="${post.postFiles }" var="file">
		                    								<img src="${file.webPath }">
		                    							</c:forEach>
			                    					</div>
		                   						</c:if>
		                    					<div class="post-text" id="artistPostViewer">${post.comuPostContent}</div>
	                    					</div>
                    					</form>
                    				</div>
                    				<div class="feed-item-actions">
			                            <button class="action-btn comment-toggle-btn">💬 댓글 <span class="count"><c:out value="${post.comuPostReplyCount }" /></span></button>
			                            <button class="action-btn comment-toggle-btn">
			                            	<i class="
				                            	<c:if test="${post.likeYn eq 'N' }">bi bi-suit-heart</c:if>
				                            	<c:if test="${post.likeYn eq 'Y' }">bi bi-suit-heart-fill</c:if>
			                            	">${post.comuPostLike }</i>
			                            </button>
			                        </div>
			                        <div class="comments-wrapper" style="display:block;">
			                        	<div class="comment-form-container">
			                        		<textarea class="comment-textarea" placeholder="댓글을 남겨보세요..."></textarea>
                    						<button class="btn-submit-comment" disabled>등록</button>
			                        	</div>
			                        	<div class="comment-list">
			                        		<c:forEach items="${post.comuPostReplyList }" var="reply">
				                        		<div class="comment-content">
				                        			<span class="comment-author-name"><c:out value="${reply.replyMember.comuNicknm }"/></span>
	                                				<p class="comment-text"><c:out value="${reply.comuReplyContent }"/></p>
				                        		</div>
			                        		</c:forEach>
			                        	</div>
			                        </div>
                    			</div>
                    	</c:forEach>
                    </div>
                </div>
                <div class="tab-pane" id="fanPostList" role="tabpanel" aria-labelledby="fanPost">ddd</div>

				<sec:authentication property="principal.username" var="currentUserId"/>
				<c:out value="현재 로그인한 아이디 : ${currentUserId }"></c:out> 
				
				<div class="tab-pane" id="liveList" role="tabpanel" aria-labelledby="live">
					라이브 탭 영역
					
					<button onclick="startLive()" id="stream-info" data-user-id="${currentUserId}" data-room-id="stream-room-${artistGroupVO.artGroupNo }">Live 방송하기</button>
					<button onclick="watchLive()" id="watch-info" data-user-id="${currentUserId}" data-room-id="stream-room-${artistGroupVO.artGroupNo }">Live 시청하기</button>
				    
				    
				</div>
			
			    <div class="tab-pane" id="scheduleList" role="tabpanel" aria-labelledby="schedule">
			        <p class="loading-placeholder" style="text-align: center; display: none;">
			        	<div id="calendar"></div>
					</p>
			    </div>
			
			    <div class="tab-pane" id="noticeAptList" role="tabpanel" aria-labelledby="noticeApt">
			        <p class="loading-placeholder" style="text-align: center; display: none;">공지사항을 불러오는 중...</p>
			    </div>

            </main>
        </div>




<!-- /////////////////////////////////////////////////////////////////////////////////////////////////////// -->






        <aside class="apt-sidebar">
            <div class="sidebar-widget apt-level-widget">
                <h3>APT 현황</h3>
                <div class="apt-floor-display" id="aptFloorDisplay">123층 APT</div>
                <div class="fan-count-tooltip-wrapper"> <p class="fan-count-display">팬 <span id="sidebarFanCountApprox">약 12.3만</span> 명</p> <span class="fan-count-tooltip" id="sidebarFanCountExact">123,456명</span> </div>
            </div>

            <div class="sidebar-widget membership-widget">
                <div class="membership-icon">🛡️</div>
                <h3>Membership</h3>
                <p>지금 멤버십에 가입하고 Artist A의 특별한 혜택을 누려보세요.</p>
                <button class="btn-join-membership" id="openMembershipModalBtn">
                    멤버십 가입하기 <span class="arrow">&gt;</span>
                </button>
            </div>

			<c:if test="${not empty userProfile}">
	             <!-- 마이 프로필 영역 추가 -->
	             <div id="myProfile" class="sidebar-widget my-profile-widget" style="margin-bottom: 20px; text-align: center; cursor: pointer;" data-comu-profile-no="${userProfile.comuProfileNo}">
	                <div style="width: 80px; height: 80px; margin: 0 auto; border-radius: 50%; overflow: hidden; background-color: #e9ecef; display: flex; align-items: center; justify-content: center;">
	                	<img alt="프로필 img" src="${userProfile.comuProfileImg}">
	                </div>
	                <p id="myProfileNickname" style="margin-top: 8px; font-weight: bold; font-size: 1.1em;">${userProfile.comuNicknm}</p>
	                <small>내가 쓴 글 : ${fn:length(userProfile.postList)}개</small> | <small>내가 쓴 댓글 : ${fn:length(userProfile.replyList)}개</small>
	            </div>
			</c:if>

        </aside>
    </div>

    <div id="footer-placeholder"></div>

     <div class="modal-overlay" id="membershipModalOverlay" style="display: none;">
        <div class="modal-content membership-modal">
            <button class="modal-close-btn" id="closeMembershipModalBtn" title="닫기">&times;</button>
            <div class="modal-header">
                <h2>Artist A OFFICIAL MEMBERSHIP</h2>
                <p class="membership-duration">이용 기간: 결제일로부터 30일</p>
            </div>
            <div class="modal-body">
                <div class="membership-main-image">
                </div>
                <h3>주요 혜택 안내</h3>
                <ul class="modal-benefits-list">
                    <li>✔️ 멤버십 전용 콘텐츠 이용 가능 (일부 블러 처리된 콘텐츠 즉시 해제!)</li>
                    <li>🗓️ APT 메인 상단에서 아티스트 구독일 D-Day 확인</li>
                    <li>🎤 콘서트/팬미팅 선예매 및 특별 이벤트 참여 기회</li>
                    <li>🎁 한정판 멤버십 키트 제공 (별도 구매 또는 등급에 따라)</li>
                </ul>

                <h3>이용 안내 및 유의사항</h3>
                <ul class="modal-notes-list">
                    <li>본 멤버십은 비용을 선지불하여 이용하는 유료 서비스입니다.</li>
                    <li>멤버십은 아티스트(솔로, 그룹)별로 별도 운영되며, 본 멤버십은 [Artist A] 전용입니다.</li>
                    <li>그룹 내 솔로 활동 멤버 발생 시, 해당 멤버의 커뮤니티는 별도 생성/운영될 수 있습니다.</li>
                    <li>자세한 내용은 구매 페이지의 약관을 참고해주세요.</li>
                </ul>
            </div>
            <div class="modal-footer">
                <div class="membership-price">₩30,000 <span class="vat-notice">(VAT 포함)</span></div>
                <button class="btn-modal-purchase" id="goToPurchasePageBtn">멤버십 구매하기</button>
            </div>
        </div>
    </div>

	<c:if test="${followFlag eq 'N'}">
	     <!-- 커뮤니티 가입 오버레이 -->
	    <div id="communityOverlay" class="d-flex p-2 align-items-center fixed-bottom"
	    	style="height:50px; bottom: 0px; width:100%; background-color: rgba(0,0,0,0.7); border-radius: 5px;">
	        <div class="community-overlay-bg"></div>
	        <span style="color: #fff;">커뮤니티 팔로우를 해서 모든 컨텐츠를 즐겨보세요</span>
	        <button class="community-join-btn" id="followBtn" style="margin-left: auto; color:#fff">팔로우하기</button>
	    </div>

	    <!-- 닉네임 입력 모달 -->
	    <div class="modal fade" id="commProfileModal" tabindex="-1" aria-labelledby="nicknameModalLabel" aria-hidden="true">
	        <div class="modal-dialog modal-dialog-centered">
	            <div class="modal-content">
	                <div class="modal-header">
	                    <h5 class="modal-title" id="commProfileModalLabel">커뮤니티 프로필을 만들어보세요!</h5>
	                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
	                </div>
	                <div class="modal-body">
	                	<div class="mb-3 d-flex justify-content-center align-items-center">
	                        <div class="profile-img-box" id="previewImgBox" style="width:100px; height:100px; border-radius: 50%; cursor:pointer; overflow: hidden;">
	                            <img alt="프로필이미지" src="${pageContext.request.contextPath}/upload/profile/base/defaultImg.png" id="previewImg" width="100px" height="100px">
	                        </div>
	                	</div>
	                    <div class="mb-3">
	                        <label for="comuNicknm" class="form-label">닉네임</label>
	                        <input type="text" class="form-control" id="comuNicknm" name="comuNicknm" maxlength="12" placeholder="12자 이내로 입력하세요">
	                    </div>

	                    <div class="mb-3">
	                        <label for="imgFile" class="form-label">프로필 이미지</label>
	                        <input class="form-control" type="file" id="imgFile" name="imgFile" accept="image/*">
	                    </div>
	                </div>
	                <div class="modal-footer">
	                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
	                    <button type="button" class="btn btn-primary" id="profileSubmitBtn">완료</button>
	                </div>
	            </div>
	        </div>
	    </div>
	</c:if>

    <!-- DM 모달이 삽입될 컨테이너 -->
    <div id="weverse-dm-modal-container"></div>

    <!-- DM 열기 버튼 (원하는 곳에 배치) -->
    <button onclick="openWeverseDM()">DM 열기</button>

<!-- 아티스트 글 등록 모달 -->
<div class="modal fade " id="insertPostModal" tabindex="-1"
	aria-labelledby="insertPostModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="insertPostModalLabel">
					<c:out value="${artistGroupVO.artGroupNm }" />
				</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal"
					aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="postForm" action="/community/insert/post"
					enctype="multipart/form-data" method="post">
					<input type="hidden" name="artGroupNo" value="${artistGroupVO.artGroupNo }" />

					<div id="imgArea"></div>

					<div>내용</div>
					<textarea rows="5" cols="10" id="comuPostContent"
						onkeyup="contentLengthCheck(this)" name="comuPostContent"></textarea>

					<div class="text-right pt-2">
						<span class="pt-1"><span class="cmt-sub-size">0</span>/1000</span>
					</div>
				
					<c:if test="${communityVO.artistTabYn }">
						<label for="memberShipYn"> <input type="checkbox"
							id="postMemberShipYn" name="postMemberShipYn" value="멤버십전용 게시물" />
							<input type="hidden" id="memberShipYn" name="memberShipYn"
							value="" /> 멤버십전용
						</label>
					</c:if>
					 <input type="file" name="files" id="insertPostFile" multiple
						accept="image/*">
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" id="postSendBtn">저장</button>
				<button type="button" class="btn btn-secondary"
					data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

<!-- 아티스트 글 등록 모달 끝 -->

<!-- 아티스트 글 수정 모달 -->
<div class="modal fade " id="editPostModal" tabindex="-1" aria-labelledby="editPostModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="editPostModalLabel">
					<c:out value="포스트 수정" />
				</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal"
					aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="editPostForm" enctype="multipart/form-data" method="post">
				<input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" />
					<input type="hidden" name="artGroupNo" value="${artistGroupVO.artGroupNo }" />
					<input type="hidden" name="comuPostNo" id="postNum" />
					<input type="hidden" id="fileGroupNo" name="fileGroupNo" />
					<input type="hidden" id="deleteFiles" name="deleteFiles" />

					<div id="editImgArea" class="editImg"></div>
					<div id="plusImg" class="editImg"></div>

					<div>내용</div>
					<textarea rows="5" cols="10" id="editComuPostContent"
						 name="comuPostContent" onkeyup="contentLengthCheck(this)"></textarea>
					<div class="text-right pt-2">
						<span class="pt-1"><span class="cmt-sub-size">0</span>/1000</span>
					</div>
	
					<c:if test="${communityVO.artistTabYn }">
						<label for="editPostMemberShipYn" id="checkBoxMbs">
							<input type="checkbox" id="editPostMemberShipYn" name="postMemberShipYn" value="멤버십전용 게시물" />
							<input type="hidden" id="editMemberShipYn" name="memberShipYn"
							value="" /> 멤버십전용
						</label>
					</c:if>
					<input type="file" name="files" id="editInsertPostFile" multiple accept="image/*">
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" id="postUpdateBtn">수정</button>
				<button type="button" class="btn btn-secondary"
					data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>
<!-- 아티스트 글 수정 모달 끝 -->

<!-- 신고모달 -->
<div class="modal fade" id="reportModal" tabindex="-1" aria-labelledby="reportModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="reportModalLabel">신고사유 선택</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="reportForm" method="post">
        	<input type="hidden" name="targetComuPostNo" id="targetComuPostNo">
        	<input type="hidden" name="targetBoardTypeCode" id="targetBoardTypeCode">
        	<input type="hidden" name="targetComuReplyNo" id="targetComuReplyNo" value="">
        	<input type="hidden" name="artGroupNo" id="reportArtGroupNo">
        	<input type="hidden" name="targetComuProfileNo" id="targetComuProfileNo">
        	<input type="hidden" name="reportTargetTypeCode" id="reportTargetTypeCode">
          <div class="mb-3">
          	<div class="radioArea">
          	</div>
          </div>
          <div class="mb-3">
            <label for="targetNick" class="col-form-label">신고 처리 대상:</label>
            <input type="text" class="form-control" id="targetNick" disabled="disabled" />
          </div>
          <div class="mb-3">
            <label for="targetContent" class="col-form-label">처리 내용:</label>
            <textarea class="form-control" id="targetContent" disabled="disabled"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="reportSendBtn">신고하기</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
      </div>
    </div>
  </div>
</div>
<!-- 포스트 상세 모달 ver2 -->
<div class="modal fade" id="detailPostModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen-custom">
         <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>

        <div class="modal-content">
            <div class="modal-body p-0">
                <div class="d-flex h-100">

                    <div class="post-pane" id="postBox">
                    </div>

                    <div class="comment-pane">
					    <div class="comment-pane-header">
					        <strong class="mx-auto" id="replyCount"></strong>
					    </div>

					    <div class="comment-pane-body" id="replyList">

					    </div>

					    <div class="comment-pane-footer">
					    	<form action="/community/reply/insert" method="get" id="replyForm">
								<input type="hidden" id="boardTypeCode" name="boardTypeCode" />
								<input type="hidden" id="comuPostNo" name="comuPostNo" />
								<input type="hidden" id="artGroupNo" name="artGroupNo" value="${artistGroupVO.artGroupNo }" />
							    <div class="input-group">
						        	<textarea id="comuReplyContent" onkeyup="replyContentLengthCheck(this)" name="comuReplyContent" class="form-control" placeholder="댓글을 입력하세요." aria-label="댓글 입력" rows="1" style="resize: none;"></textarea>
						        	<button class="btn btn-primary" type="button" id="replyBtn">등록</button>
							    </div>
							</form>
						</div>
						<div class="text-right pt-2">
							<span class="pt-1"><span class="cmt-sub-size">0</span>/300</span>
						</div>
					</div>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- 스케줄 상세 모달 -->
<div class="modal fade" id="scheduleModal" tabindex="-1" aria-labelledby="scheduleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="scheduleModalLabel">일정상세</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="closeBtn"></button> 
			</div>
			<div class="modal-body">
	        	<div class="mb-3">
	        		 <label for="title" class="form-label">일정명</label>
	        		 <input type="text" class="form-control-plaintext" id="title" name="title" disabled="disabled">
	        	</div>
	        	<div class="mb-3">
					<label for="content" class="col-form-label">내용</label>
					<textarea class="form-control" id="content" disabled="disabled"></textarea>
				</div>
				<div class="mb-3">
					<label for="place" class="col-form-label">장소</label>
					<input type="text" name="place" id="place" class="form-control" disabled="disabled"/>
				</div>
				<div class="mb-3">
					<label for="dateUrl" class="col-form-label">경로</label><br/>
					<a href="" id="datelink"></a>
				</div>
				<div class="mb-3">
					<label for="allDayCheck" class="col-form-label">하루일정여부</label>
					<input type="checkbox"  id="allDayStatus" name="allDayStatus" disabled="disabled"> 
				</div>
				<div class="mb-3">
					<label for="date" class="col-form-label">일정</label>
					<div class="notAllDaySchedule" style="display:none">
						<input type="text" name="datetimes" id="startDate" class="form-control" disabled="disabled"/> ~ 
						<input type="text" name="datetimes" id="endDate" class="form-control" disabled="disabled"/> 
					</div>
					<div class="allDaySchedule" style="display:none">
						<input type="text" name="datetimes" id="allDate" class="form-control" disabled="disabled"/>
					</div>
				</div>
	        </div>
	        <div class="modal-footer">
			  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="cancelBtn">닫기</button>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
const streamInfo = document.getElementById('stream-info');
const currentUserId = streamInfo.dataset.userId; 
const roomId = streamInfo.dataset.roomId;

//8080 시그널링 서버와 WebSocket으로 연결합니다.
const socket = new WebSocket('ws://192.168.35.124:8080/signal');

/**
 * 'Live 방송하기' 버튼 클릭 시, 8080서버의 방송 개설 페이지를 새 창으로 엽니다.
 */
function startLive(){
    const streamInfo = document.getElementById('stream-info');
	const currentUserId = streamInfo.dataset.userId; 
    
    if (!currentUserId) {
        alert("로그인이 필요합니다.");
        return;
    }
    
    // 8080 서버의 방송 개설 페이지 주소 (/broadcast/new)
    // URL 파라미터로 로그인한 유저의 아이디를 넘겨줄 수 있습니다. (선택사항)
    const broadcastURL = `http://192.168.35.124:8080/broadcast/new?userId=${currentUserId}`;
    
    // 새 창(팝업)으로 방송 페이지를 엽니다.
    window.open(broadcastURL, 'broadcastWindow', 'width=1280,height=720');
}

/**
 * 'Live 시청하기' 버튼은 이제 8080서버의 메인 페이지(방송 목록)로 연결됩니다.
 * 사용자가 목록에서 직접 방송을 선택해서 들어가도록 합니다.
 */
function watchLive(){
    // 8080 서버의 메인 페이지 주소 (index.html)
    const watchURL = `http://192.168.35.124:8080/`;
    window.open(watchURL, 'watchWindow', 'width=1280,height=720');
}

$(function(){
	
	console.log("codeMap : ", ${codeMap})
	
	let fileMap = new Map();	// 업로드한 파일 담을 객체
	let fileNum = 0;		// 업로드한 파일의 순번

	let upFile = new Map();	// 수정 중 업로드한 파일 담을 객체
	let upFileNum = 0;		// 수정 중 업로드한 파일의 순번

	let deleteFileList = [];	// 삭제할 파일의 상세번호
	let deleteFileGroupNo = new Map();	// 삭제할 파일의 그룹번호

	let likeFlag = false;	// 좋아요 버튼 클릭 여부
	let oldLikeCount;
	let newLikeCount;
	
	let active = $("#artistTabYn").val();
	if(active){
		$("#artistPost").attr("class","tab-item active");
	}else{
		$("#fanPost").attr("class","tab-item active");
	}

	// 이미지 영역 가져오기
	let area = $("#imgArea");

	$("#insertPostFile").on("change",function(e){
		let files = e.target.files;

		let html = ``;
		for(let i=0; i<files.length; i++){
			let file = files[i];

			fileMap.set(fileNum.toString(),file);

			let reader = new FileReader();
    		reader.onload = function(e){
    			html += `
					<div class="imgDiv">
						<img src="\${e.target.result}"  data-fileNum='\${fileNum}' >
								<i class="bi bi-x-lg"></i>
						</img>

					</div>
					`;
        		fileNum++;
			$("#imgArea").html(html);
    		}
    		reader.readAsDataURL(file);
    		
		}

	});

	// 이미지 삭제 시 files map에 삭제
	area.on("click","i",function(){
		let pr = $(this).parent("div").remove();
		let cur = $(this).parent("div").children('img')[0].dataset.filenum;

		files.delete(cur);

	});

	$("#postSendBtn").on("click",function(){
		let checkeded = $("#postMemberShipYn").is(':checked');
		$("#memberShipYn").val(checkeded);
		let postForm = document.getElementById("postForm");

		let artGroupNo = $("#comuArtGroupNo").val();

		let data = new FormData(postForm);

		$.ajax({
			url : "/community/insert/post",
			type : "post",
			data : data,
			processData : false,
			contentType : false,
			success : function(res){
				if(res == 'OK'){
					alert("글 등록 성공!");
				}else{
					alert("글 등록 실패")
				}
				location.href = "/community/gate/" + artGroupNo + "/apt";
			},
			error : function(error){
				console.log(error.status);
			},
			beforeSend : function(xhr) {
		        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
		    }
		});
	});

	let artistBtnList = document.querySelectorAll('#artistSearchForm input[name=artistNm]');
	artistBtnList.forEach(artist => {
		artist.addEventListener("click",function(){
			let selectArtist = $(this).val();
			$("#searchType").val(selectArtist);

			$("#artistSearchForm").submit();
		})
	})
	
	$('.apt-tabs .tab-item').on('click', function() {
        // 모든 탭 버튼에서 'active' 클래스 제거
        $('.apt-tabs .tab-item').removeClass('active');
        // 클릭된 탭 버튼에 'active' 클래스 추가
        $(this).addClass('active');
        
        const targetId = $(this).attr('data-bs-target');
        console.log(targetId)
        $('.apt-content-area .tab-pane').removeClass('show active');
        
        $(targetId).addClass('show active');
        
        const currentTabId = $(this).attr('id');
        
        if (currentTabId === 'artistPost') {
            // 이전에 제안했던 loadPosts(true) 호출
            $('#artistTabYn').val('true');
            $('#artistSearchForm').submit();
        } else if (currentTabId === 'fanPost') {
            // 이전에 제안했던 loadPosts(false) 호출
            $('#artistTabYn').val('false');
            $('#artistSearchForm').submit();
        } else {
        	const artGroupNo = $('#comuArtGroupNo').val();
        	const $targetPane = $(targetId);
        	console.log(currentTabId)
        	
        	 if ($targetPane.data('loaded') === true) {
                 console.log(`Content for ${targetId} already loaded.`);
                 return; // 이미 로드되었으면 다시 요청하지 않음
            }
        	
        	let apiUrl = ``;
            if (currentTabId === 'schedule') {
                location.href = "/community/schedule/" + artGroupNo;
                console.log(${schedule});
                fullCalendar(${schedule});
            } else if (currentTabId === 'noticeApt') {
                apiUrl = `/community/notice/\${artGroupNo}`;
            }
            
            if(apiUrl){
            	$.ajax({
            		url : apiUrl,
            		type : "get",
            		success : function(html){
            			console.log(html)
            			$targetPane.html(html);
                        $targetPane.data('loaded', true);
            		},
            		error: function(xhr, status, error) {
                        console.error(`Error loading ${targetId}:`, status, error);
                        $targetPane.html('<p style="color: red;">콘텐츠를 불러오는데 실패했습니다.</p>');
                    },
                    complete: function() {
                        $targetPane.find('.loading-placeholder').hide();
                    }
            	});
            }
        }
	});
	

	// 아티스트 페이지에서 검색 버튼 클릭 시
	$("#searchFormBtn").on("click",function(){
		console.log($("#artistSearchForm").find("input:checked").val());
		
		let selectArtist = $("#artistSearchForm").find("input:checked").val();
		
		$("#searchType").val(selectArtist);
		
		$("#artistSearchForm").submit();
	});
	

	// 수정 버튼 클릭 시
	let editBtnList = document.querySelectorAll("#edit");		// 모든 수정 버튼을 nodeList로 가져옴
	editBtnList.forEach(div => {
		div.addEventListener("click",function(e){				// div 태그에 클릭 이벤트를 넘

			console.log("수정 모달 열기를 요청함");
		
			let postNum = e.target.dataset.postnum;					// 클릭한 div에 저장되어있는 postNum을 가져와 postForm순번 과 editPostForm순번의 스타일 display를 변경해줌으로 수정할 수 있게 변경해줌

			console.log("수정 버튼에 있는 data 속성을 가지고 옴 : postNum ", postNum);
			
			$("#postNum").val(postNum);
			
			updateModalInfo(postNum);

			

			$("#postUpdateBtn").on("click",function(){
				
				let tabCheck = $("#artistTabYn").val();
				if(tabCheck){
					let checkeded = $("#editPostMemberShipYn").is(':checked');
					$("#editMemberShipYn").val(checkeded);
				}
				
				let editPostForm = document.getElementById("editPostForm");

				let artGroupNo = $("#communityArtistGroupNo").val();

				if(deleteFileList != null && deleteFileList.length > 0){
					console.log(deleteFileList);
					$("#deleteFiles").val(deleteFileList);
				}

				let data = new FormData(editPostForm);

				$.ajax({
					url : "/community/update/post",
					type : "post",
					data : data,
					processData : false,
					contentType : false,
					success : function(res){
						if(res == "OK"){
							alert("글 수정 완료!");
						}else{
							alert("글 수정 실패!");
						}
						location.href = "/community/gate/" + artGroupNo + "/apt";
					},
					error : function(error){
						console.log(error.status);
					},
					beforeSend : function(xhr) {
				        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
				    }
				})
			});

		});
	})

	let deleteBtnList = document.querySelectorAll("#delete");
	deleteBtnList.forEach(div => {
		div.addEventListener("click",function(e){
			if(!confirm("정말로 삭제하시겠습니까?")){
				return false;
			}
			console.log("ehla")
			let postNum = e.target.dataset.postnum;
			let artGroupNo = $("#comuArtGroupNo").val();
			let data = new FormData();
			data.append("artGroupNo",artGroupNo);
			data.append("comuPostNo",postNum)
			
			$.ajax({
				url : "/community/delete/post/" + postNum,
				type : "post",
				data : data,
				contentType : false,
				processData : false,
				success : function(res){
					if(res == "OK"){
						alert("게시글이 삭제가 되었습니다.");
					}else{
						alert("게시글이 삭제가 되지 않았습니다.");
					}
					location.href = "/community/gate/" + artGroupNo + "/apt";
				},
				error : function(error){
					console.log(error.status);
				},
				beforeSend : function(xhr) {
			        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
			    }
			})
		});
	});


	let openDetailBtnList = document.querySelectorAll(".openPostModal");
	openDetailBtnList.forEach(div => {
		div.addEventListener("click",function(e){
			e.preventDefault();
			let detailModal = document.getElementById("detailPostModal");
			let myDetailModal = new bootstrap.Modal(detailModal);

			let postNum = e.target.closest(".openPostModal").dataset.postnum;

			myDetailModal.show(postNum);

			console.log(e);
		})
	});

	$("#replyBtn").on("click", function(e){
		e.preventDefault();
		let content = $("#comuReplyContent");
		if(content.val().trim() == null || content.val().trim() == ""){
			alert("댓글을 작성해주세요");
			return false;
		}

		let detailModal = document.getElementById("detailPostModal");
		let myDetailModal = bootstrap.Modal.getInstance(detailModal);

		myDetailModal.hide();
		
		let replyForm = document.getElementById("replyForm");

		let data = new FormData(replyForm);

		$.ajax({
			url : "/community/reply/insert",
			type : "post",
			data : data,
			processData : false,
			contentType : false,
			success : function(res){
				console.log(res);
				if(res.result == "OK"){
					let detailModalReOpen = document.getElementById("detailPostModal");
					let detailModal = new bootstrap.Modal(detailModalReOpen);
					let postNum = res.replyVO.comuPostNo;
					
					let feedbox = $(".feed-item.feedBox[data-post-id='"+postNum+"']").find("span.count");
					
					feedbox.html(res.replyVO.replyCount);
					
					detailModal.show(postNum);
				}
			},
			error : function(error){
				console.log(error.status);
			},
			beforeSend : function(xhr) {
		        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
		    }
		});
	});

	// 상세 모달창 열렸을 시
	$("#detailPostModal").on("show.bs.modal",function(e){
		$("#comuReplyContent").val("");
		$("#replyList").html("");
		$("#detailImgArea").html("");

		let postNum = e.relatedTarget;
		
		openDetailModal(postNum);

	})

	// 등록 모달 열렸을 시
	$("#insertPostModal").on("show.bs.modal",function(){
		$("#comuPostContent").val("");
		let tabCheck = $("#artistTabYn").val();
		if(tabCheck){
			$("#postMemberShipYn").prop("checked",false);
		}
		$("#insertPostFile").val("");
		$("#imgArea").html("");

		let content = document.getElementById("comuPostContent");
		contentLengthCheck(content);
	});

	// 수정 모달 닫았을 시
	$("#editPostModal").on("hide.bs.modal",function(){
		$("#editImgArea").html("");
		let tabCheck = $("#artistTabYn").val();
		if(tabCheck){
			$("#editPostMemberShipYn").prop("checked",false);
		}
		$("#editInsertPostFile").val("");
	});

	$("#detailPostModal").on("shown.bs.modal",function(){
		// 댓글 수정 클릭 시 (삭제됨)
// 		let replyUpdateBtnList = document.querySelectorAll("#replyUpdateBtn");
// 		replyUpdateBtnList.forEach(btn => {
// 			btn.addEventListener("click",function(e){
// 				e.preventDefault();

// 				let contentArea = $(this).parents(".reply").children(".replyContent")[0]
// 				let content =contentArea.innerText;
// 				let postNo = $(this).parents(".replyArea").find("#comuPostNo").val();
// 				console.log(contentArea)

// 				let html = `
// 					<div class="img-push pt-3 cmt-sub-text">
// 						<textarea class="form-control form-control-sm cmtContent" rows="5" cols="20" id="cmtContent" onkeyup="contentLengthCheck(this)" placeholder="Press enter to post comment">\${content}</textarea>
// 						<div class="text-right pt-2">
// 							<span class="pt-1"><span class="cmt-sub-size">0</span>/650</span>
// 							<button type="button" class="btn btn-sm btn-primary cmtBtn" id="replyUpdateForm">등록</button>
// 							<button type="button" class="btn btn-sm btn-secondary cmtBtn" id="replyUpdateCancel">취소</button>
// 						</div>
// 					</div>
// 				`;
// 				$(this).parents(".reply").children(".replyContent").append(html);

// 				$("#replyUpdateForm").on("click",function(){
// 					let detailModal = document.getElementById("detailPostModal");
// 					let myDetailModal = bootstrap.Modal.getInstance(detailModal);

// 					myDetailModal.hide();

// 					console.log($("#cmtContent").val());
// 					let content = $("#cmtContent").val();
// 					let replyNo = $(this).parents(".reply").children(".replyWriterInfo").find("#replyNo").val();

// 					let data = new FormData();
// 					data.append("comuReplyNo",replyNo);
// 					data.append("comuReplyContent",content);

// 					$.ajax({
// 						url : "/community/reply/update",
// 						type : "post",
// 						data : data,
// 						contentType : false,
// 						processData : false,
// 						success : function(res){
// 							console.log(res)
// 							if(res == 'OK'){
// 								alert("댓글 수정 완료!");
// 								let detailModalReOpen = document.getElementById("detailPostModal");
// 								let detailModal = new bootstrap.Modal(detailModalReOpen);

// 								detailModal.show(postNo);
// 							}
// 						},
// 						error : function(error){
// 							console.log(error.status)
// 						},
// 						beforeSend : function(xhr) {
// 					        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
// 					    }
// 					});
// 				});

// 				$("#replyUpdateCancel").on("click",function(){
// 					$("#cmtContent").parent('div').remove();

// 				});
// 			});
// 		});

		// 댓글 삭제 버튼 클릭 시
		let replyDeleteBtnList = document.querySelectorAll("#replyDeleteBtn");
		replyDeleteBtnList.forEach(btn => {
			btn.addEventListener("click",function(e){
				e.preventDefault();
				if(!confirm("정말로 삭제하시겠습니까?")){
					return false;
				}

				let detailModal = document.getElementById("detailPostModal");
				let myDetailModal = bootstrap.Modal.getInstance(detailModal);

				myDetailModal.hide();

				let test = e.target.dataset.comuReplyNo;
				let postNo = e.target.dataset.postNo;
				let replyNo = e.target.dataset.comuReplyNo;
				
				let data = new FormData();
				data.append("replyNo", replyNo)
				$.ajax({
					url : "/community/reply/delete",
					type : "post",
					data : data,
					contentType : false,
					processData : false,
					success : function(res){
						console.log(res)
						if(res == 'OK'){
							alert("댓글 삭제 완료!");

							let detailModalReOpen = document.getElementById("detailPostModal");
							let detailModal = new bootstrap.Modal(detailModalReOpen);

							detailModal.show(postNo);
						}
					},
					error : function(error){
						console.log(error.status);
					},
					beforeSend : function(xhr) {
				        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
				    }
				});
			})
		});

		oldLikeCount = $(this).find("#likeCount").html();
		console.log("처음 좋아요 수 : ", oldLikeCount);
		
		$("#likeButton").on("click", function(){
			console.log("누름");
			likeFlag = true;
			likeBtn($(this));
		});
		
	});


	$("#detailPostModal").on("hide.bs.modal",function(e){
		console.log("닫았을 때 : ", e);
		console.log(e.currentTarget);
		console.log("현재 : ", $(this).find("#likeCount").html());

		newLikeCount = $(this).find("#likeCount").html();

		let comuPostNo = $(this).find("#comuPostNo").val();
		let boardTypeCode = $(this).find("#boardTypeCode").val();
		let artGroupNo = $("#communityArtistGroupNo").val();

		// 기존의 좋아요 수가 40이라고 가정
		// 액션 1. 좋아요 버튼을 누르지 않고 창을 닫을 때 좋아요 수 변화가 없음
		// 액션 2. 좋아요 버튼을 누르고 창을 닫을 때 좋아요 수는 +1인 상태 그래서 창을 닫을 때 41이 되어 있음. 이전에 있던 좋아요 수보다 새로운 좋아요 수가 더 높기에 pM에 1이 들어가 있음
		// 액션 3. 좋아요 버튼을 취소하고 창을 닫을 떄 좋아요 수는 -1인상태 그래서 창을 닫을 때 39가 되어 있음. 이전에 있던 좋아요 수가 더 높기에 pM에 -1이 들어가 있음
		let pM = 0;
		if(oldLikeCount == newLikeCount){
			pM = 0;
		}else if(oldLikeCount > newLikeCount){
			pM = -1;
		}else if(oldLikeCount < newLikeCount){
			pM = +1;
		}
		console.log("계산 : ", pM)

		if(likeFlag){	// 좋아요가 변경이 되었다면
			let data = new FormData();
			data.append("comuPostNo",comuPostNo);
			data.append("boardTypeCode",boardTypeCode);
			data.append("artGroupNo",artGroupNo);
			data.append("insertDelete", pM);

			likeUpdate(data);
		}
		
	});
	
	// 수정 모달에서 파일 선택 클릭 시 
	$("#editInsertPostFile").on("change",function(e){
		console.log("수정 이미지 추가됨")
		let files = e.target.files;

		for(let i=0; i<files.length; i++){
			let file = files[i];

			fileMap.set(fileNum.toString(),file);

			let reader = new FileReader();
    		reader.onload = function(e){
    			html = `
					<div class="imgDiv">
						<img src="\${e.target.result}"  data-fileNum='\${fileNum}' >
								<i class="bi bi-x-lg"></i>
						</img>
					</div>
					`;
        		fileNum++;
				$("#editImgArea").append(html);
    		}
    		reader.readAsDataURL(file);
		}

	});
	
	// 수정 모달에 있는 파일 영역에 i태그 클릭 시 
	$("#editImgArea").on("click","i",function(){
		$(this).parent('div').remove();		// 삭제할 파일을 감싸고 있는 div를 삭제함

		// 수정 이미지 영역에 이미지 element
		let img = $(this).parent('div').find('img')[0];
		console.log("img : ", img);

		if(img.dataset.filenum != null){
			deleteFileList.push(img.dataset.filenum);	// 삭제할 파일 리스트에 삭제한 파일의 상세번호를 넣음
		}
		deleteFileGroupNo.set(img.dataset.filegroupno,deleteFileList);	// 삭제할 파일 리스트를 삭제할 파일의 그룹번호를 키로 설정하고 안에 삭제할 파일 리스트를 넣음
	});

	$("#reportModal").on("show.bs.modal",function(e){
		console.log("신고 모달 열림 / 게시판 번호 : " + e.relatedTarget.getAttribute('data-bs-whatever'));
		console.log("보드유형 : " + e.relatedTarget.getAttribute('data-bs-boardType'));
		
		let postNo = e.relatedTarget.getAttribute('data-bs-whatever');
		let boardType = e.relatedTarget.getAttribute('data-bs-boardType');
		let comuProfileNo = e.relatedTarget.getAttribute('data-bs-comuProfileNo');
		let comuNick = e.relatedTarget.getAttribute('data-bs-comuNick');
		let comuContent = e.relatedTarget.getAttribute('data-bs-comuContent');
		let selectType = e.relatedTarget.getAttribute('data-bs-selectType');
		let comuReplyNo = e.relatedTarget.getAttribute('data-bs-comuReplyNo');
		
		console.log("boardType:", boardType);
		
		//let code = ${codeMap};
		let reasonCode = code.reasonCode;
		let reportStatCode = code.reportStatCode;
		let reportTarCode = code.reportTarCode;

		let targetCode;
		if(boardType == 'ARTIST_BOARD'){
			for(let i=0; i<reportTarCode.length; i++){
				if(reportTarCode[i].commCodeDetNo === selectType){
					targetCode = reportTarCode[i].commCodeDetNo;
				}
			}
			
			console.log("아티스트게시판임", targetCode)
		}
		
		let info = {
			"postNo" : postNo,
			"boardType" : boardType,
			"comuProfileNo" : comuProfileNo,
			"reasonCode" : reasonCode,
			"reportTarCode" : targetCode,
			"comuNick" : comuNick,
			"comuContent" : comuContent,
			"comuReplyNo" : comuReplyNo
		};
		reportModalInfo(info);

	});

	
	$("#reportSendBtn").on("click",function(){
		let reportForm = document.getElementById("reportForm");

		let data = new FormData(reportForm);
		console.log(data)
		$.ajax({
			url : "/community/send/report",
			type : "post",
			data : data,
			contentType : false,
			processData : false,
			success : function(res){
				if(res == 'OK'){
					alert("신고가 접수되었습니다!");
					$("#reportModal").modal('hide');
				}else if(res == 'EXIST'){
					alert("이미 신고하셨습니다.");
				}
			},
			error : function(error){
				console.log(error.status);
			},
			beforeSend : function(xhr) {
		        xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}');
		    }
		});
	});

	$("#reportModal").on("hide.bs.modal",function(e){
		$("#targetComuReplyNo").val("");
	});

	$("#scheduleModal").on("show.bs.modal",function(e){
		console.log(e);
		let flag = true;	// 상세일정이라는 의미
		
		let modalTitle = $("#title");		// 상세 모달 제목
    	let modalContent = $("#content");	// 상세 모달 내용
    	let modalPlace = $("#place");		// 상세 모달 장소
    	let modalUrl = $("#dateUrl");		// 상세 모달 
    	let modalTextColor = $("#textColor");	// 상세 모달 제목 색상
    	let modalBackgroundColor = $("#backgroundColor");	// 일정 배경 색
    	let modalDateId = $("#dateId");		// 일정 번호
    	let link = $("#datelink");			// url태그
    	let modalAllDayStatus = $("#allDayStatus");
    	
    	let twolDayDiv = $("div[class=notAllDaySchedule]");
    	let oneDayDiv = $("div[class=allDaySchedule]");
    	let modalStartDate = $("#startDate");
    	let modalEndDate = $("#endDate");
    	let allDate = $("#allDate");
    	
		let target = e.relatedTarget;
		
		console.log("상세모달", twolDayDiv);
		
		let { title, url, textColor, backgroundColor, id, allDay, startStr, endStr, start, end } = target.event;
		let { allDayStatus, content, place } = target.event.extendedProps;
		
		modalTitle.val(title);
    	modalContent.html(content);
    	modalPlace.val(place);
    	modalUrl.val(url);
    	modalTextColor.val(textColor);
    	modalBackgroundColor.val(backgroundColor);
    	modalDateId.val(id);
    	modalAllDayStatus.val(allDayStatus)
    	
    	link.attr("href",url);
    	link.html(title+"바로가기");
    	
    	if(allDay){
    		$("#allDayStatus").prop("checked",true);
    		
    		if(endStr == null || end == null){
    			endStr = startStr;
    			oneDayDiv.attr("style","display:block");
    			allDate.val(startStr)
    		}else{
    			twolDayDiv.attr("style","display:block")
	    		modalStartDate.val(startStr);
	    		modalEndDate.val(endStr);
    		}
    		
    	}else{
    		$("#allDayStatus").prop("checked",false);
    		twolDayDiv.attr("style","display:block");
    		let formatStart = scheduleDateFormat(start);
    		let formatEnd = scheduleDateFormat(end);
    		modalStartDate.val(formatStart);
    		modalEndDate.val(formatEnd);
    	}
	});
	
	$("#scheduleModal").on('hide.bs.modal',function(){
		let twolDayDiv = $("div[class=notAllDaySchedule]");
    	let oneDayDiv = $("div[class=allDaySchedule]");
    	
    	twolDayDiv.attr("style","display:none");
    	oneDayDiv.attr("style","display:none");
	});
	
	$("#test").on("click",function(){
		$("#postDetailModal").modal('show');
	});
	


	// 팔로우 기능
	// 팔로우버튼
	let followFlag = "${followFlag}" != 'N' ? true : false;
	let followToggleBtn = $("#followToggleBtn"); // 팔로우 버튼

	followToggleBtn.on("click",function(){
		if(followFlag){
			Swal.fire({
				   title: '팔로우를 취소하시겠습니까?',
				   text: '취소 후 재 가입시 기존 데이터에 접근할 수 없습니다.',
				   icon: 'warning',

				   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
				   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
				   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
				   confirmButtonText: '확인', // confirm 버튼 텍스트 지정
				   cancelButtonText: '취소', // cancel 버튼 텍스트 지정

				}).then(result => {
				   // 만약 Promise리턴을 받으면,
				    if(result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
				    	let comuProfileNo = "${userProfile.comuProfileNo}";
				    	let artGroupNo = "${userProfile.artGroupNo}";
				    	let memUsername = "${userProfile.memUsername}";
				    	let data = {
				    			comuProfileNo : comuProfileNo,
				    			artGroupNo : artGroupNo,
				    			memUsername : memUsername,
				    	}
				    	// 팔로우 취소
				    	$.ajax({
				    		url : "/api/community/removeapt",
				    		type : "post",
				    		contentType : "application/json; charset=utf-8",
				    		data : JSON.stringify(data),
				    		beforeSend : function(xhr){
								xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}')
							},
				    		success : function(res){
				    			location.reload();
				    		},
				    		error : function(err){
				    			console.log(err);
				    			sweetAlert("error","취소 도중 에러가 발생했습니다. 다시 시도해주세요!");
				    		}
				    	});

				    }
				});
		}else{
			$("#commProfileModal").modal("show");
		}
	})

	if(!followFlag){
		let followBtn = $("#followBtn");	// 오버레이쪽 팔로우 버튼
		let commProfileModal = $("#commProfileModal"); // 커뮤니티 프로필 생성 모달
		let previewImgBox = $("#previewImgBox"); //미리보기이미지박스
		let imgFile = $("#imgFile"); // 이미지 첨부 파일
		let previewImg = $("#previewImg"); // 미리보기 이미지
		let comuNicknm = $("#comuNicknm"); // 닉네임 필드
		let file = null;	// 파일 없으면 null
		let profileSubmitBtn = $("#profileSubmitBtn"); // 닉네임 등록 버튼

		followBtn.on("click",function(){
			commProfileModal.modal("show");
		});

		// 프로필 이미지 박스 클릭시 이미지파일 선택
		previewImgBox.on("click",function(){
			imgFile.click();
		})

		// 프로필 이미지 이벤트
		imgFile.on("change",function(){
			const defaultPath = "${pageContext.request.contextPath}/upload/profile/base/defaultImg.png";
			const maxSize = 2 * 1024 * 1024;
			file = this.files[0];

			if(file == null){
				previewImg.attr("src", defaultPath);
				return false;
			}

			if(file.size > maxSize){
				sweetAlert("error", "파일 사이즈는 2MB 미만으로 선택해주세요!");
				$(this).val("");
				file = null;
				previewImg.attr("src", defaultPath);
				return false;
			}

			if(!file.type.startsWith("image/")){
				sweetAlert("error", "이미지파일만 선택해주세요");
				$(this).val("");
				file = null;
				previewImg.attr("src", defaultPath);
				return false;
			}

			let fileReader = new FileReader();
			fileReader.onload = function(e){
				previewImg.attr("src", e.target.result);
			};

			fileReader.readAsDataURL(file);
		})

		profileSubmitBtn.on("click",function(){
			let comuNicknmVal = comuNicknm.val();
			if(comuNicknmVal == null || comuNicknmVal.trim() == ''){
				sweetAlert("error","닉네임을 입력해주세요");
				return false;
			}
			if(comuNicknmVal.length > 12){
				sweetAlert("error","닉네임은 12자 이내로 입력해주세요");
				return false;
			}

			let formData = new FormData();
			let artGroupNo = "${artistGroupVO.artGroupNo}";
			let memUsername = "${user.username}";
			formData.append("artGroupNo",artGroupNo);
			formData.append("memUsername",memUsername);
			formData.append("comuNicknm", comuNicknmVal);
			if(file != null){
				formData.append("imgFile", file);
			}
			joinCommunity(formData);
		})

	}

	function joinCommunity(formData){
		$.ajax({
			url : '/api/community/joinapt',
			type : "post",
			processData : false,
			contentType : false,
			data : formData,
			beforeSend : function(xhr){
				xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}')
			},
			success : function(res){
				location.reload();
			},
			error : function(err){
				console.log(err);
				sweetAlert("error","팔로우 하는 도중 에러가 발생했습니다. 다시 시도해주세요!");
			}
		});
	}

	let myProfile = $("#myProfile"); // 마이프로필 엘리먼트
	myProfile.on("click",function(){
		let artGroupNo = "${artistGroupVO.artGroupNo}";
		let comuProfileNo = $(this).data("comuProfileNo");
		location.href = `${pageContext.request.contextPath}/community/\${artGroupNo}/profile/\${comuProfileNo}`;
	});


	// 모달 수정 부분
	// feedItem 클릭시 모달 오픈
	$(".feedBox").each((i,v) => {
		$(v).on("click",function(){
			let postNum = $(this).data("postId");

			openDetailModal(postNum);
			$("#detailPostModal").modal("show");
		})
	});
});
function contentLengthCheck(ele){
	let size = ele.value.length;
	let text = ele.value;
	if(size > 1000){
		alert("글 작성은 1000자 이상을 넘을 수 없습니다.");
		let subText = text.substring(0,1000);
		ele.value = subText;
		$(ele).parents("form").find(".cmt-sub-size").text(subText.length);
		return false;
	}

	$(ele).parent("form").find(".cmt-sub-size").text(size);
}

function replyContentLengthCheck(ele){
	let size = ele.value.length;
	let text = ele.value;
	if(size > 300){
		alert("댓글 작성은 300자 이상을 넘을 수 없습니다.");
		let subText = text.substring(0,300);
		ele.value = subText;
		$(ele).parents(".comment-form-container").parent("#replyArea").find(".cmt-sub-size").text(subText.length);
		return false;
	}

	$(ele).parent(".comment-form-container").parent("#replyArea").find(".cmt-sub-size").text(size);
}


function dateFormat(jsonDate){
	if (!jsonDate) return "";
	let date = new Date(jsonDate);
	let month = date.getMonth() + 1;
    let day = date.getDate();
    let hour = date.getHours();
    let minute = date.getMinutes();
    let second = date.getSeconds();

    month = month >= 10 ? month : '0' + month;
    day = day >= 10 ? day : '0' + day;
    hour = hour >= 10 ? hour : '0' + hour;
    minute = minute >= 10 ? minute : '0' + minute;
    second = second >= 10 ? second : '0' + second;

    return month + '.' + day + '. ' + hour + ':' + minute;
}

function scheduleDateFormat(jsonDate){
	if (!jsonDate) return "";
	let date = new Date(jsonDate);
	let month = date.getMonth() + 1;
    let day = date.getDate();
    let hour = date.getHours();
    let minute = date.getMinutes();
    let second = date.getSeconds();

    month = month >= 10 ? month : '0' + month;
    day = day >= 10 ? day : '0' + day;
    hour = hour >= 10 ? hour : '0' + hour;
    minute = minute >= 10 ? minute : '0' + minute;
    second = second >= 10 ? second : '0' + second;

    return month + '-' + day + ' ' + hour + ':' + minute;
}

// 좋아요 버튼 클릭 시
function likeBtn(e){
	let icon = e.children('i');
	let like = e.children('span');

	let iconAttr = icon.attr("class")
	let likeCount = e.children('span').html();

	console.log("iconAttr", iconAttr);
	let updateLikeCount;

	if(iconAttr === "bi bi-heart-fill"){
		icon.attr("class","bi bi-heart");
		updateLikeCount = parseInt(likeCount) - 1;
	}else{
		icon.attr("class","bi bi-heart-fill");
		updateLikeCount = parseInt(likeCount) + 1;
	}

	like.html(updateLikeCount);

}

// 좋아요 수 업데이트
function likeUpdate(data){
	$.ajax({
		url : "/community/like/update",
		type : "post",
		data : data,
		processData : false,
		contentType : false,
		success : function(res){
			if(res == 'OK'){
				location.reload();
			}
		},
		error : function(error){
			console.log(error.status);
		},
		beforeSend : function(xhr){
			xhr.setRequestHeader('${_csrf.headerName}', '${_csrf.token}')
		}
	});
}

/* let info = {
"postNo" : postNo,
"boardType" : boardType,
"comuProfileNo" : comuProfileNo,
"reasonCode" : reasonCode,
"reportTarCode" : reportTarCode,
"comuNick" : comuNick,
"comuContent" : comuContent
"comuReplyNo" : comuReplyNo
}; */

function reportModalInfo(info){
	console.log("처리하기 : " + info)
// 	<input type="radio" class="btn-check" name="options-outlined" id="success-outlined" autocomplete="off" checked>
// 	<label class="btn btn-outline-primary" for="success-outlined">Checked success radio</label>

// 	<input type="radio" class="btn-check" name="options-outlined" id="danger-outlined" autocomplete="off">
// 	<label class="btn btn-outline-danger" for="danger-outlined">Danger radio</label>
	let postNo = info.postNo;	
	let boardType = info.boardType;  
	let comuProfileNo = info.comuProfileNo; 
	let reasonCodeList = info.reasonCode;	
	let reportTarCode = info.reportTarCode; 
	let artGroupNo = $("#communityArtistGroupNo").val();
	let comuReplyNo = info.comuReplyNo;
	
	console.log(artGroupNo)

	let targetNick = info.comuNick;

	let targetContent = info.comuContent;

	let radioHtml = ``;
	for(let i=0; i<reasonCodeList.length; i++){
		let reasonCode = reasonCodeList[i];
		radioHtml += `
			<input type="radio" class="btn-check" name="reportReasonCode" id="\${reasonCode.commCodeDetNm}" value="\${reasonCode.commCodeDetNo}" autocomplete="off">
		 	<label class="btn btn-outline-primary" for="\${reasonCode.commCodeDetNm}">\${reasonCode.description}</label>
		`;
	}

	$(".radioArea").html(radioHtml);

	$("#targetNick").val(targetNick);
	$("#targetContent").html(targetContent);

	$("#targetComuPostNo").val(postNo);
	$("#targetBoardTypeCode").val(boardType);
	$("#reportArtGroupNo").val(artGroupNo);
	$("#targetComuProfileNo").val(comuProfileNo);
	$("#reportTargetTypeCode").val(reportTarCode);
	
	if(comuReplyNo != null){
		$("#targetComuReplyNo").val(comuReplyNo);
	}

	console.log("타겟 코드 : ", reportTarCode);
}

function updateModalInfo(postNum){
	$.ajax({
		url : "/community/post/get/" + postNum,
		type : "get",
		success : function(res){
			console.log("수정 모달에 등록 될 정보를 성공적으로 가지고 옴",res);

			$("#editComuPostContent").text(res.comuPostContent);

			let content = document.getElementById("editComuPostContent");
			contentLengthCheck(content);

			$("#fileGroupNo").val(res.fileGroupNo);
			console.log("가지고 온 정보 중 파일 그룹번호를 fileGroupNo아이디를 가진 input의 히든 타입에 값을 넣어줌 fileGroupNo : ", res.fileGroupNo);

			if(res.artistTabYn){
				if(res.memberShipYn){
					$("#editPostMemberShipYn").prop("checked",true);
				}
				$("#checkBoxMbs").attr("style", "display:block");
			}else{
				$("#checkBoxMbs").attr("style", "display:none");
			}

			let html = ``;
			if(res.postFiles != null && res.postFiles.length > 0){
				for(let i=0; i<res.postFiles.length; i++){
					let postFile = res.postFiles[i];
					html += `
						<div class="imgDiv">
							<img src="\${postFile.webPath}"  data-fileNum='\${postFile.attachDetailNo}' >
									<i class="bi bi-x-lg"></i>
							</img>
						</div>
					`;
				}
			}

			$("#editImgArea").append(html);

			let modal = document.getElementById("editPostModal")
			let myModal = new bootstrap.Modal(modal);
			myModal.show();

		},
		error : function(error){
			console.log(error.status);
		}
	});
}

// 모달 수정 부분
function openDetailModal(postNum){

	console.log("postNum: ", postNum)
	let artGroupNo = $("#communityArtistGroupNo").val();

	let data = new FormData();
	data.append("artGroupNo",artGroupNo);
	data.append("comuPostNo",postNum )

	$.ajax({
		url : "/community/post/detail/" + postNum,
		type : "get",
		data : {
			"artGroupNo" : artGroupNo,
			"comuPostNo" : postNum
		},
		success : function(res){
			console.log(res);
			// 작성자 정보
			let writer = res.writerProfile;
			let {comuProfileImg : writerImg, comuNicknm : writerNick, comuProfileNo:writerComuProfileNo} = writer;
			let userProfileNo = 0;
				if("${not empty userProfile}"){
					userProfileNo = "${userProfile.comuProfileNo}"
				}
			// 게시판 정보
			let {comuPostContent:content,postFiles,boardTypeCode
				,comuPostNo,likeYn, comuPostRegDate:regDate
				,comuPostModDate : modDate
				,comuPostLike : likeCount, comuPostReplyList, comuPostReplyCount} = res
			
			console.log("comuPostReplyCount : ", comuPostReplyCount);
				
			$("#comuPostNo").val(comuPostNo);
			$("#boardTypeCode").val(boardTypeCode);

			let likeIcon = $("#likeBtn").children('i');
			let likeClass;
			if(likeYn == 'Y'){
				likeClass = "bi bi-suit-heart-fill";
			}else{
				likeClass = "bi bi-suit-heart";
			}
			likeIcon.attr("class",likeClass);

			let date;
			if(regDate === modDate){
				date = dateFormat(regDate);
			}else{
				date = dateFormat(modDate) + "(수정됨)";
			}

			let postHtml = ``;
			postHtml = `
				<div class="post-pane-header">
                	<div class="d-flex align-items-center">
                        <img src="\${writerImg}" class="rounded-circle" width="50px" height="50px">
                        <div class="ms-2">
                            <strong class="d-block">\${writerNick}</strong>
                            <small class="text-muted">\${date}</small>
                        </div>
                	</div>
                	<div class="dropdown">
				        <button class="btn btn-link text-secondary p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
				            <i class="bi bi-three-dots-vertical"></i>
				        </button>
				        <ul class="dropdown-menu"
				`;
			if(writerComuProfileNo == userProfileNo){
				postHtml += `
					<li><button class="dropdown-item" data-comu-post-no="\${postNum}" id="edit" >수정</button></li>
		            <li><button class="dropdown-item" data-comu-post-no="\${postNum}" id="delete">삭제</button></li>
				`;
			}else{
				postHtml += `
					<li><button class="dropdown-item text-danger" data-comu-post-no="\${postNum}" >신고</button></li>
				`;
			}
			postHtml += `
				        </ul>
				    </div>
                </div>
                <div class="post-pane-body">
                `;
            if(postFiles != null && postFiles.length > 0){
            	for(let file of postFiles){
            		postHtml += `
            			<img src="\${file.webPath}" alt="\${file.fileOriginalNm}" width="150px" height="150px">
            		`;
            	}
            }
            postHtml += `
                	<p>\${content}<p>
                </div>
                <div class="post-pane-footer">
                `;
            if(likeYn == 'Y'){
            postHtml += `
				    <button type="button" class="btn btn-like active" data-comu-post-no="\${postNum}" data-comu-profile-no="\${userProfileNo}" id="likeButton">
				        <i class="bi bi-heart-fill"></i>
				        <span id="likeCount">\${likeCount}</span>
				    </button>
            	`;
            }else{
            	postHtml += `
				    <button type="button" class="btn btn-like" data-comu-post-no="\${postNum}" data-comu-profile-no="\${userProfileNo}" id="likeButton">
				        <i class="bi bi-heart"></i>
				        <span id="likeCount">\${likeCount}</span>
				    </button>
            	`;
            }
            postHtml +=`
				</div>
			`;

			$("#postBox").html(postHtml);

			$("#replyCount").html("답글 " + comuPostReplyCount + "개");

			// 댓글 영역
			let replyHtml = ``;
			for(let reply of comuPostReplyList){
				let {comuReplyContent, comuReplyRegDate, comuReplyNo, replyMember, comuReplyModDate} = reply;
				let {comuProfileImg, comuNicknm, comuProfileNo:replyComuProfileNo} = replyMember;
				replyHtml += `
					<div class="comment-item">
		            <img src="\${comuProfileImg}" class="rounded-circle comment-avatar">
		            <div class="comment-main-wrapper">
		            	<div class="comment-header">
		            		<strong>\${comuNicknm}</strong>
		            		<div class="dropdown">
						        <button class="btn btn-link text-secondary p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
						            <i class="bi bi-three-dots-vertical"></i>
						        </button>
						        <ul class="dropdown-menu">
					`;
					if(userProfileNo == replyComuProfileNo){
						replyHtml += `
				            <li><button class="dropdown-item" data-comu-reply-no="\${comuReplyNo}" data-post-no="\${comuPostNo}" id="replyDeleteBtn">삭제</button></li>
						`;
					}else{
						replyHtml += `
							<li><button class="dropdown-item text-danger" 
								data-bs-toggle="modal"
								data-bs-target="#reportModal"
								data-bs-whatever="\${comuPostNo}"
								data-bs-comuReplyNo="\${comuReplyNo}"
								data-bs-boardType="\${boardTypeCode}"
								data-bs-comuProfileNo="\${replyComuProfileNo}"
								data-bs-comuNick="\${comuNicknm}"
								data-bs-comuContent="\${comuReplyContent}"
								data-bs-selectType="RTTC002"
								>신고</button></li>
						`;
					}
					replyHtml += `
										</ul>
						            </div>
						        </div>
						        <div class="comment-body-text"> <p>\${comuReplyContent}</p>
						            <small class="text-muted">\${dateFormat(comuReplyModDate)}</small>
						        </div>
						    </div>
						</div>
					`;
			}
			$("#replyList").html(replyHtml);

			$("#boardTypeCode",$("#postBox")).val(boardTypeCode);
			$("#comuPostNo",$("#postBox")).val(comuPostNo)

		},
		error : function(error){
			console.log(error.status);
		}
	});
}

function fullCalendar(schedule){
	var calendarEl = document.getElementById('calendar');
	var calendar = new FullCalendar.Calendar(calendarEl,{
		height : 'auto',
		initialView : 'dayGridMonth',
		locale : 'ko',
		buttonText : {
			today : '오늘',
			month : '달',
			week : '이번주'
		},
		events : schedule,
		eventDidMount: function(info) {
			console.log(info);
			
			let { place, content } = info.event.extendedProps;
			
			tooltipHtml = `
				<div> 장 소 : \${place}</div>
				<div> 내 용 : \${content}</div>
			`;
			var tooltip = new bootstrap.Tooltip(info.el, {
			   title : tooltipHtml,
			html : true,
			   placement: 'top',
			   trigger: 'hover',
			   container: 'body'
			});
	    },
	    headerToolbar : {
			start : 'prevYear,prev,next,nextYear today',
			center : 'title',
			end : 'dayGridMonth,dayGridWeek'
		},
		eventClick : function(e){
        	e.jsEvent.cancelBubble = true;		// 일정에 있는 url 막기
        	e.jsEvent.preventDefault();
        	
        	const detailModal = new bootstrap.Modal(document.getElementById('scheduleModal'));
        	
        	detailModal.show(e);
        },
	});
	calendar.render();
}
</script>
</body>
</html>