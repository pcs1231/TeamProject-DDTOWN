package kr.or.ddit.vo.artist;

import java.util.Date;
import java.util.List;

import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.vo.community.CommunityProfileVO;
import kr.or.ddit.vo.community.CommunityVO;
import lombok.Data;

@Data
public class ArtistGroupVO {
	private Date artGroupRegDate;
	private String artGroupDelYn;
	private String artGroupProfileImg;
	private Date artGroupModDate;
	private int artGroupNo;
	private String artGroupTypeCode;
	private String empUsername;
	private String artGroupDebutdate;
	private String artGroupNm;
	private String artGroupContent;
	private String empName;
	
	List<ArtistVO> artistList; // 소속 아티스트 목록
	
	private MultipartFile profileImage;	// 그룹 프로필이미지 파일
	private int[] addArtists;	// 아티스트 추가 목록
	private int[] addAlbums;		// 앨범 추가 목록
	private int[] removeArtists;	// 아티스트 제거 목록
	private int[] removeAlbums;	// 아티스트 제거 목록
	
	private CommunityVO communityVO; // 커뮤니티 총 팬 수, 아티스트 수 구하기 위함
	
	// 수정 시 수정할 데이터를 담을 필드
	private String memberArtNos;
	
	// 수정 시 수정할 앨범 데이터를 담을 필드 (추가)
    private String selectedAlbumNos;
	
	// 해당 그룹의 모든 앨범 정보
    private List<AlbumVO> albumList;
    
    //데뷔 앨범을 찾아 반환
    public String getDebutAlbum() {
    	if(albumList == null || albumList.isEmpty()) {
    		return null;
    	}
    	// 데뷔 앨범 식별 로직(발매일이 가장 빠른 앨범의 명)
    	AlbumVO albumVO = albumList.stream()
    				 	.min((a1, a2) -> a1.getAlbumRegDate().compareTo(a2.getAlbumRegDate()))
    				 	.orElse(null);
    	String albumName = "";
    	if(albumVO != null){
    		albumName = albumVO.getAlbumNm();
    	}
    	return albumName;
    }
}
